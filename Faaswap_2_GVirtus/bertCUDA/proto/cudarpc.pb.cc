// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cudarpc.proto

#include "cudarpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_cudarpc_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_cudarpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_WapperQuery;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_cudarpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_cudaMemcpyAsyncResponse;
}  // namespace protobuf_cudarpc_2eproto
namespace cudarpc {
class WapperQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WapperQuery>
      _instance;
} _WapperQuery_default_instance_;
class QueryListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryList>
      _instance;
} _QueryList_default_instance_;
class genericResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<genericResponse>
      _instance;
} _genericResponse_default_instance_;
class handleResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<handleResponse>
      _instance;
} _handleResponse_default_instance_;
class setStreamQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<setStreamQuery>
      _instance;
} _setStreamQuery_default_instance_;
class cublasSetMathModeQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cublasSetMathModeQuery>
      _instance;
} _cublasSetMathModeQuery_default_instance_;
class cublasGetMathModeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cublasGetMathModeResponse>
      _instance;
} _cublasGetMathModeResponse_default_instance_;
class cublasSgemmQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cublasSgemmQuery>
      _instance;
} _cublasSgemmQuery_default_instance_;
class cublasSgemmStridedBatchedQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cublasSgemmStridedBatchedQuery>
      _instance;
} _cublasSgemmStridedBatchedQuery_default_instance_;
class cudnnCreateDesciptorResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cudnnCreateDesciptorResponse>
      _instance;
} _cudnnCreateDesciptorResponse_default_instance_;
class cudnnSetTensorNdDescriptorQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cudnnSetTensorNdDescriptorQuery>
      _instance;
} _cudnnSetTensorNdDescriptorQuery_default_instance_;
class cudnnSetFilterNdDescriptorQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cudnnSetFilterNdDescriptorQuery>
      _instance;
} _cudnnSetFilterNdDescriptorQuery_default_instance_;
class cudnnSetConvolutionNdDescriptorQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cudnnSetConvolutionNdDescriptorQuery>
      _instance;
} _cudnnSetConvolutionNdDescriptorQuery_default_instance_;
class cudnnSetConvolutionGroupCountQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cudnnSetConvolutionGroupCountQuery>
      _instance;
} _cudnnSetConvolutionGroupCountQuery_default_instance_;
class cudnnSetConvolutionMathTypeQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cudnnSetConvolutionMathTypeQuery>
      _instance;
} _cudnnSetConvolutionMathTypeQuery_default_instance_;
class cudnnGetConvolutionForwardAlgorithm_v7QueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cudnnGetConvolutionForwardAlgorithm_v7Query>
      _instance;
} _cudnnGetConvolutionForwardAlgorithm_v7Query_default_instance_;
class cudnnGetConvolutionForwardAlgorithm_v7ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cudnnGetConvolutionForwardAlgorithm_v7Response>
      _instance;
} _cudnnGetConvolutionForwardAlgorithm_v7Response_default_instance_;
class cudnnConvolutionForwardQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cudnnConvolutionForwardQuery>
      _instance;
} _cudnnConvolutionForwardQuery_default_instance_;
class cudnnBatchNormalizationForwardInferenceQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cudnnBatchNormalizationForwardInferenceQuery>
      _instance;
} _cudnnBatchNormalizationForwardInferenceQuery_default_instance_;
class cuInitQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cuInitQuery>
      _instance;
} _cuInitQuery_default_instance_;
class cuDevicePrimaryCtxGetStateQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cuDevicePrimaryCtxGetStateQuery>
      _instance;
} _cuDevicePrimaryCtxGetStateQuery_default_instance_;
class cuDevicePrimaryCtxGetStateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cuDevicePrimaryCtxGetStateResponse>
      _instance;
} _cuDevicePrimaryCtxGetStateResponse_default_instance_;
class cuGetProcAddressQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cuGetProcAddressQuery>
      _instance;
} _cuGetProcAddressQuery_default_instance_;
class cuGetProcAddressResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cuGetProcAddressResponse>
      _instance;
} _cuGetProcAddressResponse_default_instance_;
class getVersionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<getVersionResponse>
      _instance;
} _getVersionResponse_default_instance_;
class cudaGetDeviceResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cudaGetDeviceResponse>
      _instance;
} _cudaGetDeviceResponse_default_instance_;
class cudaGetDeviceCountResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cudaGetDeviceCountResponse>
      _instance;
} _cudaGetDeviceCountResponse_default_instance_;
class cudaGetDevicePropertiesQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cudaGetDevicePropertiesQuery>
      _instance;
} _cudaGetDevicePropertiesQuery_default_instance_;
class cudaGetDevicePropertiesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cudaGetDevicePropertiesResponse>
      _instance;
} _cudaGetDevicePropertiesResponse_default_instance_;
class cudaDeviceGetAttributeQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cudaDeviceGetAttributeQuery>
      _instance;
} _cudaDeviceGetAttributeQuery_default_instance_;
class cudaDeviceGetAttributeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cudaDeviceGetAttributeResponse>
      _instance;
} _cudaDeviceGetAttributeResponse_default_instance_;
class cudaMallocQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cudaMallocQuery>
      _instance;
} _cudaMallocQuery_default_instance_;
class cudaMallocResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cudaMallocResponse>
      _instance;
} _cudaMallocResponse_default_instance_;
class cudaFreeQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cudaFreeQuery>
      _instance;
} _cudaFreeQuery_default_instance_;
class cudaMemcpyQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cudaMemcpyQuery>
      _instance;
} _cudaMemcpyQuery_default_instance_;
class cudaMemcpyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cudaMemcpyResponse>
      _instance;
} _cudaMemcpyResponse_default_instance_;
class cudaMemcpyAsyncQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cudaMemcpyAsyncQuery>
      _instance;
} _cudaMemcpyAsyncQuery_default_instance_;
class cudaGetSymbolAddressQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cudaGetSymbolAddressQuery>
      _instance;
} _cudaGetSymbolAddressQuery_default_instance_;
class cudaGetSymbolAddressResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cudaGetSymbolAddressResponse>
      _instance;
} _cudaGetSymbolAddressResponse_default_instance_;
class cudaMemcpyAsyncResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cudaMemcpyAsyncResponse>
      _instance;
} _cudaMemcpyAsyncResponse_default_instance_;
class cudaMemsetAsyncQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cudaMemsetAsyncQuery>
      _instance;
} _cudaMemsetAsyncQuery_default_instance_;
class AsyncResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AsyncResponse>
      _instance;
} _AsyncResponse_default_instance_;
class cudaStreamCreateWithFlagsQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cudaStreamCreateWithFlagsQuery>
      _instance;
} _cudaStreamCreateWithFlagsQuery_default_instance_;
class cudaStreamCreateWithPriorityQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cudaStreamCreateWithPriorityQuery>
      _instance;
} _cudaStreamCreateWithPriorityQuery_default_instance_;
class cudaStreamCreateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cudaStreamCreateResponse>
      _instance;
} _cudaStreamCreateResponse_default_instance_;
class cudaStreamIsCapturingResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cudaStreamIsCapturingResponse>
      _instance;
} _cudaStreamIsCapturingResponse_default_instance_;
class cudaStreamGetCaptureInfoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cudaStreamGetCaptureInfoResponse>
      _instance;
} _cudaStreamGetCaptureInfoResponse_default_instance_;
class cudaEventCreateWithFlagsQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cudaEventCreateWithFlagsQuery>
      _instance;
} _cudaEventCreateWithFlagsQuery_default_instance_;
class cudaEventCreateWithFlagsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cudaEventCreateWithFlagsResponse>
      _instance;
} _cudaEventCreateWithFlagsResponse_default_instance_;
class cudaEventRecordQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cudaEventRecordQuery>
      _instance;
} _cudaEventRecordQuery_default_instance_;
class cudaLaunchKernelQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<cudaLaunchKernelQuery>
      _instance;
} _cudaLaunchKernelQuery_default_instance_;
}  // namespace cudarpc
namespace protobuf_cudarpc_2eproto {
static void InitDefaultsWapperQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_WapperQuery_default_instance_;
    new (ptr) ::cudarpc::WapperQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::WapperQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WapperQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWapperQuery}, {}};

static void InitDefaultsQueryList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_QueryList_default_instance_;
    new (ptr) ::cudarpc::QueryList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::QueryList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_QueryList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsQueryList}, {
      &protobuf_cudarpc_2eproto::scc_info_WapperQuery.base,}};

static void InitDefaultsgenericResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_genericResponse_default_instance_;
    new (ptr) ::cudarpc::genericResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::genericResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_genericResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsgenericResponse}, {}};

static void InitDefaultshandleResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_handleResponse_default_instance_;
    new (ptr) ::cudarpc::handleResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::handleResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_handleResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultshandleResponse}, {}};

static void InitDefaultssetStreamQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_setStreamQuery_default_instance_;
    new (ptr) ::cudarpc::setStreamQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::setStreamQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_setStreamQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultssetStreamQuery}, {}};

static void InitDefaultscublasSetMathModeQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cublasSetMathModeQuery_default_instance_;
    new (ptr) ::cudarpc::cublasSetMathModeQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cublasSetMathModeQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cublasSetMathModeQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscublasSetMathModeQuery}, {}};

static void InitDefaultscublasGetMathModeResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cublasGetMathModeResponse_default_instance_;
    new (ptr) ::cudarpc::cublasGetMathModeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cublasGetMathModeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cublasGetMathModeResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscublasGetMathModeResponse}, {}};

static void InitDefaultscublasSgemmQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cublasSgemmQuery_default_instance_;
    new (ptr) ::cudarpc::cublasSgemmQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cublasSgemmQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cublasSgemmQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscublasSgemmQuery}, {}};

static void InitDefaultscublasSgemmStridedBatchedQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cublasSgemmStridedBatchedQuery_default_instance_;
    new (ptr) ::cudarpc::cublasSgemmStridedBatchedQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cublasSgemmStridedBatchedQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cublasSgemmStridedBatchedQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscublasSgemmStridedBatchedQuery}, {}};

static void InitDefaultscudnnCreateDesciptorResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cudnnCreateDesciptorResponse_default_instance_;
    new (ptr) ::cudarpc::cudnnCreateDesciptorResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cudnnCreateDesciptorResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cudnnCreateDesciptorResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscudnnCreateDesciptorResponse}, {}};

static void InitDefaultscudnnSetTensorNdDescriptorQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cudnnSetTensorNdDescriptorQuery_default_instance_;
    new (ptr) ::cudarpc::cudnnSetTensorNdDescriptorQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cudnnSetTensorNdDescriptorQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cudnnSetTensorNdDescriptorQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscudnnSetTensorNdDescriptorQuery}, {}};

static void InitDefaultscudnnSetFilterNdDescriptorQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cudnnSetFilterNdDescriptorQuery_default_instance_;
    new (ptr) ::cudarpc::cudnnSetFilterNdDescriptorQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cudnnSetFilterNdDescriptorQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cudnnSetFilterNdDescriptorQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscudnnSetFilterNdDescriptorQuery}, {}};

static void InitDefaultscudnnSetConvolutionNdDescriptorQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cudnnSetConvolutionNdDescriptorQuery_default_instance_;
    new (ptr) ::cudarpc::cudnnSetConvolutionNdDescriptorQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cudnnSetConvolutionNdDescriptorQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cudnnSetConvolutionNdDescriptorQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscudnnSetConvolutionNdDescriptorQuery}, {}};

static void InitDefaultscudnnSetConvolutionGroupCountQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cudnnSetConvolutionGroupCountQuery_default_instance_;
    new (ptr) ::cudarpc::cudnnSetConvolutionGroupCountQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cudnnSetConvolutionGroupCountQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cudnnSetConvolutionGroupCountQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscudnnSetConvolutionGroupCountQuery}, {}};

static void InitDefaultscudnnSetConvolutionMathTypeQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cudnnSetConvolutionMathTypeQuery_default_instance_;
    new (ptr) ::cudarpc::cudnnSetConvolutionMathTypeQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cudnnSetConvolutionMathTypeQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cudnnSetConvolutionMathTypeQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscudnnSetConvolutionMathTypeQuery}, {}};

static void InitDefaultscudnnGetConvolutionForwardAlgorithm_v7Query() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cudnnGetConvolutionForwardAlgorithm_v7Query_default_instance_;
    new (ptr) ::cudarpc::cudnnGetConvolutionForwardAlgorithm_v7Query();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cudnnGetConvolutionForwardAlgorithm_v7Query::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cudnnGetConvolutionForwardAlgorithm_v7Query =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscudnnGetConvolutionForwardAlgorithm_v7Query}, {}};

static void InitDefaultscudnnGetConvolutionForwardAlgorithm_v7Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cudnnGetConvolutionForwardAlgorithm_v7Response_default_instance_;
    new (ptr) ::cudarpc::cudnnGetConvolutionForwardAlgorithm_v7Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cudnnGetConvolutionForwardAlgorithm_v7Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cudnnGetConvolutionForwardAlgorithm_v7Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscudnnGetConvolutionForwardAlgorithm_v7Response}, {}};

static void InitDefaultscudnnConvolutionForwardQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cudnnConvolutionForwardQuery_default_instance_;
    new (ptr) ::cudarpc::cudnnConvolutionForwardQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cudnnConvolutionForwardQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cudnnConvolutionForwardQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscudnnConvolutionForwardQuery}, {}};

static void InitDefaultscudnnBatchNormalizationForwardInferenceQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cudnnBatchNormalizationForwardInferenceQuery_default_instance_;
    new (ptr) ::cudarpc::cudnnBatchNormalizationForwardInferenceQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cudnnBatchNormalizationForwardInferenceQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cudnnBatchNormalizationForwardInferenceQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscudnnBatchNormalizationForwardInferenceQuery}, {}};

static void InitDefaultscuInitQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cuInitQuery_default_instance_;
    new (ptr) ::cudarpc::cuInitQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cuInitQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cuInitQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscuInitQuery}, {}};

static void InitDefaultscuDevicePrimaryCtxGetStateQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cuDevicePrimaryCtxGetStateQuery_default_instance_;
    new (ptr) ::cudarpc::cuDevicePrimaryCtxGetStateQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cuDevicePrimaryCtxGetStateQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cuDevicePrimaryCtxGetStateQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscuDevicePrimaryCtxGetStateQuery}, {}};

static void InitDefaultscuDevicePrimaryCtxGetStateResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cuDevicePrimaryCtxGetStateResponse_default_instance_;
    new (ptr) ::cudarpc::cuDevicePrimaryCtxGetStateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cuDevicePrimaryCtxGetStateResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cuDevicePrimaryCtxGetStateResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscuDevicePrimaryCtxGetStateResponse}, {}};

static void InitDefaultscuGetProcAddressQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cuGetProcAddressQuery_default_instance_;
    new (ptr) ::cudarpc::cuGetProcAddressQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cuGetProcAddressQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cuGetProcAddressQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscuGetProcAddressQuery}, {}};

static void InitDefaultscuGetProcAddressResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cuGetProcAddressResponse_default_instance_;
    new (ptr) ::cudarpc::cuGetProcAddressResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cuGetProcAddressResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cuGetProcAddressResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscuGetProcAddressResponse}, {}};

static void InitDefaultsgetVersionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_getVersionResponse_default_instance_;
    new (ptr) ::cudarpc::getVersionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::getVersionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_getVersionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsgetVersionResponse}, {}};

static void InitDefaultscudaGetDeviceResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cudaGetDeviceResponse_default_instance_;
    new (ptr) ::cudarpc::cudaGetDeviceResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cudaGetDeviceResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cudaGetDeviceResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscudaGetDeviceResponse}, {}};

static void InitDefaultscudaGetDeviceCountResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cudaGetDeviceCountResponse_default_instance_;
    new (ptr) ::cudarpc::cudaGetDeviceCountResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cudaGetDeviceCountResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cudaGetDeviceCountResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscudaGetDeviceCountResponse}, {}};

static void InitDefaultscudaGetDevicePropertiesQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cudaGetDevicePropertiesQuery_default_instance_;
    new (ptr) ::cudarpc::cudaGetDevicePropertiesQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cudaGetDevicePropertiesQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cudaGetDevicePropertiesQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscudaGetDevicePropertiesQuery}, {}};

static void InitDefaultscudaGetDevicePropertiesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cudaGetDevicePropertiesResponse_default_instance_;
    new (ptr) ::cudarpc::cudaGetDevicePropertiesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cudaGetDevicePropertiesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cudaGetDevicePropertiesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscudaGetDevicePropertiesResponse}, {}};

static void InitDefaultscudaDeviceGetAttributeQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cudaDeviceGetAttributeQuery_default_instance_;
    new (ptr) ::cudarpc::cudaDeviceGetAttributeQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cudaDeviceGetAttributeQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cudaDeviceGetAttributeQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscudaDeviceGetAttributeQuery}, {}};

static void InitDefaultscudaDeviceGetAttributeResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cudaDeviceGetAttributeResponse_default_instance_;
    new (ptr) ::cudarpc::cudaDeviceGetAttributeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cudaDeviceGetAttributeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cudaDeviceGetAttributeResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscudaDeviceGetAttributeResponse}, {}};

static void InitDefaultscudaMallocQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cudaMallocQuery_default_instance_;
    new (ptr) ::cudarpc::cudaMallocQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cudaMallocQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cudaMallocQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscudaMallocQuery}, {}};

static void InitDefaultscudaMallocResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cudaMallocResponse_default_instance_;
    new (ptr) ::cudarpc::cudaMallocResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cudaMallocResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cudaMallocResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscudaMallocResponse}, {}};

static void InitDefaultscudaFreeQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cudaFreeQuery_default_instance_;
    new (ptr) ::cudarpc::cudaFreeQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cudaFreeQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cudaFreeQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscudaFreeQuery}, {}};

static void InitDefaultscudaMemcpyQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cudaMemcpyQuery_default_instance_;
    new (ptr) ::cudarpc::cudaMemcpyQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cudaMemcpyQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cudaMemcpyQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscudaMemcpyQuery}, {}};

static void InitDefaultscudaMemcpyResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cudaMemcpyResponse_default_instance_;
    new (ptr) ::cudarpc::cudaMemcpyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cudaMemcpyResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cudaMemcpyResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscudaMemcpyResponse}, {}};

static void InitDefaultscudaMemcpyAsyncQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cudaMemcpyAsyncQuery_default_instance_;
    new (ptr) ::cudarpc::cudaMemcpyAsyncQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cudaMemcpyAsyncQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cudaMemcpyAsyncQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscudaMemcpyAsyncQuery}, {}};

static void InitDefaultscudaGetSymbolAddressQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cudaGetSymbolAddressQuery_default_instance_;
    new (ptr) ::cudarpc::cudaGetSymbolAddressQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cudaGetSymbolAddressQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cudaGetSymbolAddressQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscudaGetSymbolAddressQuery}, {}};

static void InitDefaultscudaGetSymbolAddressResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cudaGetSymbolAddressResponse_default_instance_;
    new (ptr) ::cudarpc::cudaGetSymbolAddressResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cudaGetSymbolAddressResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cudaGetSymbolAddressResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscudaGetSymbolAddressResponse}, {}};

static void InitDefaultscudaMemcpyAsyncResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cudaMemcpyAsyncResponse_default_instance_;
    new (ptr) ::cudarpc::cudaMemcpyAsyncResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cudaMemcpyAsyncResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cudaMemcpyAsyncResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscudaMemcpyAsyncResponse}, {}};

static void InitDefaultscudaMemsetAsyncQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cudaMemsetAsyncQuery_default_instance_;
    new (ptr) ::cudarpc::cudaMemsetAsyncQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cudaMemsetAsyncQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cudaMemsetAsyncQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscudaMemsetAsyncQuery}, {}};

static void InitDefaultsAsyncResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_AsyncResponse_default_instance_;
    new (ptr) ::cudarpc::AsyncResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::AsyncResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AsyncResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAsyncResponse}, {
      &protobuf_cudarpc_2eproto::scc_info_cudaMemcpyAsyncResponse.base,}};

static void InitDefaultscudaStreamCreateWithFlagsQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cudaStreamCreateWithFlagsQuery_default_instance_;
    new (ptr) ::cudarpc::cudaStreamCreateWithFlagsQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cudaStreamCreateWithFlagsQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cudaStreamCreateWithFlagsQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscudaStreamCreateWithFlagsQuery}, {}};

static void InitDefaultscudaStreamCreateWithPriorityQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cudaStreamCreateWithPriorityQuery_default_instance_;
    new (ptr) ::cudarpc::cudaStreamCreateWithPriorityQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cudaStreamCreateWithPriorityQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cudaStreamCreateWithPriorityQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscudaStreamCreateWithPriorityQuery}, {}};

static void InitDefaultscudaStreamCreateResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cudaStreamCreateResponse_default_instance_;
    new (ptr) ::cudarpc::cudaStreamCreateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cudaStreamCreateResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cudaStreamCreateResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscudaStreamCreateResponse}, {}};

static void InitDefaultscudaStreamIsCapturingResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cudaStreamIsCapturingResponse_default_instance_;
    new (ptr) ::cudarpc::cudaStreamIsCapturingResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cudaStreamIsCapturingResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cudaStreamIsCapturingResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscudaStreamIsCapturingResponse}, {}};

static void InitDefaultscudaStreamGetCaptureInfoResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cudaStreamGetCaptureInfoResponse_default_instance_;
    new (ptr) ::cudarpc::cudaStreamGetCaptureInfoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cudaStreamGetCaptureInfoResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cudaStreamGetCaptureInfoResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscudaStreamGetCaptureInfoResponse}, {}};

static void InitDefaultscudaEventCreateWithFlagsQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cudaEventCreateWithFlagsQuery_default_instance_;
    new (ptr) ::cudarpc::cudaEventCreateWithFlagsQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cudaEventCreateWithFlagsQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cudaEventCreateWithFlagsQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscudaEventCreateWithFlagsQuery}, {}};

static void InitDefaultscudaEventCreateWithFlagsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cudaEventCreateWithFlagsResponse_default_instance_;
    new (ptr) ::cudarpc::cudaEventCreateWithFlagsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cudaEventCreateWithFlagsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cudaEventCreateWithFlagsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscudaEventCreateWithFlagsResponse}, {}};

static void InitDefaultscudaEventRecordQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cudaEventRecordQuery_default_instance_;
    new (ptr) ::cudarpc::cudaEventRecordQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cudaEventRecordQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cudaEventRecordQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscudaEventRecordQuery}, {}};

static void InitDefaultscudaLaunchKernelQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cudarpc::_cudaLaunchKernelQuery_default_instance_;
    new (ptr) ::cudarpc::cudaLaunchKernelQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cudarpc::cudaLaunchKernelQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_cudaLaunchKernelQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscudaLaunchKernelQuery}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_WapperQuery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QueryList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_genericResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_handleResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_setStreamQuery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cublasSetMathModeQuery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cublasGetMathModeResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cublasSgemmQuery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cublasSgemmStridedBatchedQuery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cudnnCreateDesciptorResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cudnnSetTensorNdDescriptorQuery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cudnnSetFilterNdDescriptorQuery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cudnnSetConvolutionNdDescriptorQuery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cudnnSetConvolutionGroupCountQuery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cudnnSetConvolutionMathTypeQuery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cudnnGetConvolutionForwardAlgorithm_v7Query.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cudnnGetConvolutionForwardAlgorithm_v7Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cudnnConvolutionForwardQuery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cudnnBatchNormalizationForwardInferenceQuery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cuInitQuery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cuDevicePrimaryCtxGetStateQuery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cuDevicePrimaryCtxGetStateResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cuGetProcAddressQuery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cuGetProcAddressResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_getVersionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cudaGetDeviceResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cudaGetDeviceCountResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cudaGetDevicePropertiesQuery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cudaGetDevicePropertiesResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cudaDeviceGetAttributeQuery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cudaDeviceGetAttributeResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cudaMallocQuery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cudaMallocResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cudaFreeQuery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cudaMemcpyQuery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cudaMemcpyResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cudaMemcpyAsyncQuery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cudaGetSymbolAddressQuery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cudaGetSymbolAddressResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cudaMemcpyAsyncResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cudaMemsetAsyncQuery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AsyncResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cudaStreamCreateWithFlagsQuery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cudaStreamCreateWithPriorityQuery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cudaStreamCreateResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cudaStreamIsCapturingResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cudaStreamGetCaptureInfoResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cudaEventCreateWithFlagsQuery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cudaEventCreateWithFlagsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cudaEventRecordQuery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_cudaLaunchKernelQuery.base);
}

::google::protobuf::Metadata file_level_metadata[51];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::WapperQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::WapperQuery, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::WapperQuery, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::QueryList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::QueryList, queries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::QueryList, client_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::QueryList, index_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::genericResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::genericResponse, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::handleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::handleResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::handleResponse, handle_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::setStreamQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::setStreamQuery, handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::setStreamQuery, stream_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasSetMathModeQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasSetMathModeQuery, handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasSetMathModeQuery, mode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasGetMathModeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasGetMathModeResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasGetMathModeResponse, mode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasSgemmQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasSgemmQuery, handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasSgemmQuery, transa_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasSgemmQuery, transb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasSgemmQuery, m_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasSgemmQuery, n_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasSgemmQuery, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasSgemmQuery, alpha_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasSgemmQuery, matrix_a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasSgemmQuery, lda_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasSgemmQuery, matrix_b_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasSgemmQuery, ldb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasSgemmQuery, beta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasSgemmQuery, matrix_c_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasSgemmQuery, ldc_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasSgemmStridedBatchedQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasSgemmStridedBatchedQuery, handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasSgemmStridedBatchedQuery, transa_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasSgemmStridedBatchedQuery, transb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasSgemmStridedBatchedQuery, m_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasSgemmStridedBatchedQuery, n_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasSgemmStridedBatchedQuery, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasSgemmStridedBatchedQuery, alpha_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasSgemmStridedBatchedQuery, matrix_a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasSgemmStridedBatchedQuery, lda_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasSgemmStridedBatchedQuery, matrix_b_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasSgemmStridedBatchedQuery, ldb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasSgemmStridedBatchedQuery, beta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasSgemmStridedBatchedQuery, matrix_c_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasSgemmStridedBatchedQuery, ldc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasSgemmStridedBatchedQuery, stride_a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasSgemmStridedBatchedQuery, stride_b_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasSgemmStridedBatchedQuery, stride_c_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cublasSgemmStridedBatchedQuery, count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnCreateDesciptorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnCreateDesciptorResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnCreateDesciptorResponse, cudnn_descriptor_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnSetTensorNdDescriptorQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnSetTensorNdDescriptorQuery, cudnn_descriptor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnSetTensorNdDescriptorQuery, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnSetTensorNdDescriptorQuery, dims_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnSetTensorNdDescriptorQuery, dim_a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnSetTensorNdDescriptorQuery, stride_a_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnSetFilterNdDescriptorQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnSetFilterNdDescriptorQuery, cudnn_descriptor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnSetFilterNdDescriptorQuery, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnSetFilterNdDescriptorQuery, format_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnSetFilterNdDescriptorQuery, dims_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnSetFilterNdDescriptorQuery, dim_a_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnSetConvolutionNdDescriptorQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnSetConvolutionNdDescriptorQuery, cudnn_descriptor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnSetConvolutionNdDescriptorQuery, length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnSetConvolutionNdDescriptorQuery, pad_a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnSetConvolutionNdDescriptorQuery, stride_a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnSetConvolutionNdDescriptorQuery, dilation_a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnSetConvolutionNdDescriptorQuery, mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnSetConvolutionNdDescriptorQuery, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnSetConvolutionGroupCountQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnSetConvolutionGroupCountQuery, cudnn_descriptor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnSetConvolutionGroupCountQuery, count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnSetConvolutionMathTypeQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnSetConvolutionMathTypeQuery, cudnn_descriptor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnSetConvolutionMathTypeQuery, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnGetConvolutionForwardAlgorithm_v7Query, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnGetConvolutionForwardAlgorithm_v7Query, handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnGetConvolutionForwardAlgorithm_v7Query, x_desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnGetConvolutionForwardAlgorithm_v7Query, w_desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnGetConvolutionForwardAlgorithm_v7Query, conv_desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnGetConvolutionForwardAlgorithm_v7Query, y_desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnGetConvolutionForwardAlgorithm_v7Query, count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnGetConvolutionForwardAlgorithm_v7Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnGetConvolutionForwardAlgorithm_v7Response, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnGetConvolutionForwardAlgorithm_v7Response, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnGetConvolutionForwardAlgorithm_v7Response, results_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnConvolutionForwardQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnConvolutionForwardQuery, handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnConvolutionForwardQuery, alpha_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnConvolutionForwardQuery, x_desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnConvolutionForwardQuery, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnConvolutionForwardQuery, w_desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnConvolutionForwardQuery, w_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnConvolutionForwardQuery, conv_desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnConvolutionForwardQuery, algo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnConvolutionForwardQuery, workspace_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnConvolutionForwardQuery, workspace_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnConvolutionForwardQuery, beta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnConvolutionForwardQuery, y_desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnConvolutionForwardQuery, y_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnBatchNormalizationForwardInferenceQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnBatchNormalizationForwardInferenceQuery, handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnBatchNormalizationForwardInferenceQuery, mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnBatchNormalizationForwardInferenceQuery, alpha_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnBatchNormalizationForwardInferenceQuery, beta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnBatchNormalizationForwardInferenceQuery, x_desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnBatchNormalizationForwardInferenceQuery, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnBatchNormalizationForwardInferenceQuery, y_desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnBatchNormalizationForwardInferenceQuery, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnBatchNormalizationForwardInferenceQuery, bn_desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnBatchNormalizationForwardInferenceQuery, bn_scale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnBatchNormalizationForwardInferenceQuery, bn_bias_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnBatchNormalizationForwardInferenceQuery, es_mean_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnBatchNormalizationForwardInferenceQuery, es_var_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudnnBatchNormalizationForwardInferenceQuery, epsilon_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cuInitQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cuInitQuery, flags_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cuDevicePrimaryCtxGetStateQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cuDevicePrimaryCtxGetStateQuery, device_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cuDevicePrimaryCtxGetStateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cuDevicePrimaryCtxGetStateResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cuDevicePrimaryCtxGetStateResponse, flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cuDevicePrimaryCtxGetStateResponse, active_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cuGetProcAddressQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cuGetProcAddressQuery, symbol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cuGetProcAddressQuery, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cuGetProcAddressQuery, flags_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cuGetProcAddressResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cuGetProcAddressResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cuGetProcAddressResponse, pfn_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::getVersionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::getVersionResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::getVersionResponse, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaGetDeviceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaGetDeviceResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaGetDeviceResponse, device_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaGetDeviceCountResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaGetDeviceCountResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaGetDeviceCountResponse, count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaGetDevicePropertiesQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaGetDevicePropertiesQuery, device_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaGetDevicePropertiesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaGetDevicePropertiesResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaGetDevicePropertiesResponse, prop_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaDeviceGetAttributeQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaDeviceGetAttributeQuery, attr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaDeviceGetAttributeQuery, device_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaDeviceGetAttributeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaDeviceGetAttributeResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaDeviceGetAttributeResponse, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaMallocQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaMallocQuery, size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaMallocResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaMallocResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaMallocResponse, ptr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaFreeQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaFreeQuery, ptr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaMemcpyQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaMemcpyQuery, kind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaMemcpyQuery, src_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaMemcpyQuery, dst_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaMemcpyQuery, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaMemcpyQuery, payload_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaMemcpyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaMemcpyResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaMemcpyResponse, payload_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaMemcpyAsyncQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaMemcpyAsyncQuery, kind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaMemcpyAsyncQuery, src_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaMemcpyAsyncQuery, dst_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaMemcpyAsyncQuery, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaMemcpyAsyncQuery, payload_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaMemcpyAsyncQuery, stream_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaGetSymbolAddressQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaGetSymbolAddressQuery, symbol_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaGetSymbolAddressResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaGetSymbolAddressResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaGetSymbolAddressResponse, ptr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaMemcpyAsyncResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaMemcpyAsyncResponse, ptr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaMemcpyAsyncResponse, payload_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaMemsetAsyncQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaMemsetAsyncQuery, ptr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaMemsetAsyncQuery, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaMemsetAsyncQuery, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaMemsetAsyncQuery, stream_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::AsyncResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::AsyncResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::AsyncResponse, responses_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaStreamCreateWithFlagsQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaStreamCreateWithFlagsQuery, flags_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaStreamCreateWithPriorityQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaStreamCreateWithPriorityQuery, flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaStreamCreateWithPriorityQuery, priority_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaStreamCreateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaStreamCreateResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaStreamCreateResponse, stream_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaStreamIsCapturingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaStreamIsCapturingResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaStreamIsCapturingResponse, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaStreamGetCaptureInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaStreamGetCaptureInfoResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaStreamGetCaptureInfoResponse, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaStreamGetCaptureInfoResponse, pid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaEventCreateWithFlagsQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaEventCreateWithFlagsQuery, flags_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaEventCreateWithFlagsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaEventCreateWithFlagsResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaEventCreateWithFlagsResponse, event_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaEventRecordQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaEventRecordQuery, event_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaEventRecordQuery, stream_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaLaunchKernelQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaLaunchKernelQuery, function_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaLaunchKernelQuery, grid_dim_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaLaunchKernelQuery, grid_dim_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaLaunchKernelQuery, grid_dim_z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaLaunchKernelQuery, block_dim_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaLaunchKernelQuery, block_dim_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaLaunchKernelQuery, block_dim_z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaLaunchKernelQuery, args_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaLaunchKernelQuery, shared_mem_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cudarpc::cudaLaunchKernelQuery, stream_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::cudarpc::WapperQuery)},
  { 7, -1, sizeof(::cudarpc::QueryList)},
  { 15, -1, sizeof(::cudarpc::genericResponse)},
  { 21, -1, sizeof(::cudarpc::handleResponse)},
  { 28, -1, sizeof(::cudarpc::setStreamQuery)},
  { 35, -1, sizeof(::cudarpc::cublasSetMathModeQuery)},
  { 42, -1, sizeof(::cudarpc::cublasGetMathModeResponse)},
  { 49, -1, sizeof(::cudarpc::cublasSgemmQuery)},
  { 68, -1, sizeof(::cudarpc::cublasSgemmStridedBatchedQuery)},
  { 91, -1, sizeof(::cudarpc::cudnnCreateDesciptorResponse)},
  { 98, -1, sizeof(::cudarpc::cudnnSetTensorNdDescriptorQuery)},
  { 108, -1, sizeof(::cudarpc::cudnnSetFilterNdDescriptorQuery)},
  { 118, -1, sizeof(::cudarpc::cudnnSetConvolutionNdDescriptorQuery)},
  { 130, -1, sizeof(::cudarpc::cudnnSetConvolutionGroupCountQuery)},
  { 137, -1, sizeof(::cudarpc::cudnnSetConvolutionMathTypeQuery)},
  { 144, -1, sizeof(::cudarpc::cudnnGetConvolutionForwardAlgorithm_v7Query)},
  { 155, -1, sizeof(::cudarpc::cudnnGetConvolutionForwardAlgorithm_v7Response)},
  { 163, -1, sizeof(::cudarpc::cudnnConvolutionForwardQuery)},
  { 181, -1, sizeof(::cudarpc::cudnnBatchNormalizationForwardInferenceQuery)},
  { 200, -1, sizeof(::cudarpc::cuInitQuery)},
  { 206, -1, sizeof(::cudarpc::cuDevicePrimaryCtxGetStateQuery)},
  { 212, -1, sizeof(::cudarpc::cuDevicePrimaryCtxGetStateResponse)},
  { 220, -1, sizeof(::cudarpc::cuGetProcAddressQuery)},
  { 228, -1, sizeof(::cudarpc::cuGetProcAddressResponse)},
  { 235, -1, sizeof(::cudarpc::getVersionResponse)},
  { 242, -1, sizeof(::cudarpc::cudaGetDeviceResponse)},
  { 249, -1, sizeof(::cudarpc::cudaGetDeviceCountResponse)},
  { 256, -1, sizeof(::cudarpc::cudaGetDevicePropertiesQuery)},
  { 262, -1, sizeof(::cudarpc::cudaGetDevicePropertiesResponse)},
  { 269, -1, sizeof(::cudarpc::cudaDeviceGetAttributeQuery)},
  { 276, -1, sizeof(::cudarpc::cudaDeviceGetAttributeResponse)},
  { 283, -1, sizeof(::cudarpc::cudaMallocQuery)},
  { 289, -1, sizeof(::cudarpc::cudaMallocResponse)},
  { 296, -1, sizeof(::cudarpc::cudaFreeQuery)},
  { 302, -1, sizeof(::cudarpc::cudaMemcpyQuery)},
  { 312, -1, sizeof(::cudarpc::cudaMemcpyResponse)},
  { 319, -1, sizeof(::cudarpc::cudaMemcpyAsyncQuery)},
  { 330, -1, sizeof(::cudarpc::cudaGetSymbolAddressQuery)},
  { 336, -1, sizeof(::cudarpc::cudaGetSymbolAddressResponse)},
  { 343, -1, sizeof(::cudarpc::cudaMemcpyAsyncResponse)},
  { 350, -1, sizeof(::cudarpc::cudaMemsetAsyncQuery)},
  { 359, -1, sizeof(::cudarpc::AsyncResponse)},
  { 366, -1, sizeof(::cudarpc::cudaStreamCreateWithFlagsQuery)},
  { 372, -1, sizeof(::cudarpc::cudaStreamCreateWithPriorityQuery)},
  { 379, -1, sizeof(::cudarpc::cudaStreamCreateResponse)},
  { 386, -1, sizeof(::cudarpc::cudaStreamIsCapturingResponse)},
  { 393, -1, sizeof(::cudarpc::cudaStreamGetCaptureInfoResponse)},
  { 401, -1, sizeof(::cudarpc::cudaEventCreateWithFlagsQuery)},
  { 407, -1, sizeof(::cudarpc::cudaEventCreateWithFlagsResponse)},
  { 414, -1, sizeof(::cudarpc::cudaEventRecordQuery)},
  { 421, -1, sizeof(::cudarpc::cudaLaunchKernelQuery)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_WapperQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_QueryList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_genericResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_handleResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_setStreamQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cublasSetMathModeQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cublasGetMathModeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cublasSgemmQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cublasSgemmStridedBatchedQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cudnnCreateDesciptorResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cudnnSetTensorNdDescriptorQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cudnnSetFilterNdDescriptorQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cudnnSetConvolutionNdDescriptorQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cudnnSetConvolutionGroupCountQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cudnnSetConvolutionMathTypeQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cudnnGetConvolutionForwardAlgorithm_v7Query_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cudnnGetConvolutionForwardAlgorithm_v7Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cudnnConvolutionForwardQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cudnnBatchNormalizationForwardInferenceQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cuInitQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cuDevicePrimaryCtxGetStateQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cuDevicePrimaryCtxGetStateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cuGetProcAddressQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cuGetProcAddressResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_getVersionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cudaGetDeviceResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cudaGetDeviceCountResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cudaGetDevicePropertiesQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cudaGetDevicePropertiesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cudaDeviceGetAttributeQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cudaDeviceGetAttributeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cudaMallocQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cudaMallocResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cudaFreeQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cudaMemcpyQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cudaMemcpyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cudaMemcpyAsyncQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cudaGetSymbolAddressQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cudaGetSymbolAddressResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cudaMemcpyAsyncResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cudaMemsetAsyncQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_AsyncResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cudaStreamCreateWithFlagsQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cudaStreamCreateWithPriorityQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cudaStreamCreateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cudaStreamIsCapturingResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cudaStreamGetCaptureInfoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cudaEventCreateWithFlagsQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cudaEventCreateWithFlagsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cudaEventRecordQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cudarpc::_cudaLaunchKernelQuery_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "cudarpc.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 51);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rcudarpc.proto\022\007cudarpc\">\n\013WapperQuery\022"
      " \n\004type\030\001 \001(\0162\022.cudarpc.QueryType\022\r\n\005que"
      "ry\030\002 \001(\014\"T\n\tQueryList\022%\n\007queries\030\001 \003(\0132\024"
      ".cudarpc.WapperQuery\022\021\n\tclient_id\030\003 \001(\005\022"
      "\r\n\005index\030\004 \001(\005\" \n\017genericResponse\022\r\n\005err"
      "or\030\001 \001(\005\"/\n\016handleResponse\022\r\n\005error\030\001 \001("
      "\005\022\016\n\006handle\030\002 \001(\014\"0\n\016setStreamQuery\022\016\n\006h"
      "andle\030\001 \001(\014\022\016\n\006stream\030\002 \001(\014\"6\n\026cublasSet"
      "MathModeQuery\022\016\n\006handle\030\001 \001(\014\022\014\n\004mode\030\002 "
      "\001(\005\"8\n\031cublasGetMathModeResponse\022\r\n\005erro"
      "r\030\001 \001(\005\022\014\n\004mode\030\002 \001(\005\"\335\001\n\020cublasSgemmQue"
      "ry\022\016\n\006handle\030\001 \001(\014\022\016\n\006transa\030\002 \001(\005\022\016\n\006tr"
      "ansb\030\003 \001(\005\022\t\n\001m\030\004 \001(\005\022\t\n\001n\030\005 \001(\005\022\t\n\001k\030\006 "
      "\001(\005\022\r\n\005alpha\030\007 \001(\002\022\020\n\010matrix_a\030\010 \001(\004\022\013\n\003"
      "lda\030\t \001(\005\022\020\n\010matrix_b\030\n \001(\004\022\013\n\003ldb\030\013 \001(\005"
      "\022\014\n\004beta\030\014 \001(\002\022\020\n\010matrix_c\030\r \001(\004\022\013\n\003ldc\030"
      "\016 \001(\005\"\260\002\n\036cublasSgemmStridedBatchedQuery"
      "\022\016\n\006handle\030\001 \001(\014\022\016\n\006transa\030\002 \001(\005\022\016\n\006tran"
      "sb\030\003 \001(\005\022\t\n\001m\030\004 \001(\005\022\t\n\001n\030\005 \001(\005\022\t\n\001k\030\006 \001("
      "\005\022\r\n\005alpha\030\007 \001(\002\022\020\n\010matrix_a\030\010 \001(\004\022\013\n\003ld"
      "a\030\t \001(\005\022\020\n\010matrix_b\030\n \001(\004\022\013\n\003ldb\030\013 \001(\005\022\014"
      "\n\004beta\030\014 \001(\002\022\020\n\010matrix_c\030\r \001(\004\022\013\n\003ldc\030\016 "
      "\001(\005\022\020\n\010stride_a\030\017 \001(\003\022\020\n\010stride_b\030\020 \001(\003\022"
      "\020\n\010stride_c\030\021 \001(\003\022\r\n\005count\030\022 \001(\005\"G\n\034cudn"
      "nCreateDesciptorResponse\022\r\n\005error\030\001 \001(\005\022"
      "\030\n\020cudnn_descriptor\030\002 \001(\014\"x\n\037cudnnSetTen"
      "sorNdDescriptorQuery\022\030\n\020cudnn_descriptor"
      "\030\001 \001(\014\022\014\n\004type\030\002 \001(\005\022\014\n\004dims\030\003 \001(\005\022\r\n\005di"
      "m_a\030\004 \003(\005\022\020\n\010stride_a\030\005 \003(\005\"v\n\037cudnnSetF"
      "ilterNdDescriptorQuery\022\030\n\020cudnn_descript"
      "or\030\001 \001(\014\022\014\n\004type\030\002 \001(\005\022\016\n\006format\030\003 \001(\005\022\014"
      "\n\004dims\030\004 \001(\005\022\r\n\005dim_a\030\005 \003(\005\"\241\001\n$cudnnSet"
      "ConvolutionNdDescriptorQuery\022\030\n\020cudnn_de"
      "scriptor\030\001 \001(\014\022\016\n\006length\030\002 \001(\005\022\r\n\005pad_a\030"
      "\003 \003(\005\022\020\n\010stride_a\030\004 \003(\005\022\022\n\ndilation_a\030\005 "
      "\003(\005\022\014\n\004mode\030\006 \001(\005\022\014\n\004type\030\007 \001(\005\"M\n\"cudnn"
      "SetConvolutionGroupCountQuery\022\030\n\020cudnn_d"
      "escriptor\030\001 \001(\014\022\r\n\005count\030\002 \001(\005\"J\n cudnnS"
      "etConvolutionMathTypeQuery\022\030\n\020cudnn_desc"
      "riptor\030\001 \001(\014\022\014\n\004type\030\002 \001(\005\"\217\001\n+cudnnGetC"
      "onvolutionForwardAlgorithm_v7Query\022\016\n\006ha"
      "ndle\030\001 \001(\014\022\016\n\006x_desc\030\002 \001(\014\022\016\n\006w_desc\030\003 \001"
      "(\014\022\021\n\tconv_desc\030\004 \001(\014\022\016\n\006y_desc\030\005 \001(\014\022\r\n"
      "\005count\030\006 \001(\005\"_\n.cudnnGetConvolutionForwa"
      "rdAlgorithm_v7Response\022\r\n\005error\030\001 \001(\005\022\r\n"
      "\005count\030\002 \001(\005\022\017\n\007results\030\003 \001(\014\"\350\001\n\034cudnnC"
      "onvolutionForwardQuery\022\016\n\006handle\030\001 \001(\014\022\r"
      "\n\005alpha\030\002 \001(\002\022\016\n\006x_desc\030\003 \001(\014\022\t\n\001x\030\004 \001(\004"
      "\022\016\n\006w_Desc\030\005 \001(\014\022\t\n\001w\030\006 \001(\004\022\021\n\tconv_desc"
      "\030\007 \001(\014\022\014\n\004algo\030\010 \001(\005\022\021\n\tworkspace\030\t \001(\004\022"
      "\026\n\016workspace_size\030\n \001(\004\022\014\n\004beta\030\013 \001(\002\022\016\n"
      "\006y_desc\030\014 \001(\014\022\t\n\001y\030\r \001(\004\"\205\002\n,cudnnBatchN"
      "ormalizationForwardInferenceQuery\022\016\n\006han"
      "dle\030\001 \001(\014\022\014\n\004mode\030\002 \001(\005\022\r\n\005alpha\030\003 \001(\002\022\014"
      "\n\004beta\030\004 \001(\002\022\016\n\006x_desc\030\005 \001(\014\022\t\n\001x\030\006 \001(\004\022"
      "\016\n\006y_desc\030\007 \001(\014\022\t\n\001y\030\010 \001(\004\022\017\n\007bn_Desc\030\t "
      "\001(\014\022\020\n\010bn_scale\030\n \001(\004\022\017\n\007bn_bias\030\013 \001(\004\022\017"
      "\n\007es_mean\030\014 \001(\004\022\016\n\006es_var\030\r \001(\004\022\017\n\007epsil"
      "on\030\016 \001(\001\"\034\n\013cuInitQuery\022\r\n\005flags\030\001 \001(\r\"1"
      "\n\037cuDevicePrimaryCtxGetStateQuery\022\016\n\006dev"
      "ice\030\001 \001(\003\"R\n\"cuDevicePrimaryCtxGetStateR"
      "esponse\022\r\n\005error\030\001 \001(\005\022\r\n\005flags\030\002 \001(\r\022\016\n"
      "\006active\030\003 \001(\005\"G\n\025cuGetProcAddressQuery\022\016"
      "\n\006symbol\030\001 \001(\014\022\017\n\007version\030\002 \001(\005\022\r\n\005flags"
      "\030\003 \001(\004\"6\n\030cuGetProcAddressResponse\022\r\n\005er"
      "ror\030\001 \001(\005\022\013\n\003pfn\030\002 \001(\004\"4\n\022getVersionResp"
      "onse\022\r\n\005error\030\001 \001(\005\022\017\n\007version\030\002 \001(\005\"6\n\025"
      "cudaGetDeviceResponse\022\r\n\005error\030\001 \001(\005\022\016\n\006"
      "device\030\002 \001(\005\":\n\032cudaGetDeviceCountRespon"
      "se\022\r\n\005error\030\001 \001(\005\022\r\n\005count\030\002 \001(\005\".\n\034cuda"
      "GetDevicePropertiesQuery\022\016\n\006device\030\001 \001(\005"
      "\">\n\037cudaGetDevicePropertiesResponse\022\r\n\005e"
      "rror\030\001 \001(\005\022\014\n\004prop\030\002 \001(\014\";\n\033cudaDeviceGe"
      "tAttributeQuery\022\014\n\004attr\030\001 \001(\005\022\016\n\006device\030"
      "\002 \001(\005\">\n\036cudaDeviceGetAttributeResponse\022"
      "\r\n\005error\030\001 \001(\005\022\r\n\005value\030\002 \001(\005\"\037\n\017cudaMal"
      "locQuery\022\014\n\004size\030\001 \001(\004\"0\n\022cudaMallocResp"
      "onse\022\r\n\005error\030\001 \001(\005\022\013\n\003ptr\030\002 \001(\004\"\034\n\rcuda"
      "FreeQuery\022\013\n\003ptr\030\001 \001(\004\"Y\n\017cudaMemcpyQuer"
      "y\022\014\n\004kind\030\001 \001(\005\022\013\n\003src\030\002 \001(\004\022\013\n\003dst\030\003 \001("
      "\004\022\r\n\005count\030\004 \001(\004\022\017\n\007payload\030\005 \001(\014\"4\n\022cud"
      "aMemcpyResponse\022\r\n\005error\030\001 \001(\005\022\017\n\007payloa"
      "d\030\002 \001(\014\"n\n\024cudaMemcpyAsyncQuery\022\014\n\004kind\030"
      "\001 \001(\005\022\013\n\003src\030\002 \001(\004\022\013\n\003dst\030\003 \001(\004\022\r\n\005count"
      "\030\004 \001(\004\022\017\n\007payload\030\005 \001(\014\022\016\n\006stream\030\006 \001(\014\""
      "+\n\031cudaGetSymbolAddressQuery\022\016\n\006symbol\030\001"
      " \001(\004\":\n\034cudaGetSymbolAddressResponse\022\r\n\005"
      "error\030\001 \001(\005\022\013\n\003ptr\030\002 \001(\004\"7\n\027cudaMemcpyAs"
      "yncResponse\022\013\n\003ptr\030\001 \001(\004\022\017\n\007payload\030\002 \001("
      "\014\"Q\n\024cudaMemsetAsyncQuery\022\013\n\003ptr\030\001 \001(\004\022\r"
      "\n\005value\030\002 \001(\005\022\r\n\005count\030\003 \001(\004\022\016\n\006stream\030\004"
      " \001(\014\"S\n\rAsyncResponse\022\r\n\005error\030\001 \001(\005\0223\n\t"
      "responses\030\002 \003(\0132 .cudarpc.cudaMemcpyAsyn"
      "cResponse\"/\n\036cudaStreamCreateWithFlagsQu"
      "ery\022\r\n\005flags\030\001 \001(\r\"D\n!cudaStreamCreateWi"
      "thPriorityQuery\022\r\n\005flags\030\001 \001(\r\022\020\n\010priori"
      "ty\030\002 \001(\005\"9\n\030cudaStreamCreateResponse\022\r\n\005"
      "error\030\001 \001(\005\022\016\n\006stream\030\002 \001(\014\">\n\035cudaStrea"
      "mIsCapturingResponse\022\r\n\005error\030\001 \001(\005\022\016\n\006s"
      "tatus\030\002 \001(\005\"N\n cudaStreamGetCaptureInfoR"
      "esponse\022\r\n\005error\030\001 \001(\005\022\016\n\006status\030\002 \001(\005\022\013"
      "\n\003pid\030\003 \001(\004\".\n\035cudaEventCreateWithFlagsQ"
      "uery\022\r\n\005flags\030\001 \001(\r\"@\n cudaEventCreateWi"
      "thFlagsResponse\022\r\n\005error\030\001 \001(\005\022\r\n\005event\030"
      "\002 \001(\014\"5\n\024cudaEventRecordQuery\022\r\n\005event\030\001"
      " \001(\014\022\016\n\006stream\030\002 \001(\014\"\326\001\n\025cudaLaunchKerne"
      "lQuery\022\020\n\010function\030\001 \001(\t\022\022\n\ngrid_dim_x\030\002"
      " \001(\r\022\022\n\ngrid_dim_y\030\003 \001(\r\022\022\n\ngrid_dim_z\030\004"
      " \001(\r\022\023\n\013block_dim_x\030\005 \001(\r\022\023\n\013block_dim_y"
      "\030\006 \001(\r\022\023\n\013block_dim_z\030\007 \001(\r\022\014\n\004args\030\010 \003("
      "\014\022\022\n\nshared_mem\030\t \001(\004\022\016\n\006stream\030\n \001(\014*\377\n"
      "\n\tQueryType\022\n\n\006cuInit\020\000\022\036\n\032cuDevicePrima"
      "ryCtxGetState\020\001\022\024\n\020cuGetProcAddress\020\002\022\026\n"
      "\022cuDriverGetVersion\020\003\022\030\n\024cudaDriverGetVe"
      "rsion\020\005\022\031\n\025cudaRuntimeGetVersion\020\006\022\024\n\020cu"
      "daGetLastError\020\007\022\026\n\022cudaGetDeviceCount\020\n"
      "\022\021\n\rcudaGetDevice\020\013\022\033\n\027cudaGetDeviceProp"
      "erties\020\014\022\032\n\026cudaDeviceGetAttribute\020\r\022\031\n\025"
      "cudaDeviceSynchronize\020\016\022\024\n\020cudaStreamCre"
      "ate\020\024\022\035\n\031cudaStreamCreateWithFlags\020\025\022 \n\034"
      "cudaStreamCreateWithPriority\020\026\022\031\n\025cudaSt"
      "reamSynchronize\020\027\022\031\n\025cudaStreamIsCapturi"
      "ng\020\030\022\034\n\030cudaStreamGetCaptureInfo\020\031\022\016\n\ncu"
      "daMalloc\020\036\022\014\n\010cudaFree\020\037\022\016\n\ncudaMemcpy\020 "
      "\022\023\n\017cudaMemcpyAsync\020!\022\023\n\017cudaMemsetAsync"
      "\020\"\022\030\n\024cudaGetSymbolAddress\020#\022\034\n\030cudaEven"
      "tCreateWithFlags\020(\022\022\n\016cudaEventQuery\020)\022\023"
      "\n\017cudaEventRecord\020*\022\024\n\020cudaLaunchKernel\020"
      "2\022\027\n\023cuBLAS_cublasCreate\020d\022\032\n\026cuBLAS_cub"
      "lasSetStream\020e\022\034\n\030cuBLAS_cublasSetMathMo"
      "de\020f\022\034\n\030cuBLAS_cublasGetMathMode\020g\022\026\n\022cu"
      "BLAS_cublasSgemm\020h\022$\n cuBLAS_cublasSgemm"
      "StridedBatched\020i\022\020\n\013cudnnCreate\020\310\001\022\023\n\016cu"
      "dnnSetStream\020\311\001\022 \n\033cudnnCreateTensorDesc"
      "riptor\020\312\001\022\037\n\032cudnnSetTensorNdDescriptor\020"
      "\313\001\022 \n\033cudnnCreateFilterDescriptor\020\314\001\022\037\n\032"
      "cudnnSetFilterNdDescriptor\020\315\001\022%\n cudnnCr"
      "eateConvolutionDescriptor\020\316\001\022$\n\037cudnnSet"
      "ConvolutionNdDescriptor\020\317\001\022\"\n\035cudnnSetCo"
      "nvolutionGroupCount\020\320\001\022 \n\033cudnnSetConvol"
      "utionMathType\020\321\001\022+\n&cudnnGetConvolutionF"
      "orwardAlgorithm_v7\020\322\001\022\034\n\027cudnnConvolutio"
      "nForward\020\323\001\022,\n\'cudnnBatchNormalizationFo"
      "rwardInference\020\324\001\022&\n!cudnnDestroyConvolu"
      "tionDescriptor\020\372\001\022!\n\034cudnnDestroyFilterD"
      "escriptor\020\373\001\022!\n\034cudnnDestroyTensorDescri"
      "ptor\020\374\001B\t\n\007ex.grpcb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 5866);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cudarpc.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_cudarpc_2eproto
namespace cudarpc {
const ::google::protobuf::EnumDescriptor* QueryType_descriptor() {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cudarpc_2eproto::file_level_enum_descriptors[0];
}
bool QueryType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 5:
    case 6:
    case 7:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 40:
    case 41:
    case 42:
    case 50:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 207:
    case 208:
    case 209:
    case 210:
    case 211:
    case 212:
    case 250:
    case 251:
    case 252:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void WapperQuery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WapperQuery::kTypeFieldNumber;
const int WapperQuery::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WapperQuery::WapperQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_WapperQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.WapperQuery)
}
WapperQuery::WapperQuery(const WapperQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:cudarpc.WapperQuery)
}

void WapperQuery::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

WapperQuery::~WapperQuery() {
  // @@protoc_insertion_point(destructor:cudarpc.WapperQuery)
  SharedDtor();
}

void WapperQuery::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WapperQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WapperQuery::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WapperQuery& WapperQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_WapperQuery.base);
  return *internal_default_instance();
}


void WapperQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.WapperQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool WapperQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.WapperQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .cudarpc.QueryType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::cudarpc::QueryType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes query = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_query()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.WapperQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.WapperQuery)
  return false;
#undef DO_
}

void WapperQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.WapperQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .cudarpc.QueryType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // bytes query = 2;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.WapperQuery)
}

::google::protobuf::uint8* WapperQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.WapperQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .cudarpc.QueryType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // bytes query = 2;
  if (this->query().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->query(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.WapperQuery)
  return target;
}

size_t WapperQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.WapperQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes query = 2;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->query());
  }

  // .cudarpc.QueryType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WapperQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.WapperQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const WapperQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WapperQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.WapperQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.WapperQuery)
    MergeFrom(*source);
  }
}

void WapperQuery::MergeFrom(const WapperQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.WapperQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void WapperQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.WapperQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WapperQuery::CopyFrom(const WapperQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.WapperQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WapperQuery::IsInitialized() const {
  return true;
}

void WapperQuery::Swap(WapperQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WapperQuery::InternalSwap(WapperQuery* other) {
  using std::swap;
  query_.Swap(&other->query_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WapperQuery::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryList::kQueriesFieldNumber;
const int QueryList::kClientIdFieldNumber;
const int QueryList::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryList::QueryList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_QueryList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.QueryList)
}
QueryList::QueryList(const QueryList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      queries_(from.queries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&client_id_, &from.client_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&index_) -
    reinterpret_cast<char*>(&client_id_)) + sizeof(index_));
  // @@protoc_insertion_point(copy_constructor:cudarpc.QueryList)
}

void QueryList::SharedCtor() {
  ::memset(&client_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&client_id_)) + sizeof(index_));
}

QueryList::~QueryList() {
  // @@protoc_insertion_point(destructor:cudarpc.QueryList)
  SharedDtor();
}

void QueryList::SharedDtor() {
}

void QueryList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QueryList::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryList& QueryList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_QueryList.base);
  return *internal_default_instance();
}


void QueryList::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.QueryList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  queries_.Clear();
  ::memset(&client_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&client_id_)) + sizeof(index_));
  _internal_metadata_.Clear();
}

bool QueryList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.QueryList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .cudarpc.WapperQuery queries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_queries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 client_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 index = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.QueryList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.QueryList)
  return false;
#undef DO_
}

void QueryList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.QueryList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cudarpc.WapperQuery queries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->queries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->queries(static_cast<int>(i)),
      output);
  }

  // int32 client_id = 3;
  if (this->client_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->client_id(), output);
  }

  // int32 index = 4;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->index(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.QueryList)
}

::google::protobuf::uint8* QueryList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.QueryList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .cudarpc.WapperQuery queries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->queries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->queries(static_cast<int>(i)), deterministic, target);
  }

  // int32 client_id = 3;
  if (this->client_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->client_id(), target);
  }

  // int32 index = 4;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->index(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.QueryList)
  return target;
}

size_t QueryList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.QueryList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .cudarpc.WapperQuery queries = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->queries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->queries(static_cast<int>(i)));
    }
  }

  // int32 client_id = 3;
  if (this->client_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->client_id());
  }

  // int32 index = 4;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.QueryList)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.QueryList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.QueryList)
    MergeFrom(*source);
  }
}

void QueryList::MergeFrom(const QueryList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.QueryList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  queries_.MergeFrom(from.queries_);
  if (from.client_id() != 0) {
    set_client_id(from.client_id());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
}

void QueryList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.QueryList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryList::CopyFrom(const QueryList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.QueryList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryList::IsInitialized() const {
  return true;
}

void QueryList::Swap(QueryList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryList::InternalSwap(QueryList* other) {
  using std::swap;
  CastToBase(&queries_)->InternalSwap(CastToBase(&other->queries_));
  swap(client_id_, other->client_id_);
  swap(index_, other->index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QueryList::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void genericResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int genericResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

genericResponse::genericResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_genericResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.genericResponse)
}
genericResponse::genericResponse(const genericResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_ = from.error_;
  // @@protoc_insertion_point(copy_constructor:cudarpc.genericResponse)
}

void genericResponse::SharedCtor() {
  error_ = 0;
}

genericResponse::~genericResponse() {
  // @@protoc_insertion_point(destructor:cudarpc.genericResponse)
  SharedDtor();
}

void genericResponse::SharedDtor() {
}

void genericResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* genericResponse::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const genericResponse& genericResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_genericResponse.base);
  return *internal_default_instance();
}


void genericResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.genericResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_ = 0;
  _internal_metadata_.Clear();
}

bool genericResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.genericResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.genericResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.genericResponse)
  return false;
#undef DO_
}

void genericResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.genericResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.genericResponse)
}

::google::protobuf::uint8* genericResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.genericResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.genericResponse)
  return target;
}

size_t genericResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.genericResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void genericResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.genericResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const genericResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const genericResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.genericResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.genericResponse)
    MergeFrom(*source);
  }
}

void genericResponse::MergeFrom(const genericResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.genericResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error() != 0) {
    set_error(from.error());
  }
}

void genericResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.genericResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void genericResponse::CopyFrom(const genericResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.genericResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool genericResponse::IsInitialized() const {
  return true;
}

void genericResponse::Swap(genericResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void genericResponse::InternalSwap(genericResponse* other) {
  using std::swap;
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata genericResponse::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void handleResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int handleResponse::kErrorFieldNumber;
const int handleResponse::kHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

handleResponse::handleResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_handleResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.handleResponse)
}
handleResponse::handleResponse(const handleResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.handle().size() > 0) {
    handle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handle_);
  }
  error_ = from.error_;
  // @@protoc_insertion_point(copy_constructor:cudarpc.handleResponse)
}

void handleResponse::SharedCtor() {
  handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = 0;
}

handleResponse::~handleResponse() {
  // @@protoc_insertion_point(destructor:cudarpc.handleResponse)
  SharedDtor();
}

void handleResponse::SharedDtor() {
  handle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void handleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* handleResponse::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const handleResponse& handleResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_handleResponse.base);
  return *internal_default_instance();
}


void handleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.handleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  handle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = 0;
  _internal_metadata_.Clear();
}

bool handleResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.handleResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes handle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_handle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.handleResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.handleResponse)
  return false;
#undef DO_
}

void handleResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.handleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // bytes handle = 2;
  if (this->handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->handle(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.handleResponse)
}

::google::protobuf::uint8* handleResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.handleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // bytes handle = 2;
  if (this->handle().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->handle(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.handleResponse)
  return target;
}

size_t handleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.handleResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes handle = 2;
  if (this->handle().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->handle());
  }

  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void handleResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.handleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const handleResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const handleResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.handleResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.handleResponse)
    MergeFrom(*source);
  }
}

void handleResponse::MergeFrom(const handleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.handleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.handle().size() > 0) {

    handle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handle_);
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void handleResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.handleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void handleResponse::CopyFrom(const handleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.handleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool handleResponse::IsInitialized() const {
  return true;
}

void handleResponse::Swap(handleResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void handleResponse::InternalSwap(handleResponse* other) {
  using std::swap;
  handle_.Swap(&other->handle_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata handleResponse::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void setStreamQuery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int setStreamQuery::kHandleFieldNumber;
const int setStreamQuery::kStreamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

setStreamQuery::setStreamQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_setStreamQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.setStreamQuery)
}
setStreamQuery::setStreamQuery(const setStreamQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.handle().size() > 0) {
    handle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handle_);
  }
  stream_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stream().size() > 0) {
    stream_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stream_);
  }
  // @@protoc_insertion_point(copy_constructor:cudarpc.setStreamQuery)
}

void setStreamQuery::SharedCtor() {
  handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stream_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

setStreamQuery::~setStreamQuery() {
  // @@protoc_insertion_point(destructor:cudarpc.setStreamQuery)
  SharedDtor();
}

void setStreamQuery::SharedDtor() {
  handle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stream_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void setStreamQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* setStreamQuery::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const setStreamQuery& setStreamQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_setStreamQuery.base);
  return *internal_default_instance();
}


void setStreamQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.setStreamQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  handle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stream_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool setStreamQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.setStreamQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_handle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes stream = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_stream()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.setStreamQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.setStreamQuery)
  return false;
#undef DO_
}

void setStreamQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.setStreamQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes handle = 1;
  if (this->handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->handle(), output);
  }

  // bytes stream = 2;
  if (this->stream().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->stream(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.setStreamQuery)
}

::google::protobuf::uint8* setStreamQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.setStreamQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes handle = 1;
  if (this->handle().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->handle(), target);
  }

  // bytes stream = 2;
  if (this->stream().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->stream(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.setStreamQuery)
  return target;
}

size_t setStreamQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.setStreamQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes handle = 1;
  if (this->handle().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->handle());
  }

  // bytes stream = 2;
  if (this->stream().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->stream());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void setStreamQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.setStreamQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const setStreamQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const setStreamQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.setStreamQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.setStreamQuery)
    MergeFrom(*source);
  }
}

void setStreamQuery::MergeFrom(const setStreamQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.setStreamQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.handle().size() > 0) {

    handle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handle_);
  }
  if (from.stream().size() > 0) {

    stream_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stream_);
  }
}

void setStreamQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.setStreamQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void setStreamQuery::CopyFrom(const setStreamQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.setStreamQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setStreamQuery::IsInitialized() const {
  return true;
}

void setStreamQuery::Swap(setStreamQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void setStreamQuery::InternalSwap(setStreamQuery* other) {
  using std::swap;
  handle_.Swap(&other->handle_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stream_.Swap(&other->stream_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata setStreamQuery::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cublasSetMathModeQuery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cublasSetMathModeQuery::kHandleFieldNumber;
const int cublasSetMathModeQuery::kModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cublasSetMathModeQuery::cublasSetMathModeQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cublasSetMathModeQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cublasSetMathModeQuery)
}
cublasSetMathModeQuery::cublasSetMathModeQuery(const cublasSetMathModeQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.handle().size() > 0) {
    handle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handle_);
  }
  mode_ = from.mode_;
  // @@protoc_insertion_point(copy_constructor:cudarpc.cublasSetMathModeQuery)
}

void cublasSetMathModeQuery::SharedCtor() {
  handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mode_ = 0;
}

cublasSetMathModeQuery::~cublasSetMathModeQuery() {
  // @@protoc_insertion_point(destructor:cudarpc.cublasSetMathModeQuery)
  SharedDtor();
}

void cublasSetMathModeQuery::SharedDtor() {
  handle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cublasSetMathModeQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cublasSetMathModeQuery::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cublasSetMathModeQuery& cublasSetMathModeQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cublasSetMathModeQuery.base);
  return *internal_default_instance();
}


void cublasSetMathModeQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cublasSetMathModeQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  handle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mode_ = 0;
  _internal_metadata_.Clear();
}

bool cublasSetMathModeQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cublasSetMathModeQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_handle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cublasSetMathModeQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cublasSetMathModeQuery)
  return false;
#undef DO_
}

void cublasSetMathModeQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cublasSetMathModeQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes handle = 1;
  if (this->handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->handle(), output);
  }

  // int32 mode = 2;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cublasSetMathModeQuery)
}

::google::protobuf::uint8* cublasSetMathModeQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cublasSetMathModeQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes handle = 1;
  if (this->handle().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->handle(), target);
  }

  // int32 mode = 2;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cublasSetMathModeQuery)
  return target;
}

size_t cublasSetMathModeQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cublasSetMathModeQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes handle = 1;
  if (this->handle().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->handle());
  }

  // int32 mode = 2;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cublasSetMathModeQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cublasSetMathModeQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const cublasSetMathModeQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cublasSetMathModeQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cublasSetMathModeQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cublasSetMathModeQuery)
    MergeFrom(*source);
  }
}

void cublasSetMathModeQuery::MergeFrom(const cublasSetMathModeQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cublasSetMathModeQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.handle().size() > 0) {

    handle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handle_);
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
}

void cublasSetMathModeQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cublasSetMathModeQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cublasSetMathModeQuery::CopyFrom(const cublasSetMathModeQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cublasSetMathModeQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cublasSetMathModeQuery::IsInitialized() const {
  return true;
}

void cublasSetMathModeQuery::Swap(cublasSetMathModeQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cublasSetMathModeQuery::InternalSwap(cublasSetMathModeQuery* other) {
  using std::swap;
  handle_.Swap(&other->handle_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mode_, other->mode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cublasSetMathModeQuery::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cublasGetMathModeResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cublasGetMathModeResponse::kErrorFieldNumber;
const int cublasGetMathModeResponse::kModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cublasGetMathModeResponse::cublasGetMathModeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cublasGetMathModeResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cublasGetMathModeResponse)
}
cublasGetMathModeResponse::cublasGetMathModeResponse(const cublasGetMathModeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&error_, &from.error_,
    static_cast<size_t>(reinterpret_cast<char*>(&mode_) -
    reinterpret_cast<char*>(&error_)) + sizeof(mode_));
  // @@protoc_insertion_point(copy_constructor:cudarpc.cublasGetMathModeResponse)
}

void cublasGetMathModeResponse::SharedCtor() {
  ::memset(&error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mode_) -
      reinterpret_cast<char*>(&error_)) + sizeof(mode_));
}

cublasGetMathModeResponse::~cublasGetMathModeResponse() {
  // @@protoc_insertion_point(destructor:cudarpc.cublasGetMathModeResponse)
  SharedDtor();
}

void cublasGetMathModeResponse::SharedDtor() {
}

void cublasGetMathModeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cublasGetMathModeResponse::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cublasGetMathModeResponse& cublasGetMathModeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cublasGetMathModeResponse.base);
  return *internal_default_instance();
}


void cublasGetMathModeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cublasGetMathModeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mode_) -
      reinterpret_cast<char*>(&error_)) + sizeof(mode_));
  _internal_metadata_.Clear();
}

bool cublasGetMathModeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cublasGetMathModeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cublasGetMathModeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cublasGetMathModeResponse)
  return false;
#undef DO_
}

void cublasGetMathModeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cublasGetMathModeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // int32 mode = 2;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cublasGetMathModeResponse)
}

::google::protobuf::uint8* cublasGetMathModeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cublasGetMathModeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // int32 mode = 2;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cublasGetMathModeResponse)
  return target;
}

size_t cublasGetMathModeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cublasGetMathModeResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  // int32 mode = 2;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cublasGetMathModeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cublasGetMathModeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const cublasGetMathModeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cublasGetMathModeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cublasGetMathModeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cublasGetMathModeResponse)
    MergeFrom(*source);
  }
}

void cublasGetMathModeResponse::MergeFrom(const cublasGetMathModeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cublasGetMathModeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error() != 0) {
    set_error(from.error());
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
}

void cublasGetMathModeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cublasGetMathModeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cublasGetMathModeResponse::CopyFrom(const cublasGetMathModeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cublasGetMathModeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cublasGetMathModeResponse::IsInitialized() const {
  return true;
}

void cublasGetMathModeResponse::Swap(cublasGetMathModeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cublasGetMathModeResponse::InternalSwap(cublasGetMathModeResponse* other) {
  using std::swap;
  swap(error_, other->error_);
  swap(mode_, other->mode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cublasGetMathModeResponse::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cublasSgemmQuery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cublasSgemmQuery::kHandleFieldNumber;
const int cublasSgemmQuery::kTransaFieldNumber;
const int cublasSgemmQuery::kTransbFieldNumber;
const int cublasSgemmQuery::kMFieldNumber;
const int cublasSgemmQuery::kNFieldNumber;
const int cublasSgemmQuery::kKFieldNumber;
const int cublasSgemmQuery::kAlphaFieldNumber;
const int cublasSgemmQuery::kMatrixAFieldNumber;
const int cublasSgemmQuery::kLdaFieldNumber;
const int cublasSgemmQuery::kMatrixBFieldNumber;
const int cublasSgemmQuery::kLdbFieldNumber;
const int cublasSgemmQuery::kBetaFieldNumber;
const int cublasSgemmQuery::kMatrixCFieldNumber;
const int cublasSgemmQuery::kLdcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cublasSgemmQuery::cublasSgemmQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cublasSgemmQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cublasSgemmQuery)
}
cublasSgemmQuery::cublasSgemmQuery(const cublasSgemmQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.handle().size() > 0) {
    handle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handle_);
  }
  ::memcpy(&transa_, &from.transa_,
    static_cast<size_t>(reinterpret_cast<char*>(&ldc_) -
    reinterpret_cast<char*>(&transa_)) + sizeof(ldc_));
  // @@protoc_insertion_point(copy_constructor:cudarpc.cublasSgemmQuery)
}

void cublasSgemmQuery::SharedCtor() {
  handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&transa_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ldc_) -
      reinterpret_cast<char*>(&transa_)) + sizeof(ldc_));
}

cublasSgemmQuery::~cublasSgemmQuery() {
  // @@protoc_insertion_point(destructor:cudarpc.cublasSgemmQuery)
  SharedDtor();
}

void cublasSgemmQuery::SharedDtor() {
  handle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cublasSgemmQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cublasSgemmQuery::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cublasSgemmQuery& cublasSgemmQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cublasSgemmQuery.base);
  return *internal_default_instance();
}


void cublasSgemmQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cublasSgemmQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  handle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&transa_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ldc_) -
      reinterpret_cast<char*>(&transa_)) + sizeof(ldc_));
  _internal_metadata_.Clear();
}

bool cublasSgemmQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cublasSgemmQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_handle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 transa = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transa_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 transb = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 m = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 n = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &n_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 k = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &k_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float alpha = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &alpha_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 matrix_a = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &matrix_a_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 lda = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lda_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 matrix_b = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &matrix_b_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ldb = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ldb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float beta = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &beta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 matrix_c = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &matrix_c_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ldc = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ldc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cublasSgemmQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cublasSgemmQuery)
  return false;
#undef DO_
}

void cublasSgemmQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cublasSgemmQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes handle = 1;
  if (this->handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->handle(), output);
  }

  // int32 transa = 2;
  if (this->transa() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->transa(), output);
  }

  // int32 transb = 3;
  if (this->transb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->transb(), output);
  }

  // int32 m = 4;
  if (this->m() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m(), output);
  }

  // int32 n = 5;
  if (this->n() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->n(), output);
  }

  // int32 k = 6;
  if (this->k() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->k(), output);
  }

  // float alpha = 7;
  if (this->alpha() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->alpha(), output);
  }

  // uint64 matrix_a = 8;
  if (this->matrix_a() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->matrix_a(), output);
  }

  // int32 lda = 9;
  if (this->lda() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->lda(), output);
  }

  // uint64 matrix_b = 10;
  if (this->matrix_b() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->matrix_b(), output);
  }

  // int32 ldb = 11;
  if (this->ldb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->ldb(), output);
  }

  // float beta = 12;
  if (this->beta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->beta(), output);
  }

  // uint64 matrix_c = 13;
  if (this->matrix_c() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(13, this->matrix_c(), output);
  }

  // int32 ldc = 14;
  if (this->ldc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->ldc(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cublasSgemmQuery)
}

::google::protobuf::uint8* cublasSgemmQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cublasSgemmQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes handle = 1;
  if (this->handle().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->handle(), target);
  }

  // int32 transa = 2;
  if (this->transa() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->transa(), target);
  }

  // int32 transb = 3;
  if (this->transb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->transb(), target);
  }

  // int32 m = 4;
  if (this->m() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m(), target);
  }

  // int32 n = 5;
  if (this->n() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->n(), target);
  }

  // int32 k = 6;
  if (this->k() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->k(), target);
  }

  // float alpha = 7;
  if (this->alpha() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->alpha(), target);
  }

  // uint64 matrix_a = 8;
  if (this->matrix_a() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->matrix_a(), target);
  }

  // int32 lda = 9;
  if (this->lda() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->lda(), target);
  }

  // uint64 matrix_b = 10;
  if (this->matrix_b() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->matrix_b(), target);
  }

  // int32 ldb = 11;
  if (this->ldb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->ldb(), target);
  }

  // float beta = 12;
  if (this->beta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->beta(), target);
  }

  // uint64 matrix_c = 13;
  if (this->matrix_c() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(13, this->matrix_c(), target);
  }

  // int32 ldc = 14;
  if (this->ldc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->ldc(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cublasSgemmQuery)
  return target;
}

size_t cublasSgemmQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cublasSgemmQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes handle = 1;
  if (this->handle().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->handle());
  }

  // int32 transa = 2;
  if (this->transa() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->transa());
  }

  // int32 transb = 3;
  if (this->transb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->transb());
  }

  // int32 m = 4;
  if (this->m() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->m());
  }

  // int32 n = 5;
  if (this->n() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->n());
  }

  // int32 k = 6;
  if (this->k() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->k());
  }

  // float alpha = 7;
  if (this->alpha() != 0) {
    total_size += 1 + 4;
  }

  // uint64 matrix_a = 8;
  if (this->matrix_a() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->matrix_a());
  }

  // uint64 matrix_b = 10;
  if (this->matrix_b() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->matrix_b());
  }

  // int32 lda = 9;
  if (this->lda() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lda());
  }

  // int32 ldb = 11;
  if (this->ldb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ldb());
  }

  // uint64 matrix_c = 13;
  if (this->matrix_c() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->matrix_c());
  }

  // float beta = 12;
  if (this->beta() != 0) {
    total_size += 1 + 4;
  }

  // int32 ldc = 14;
  if (this->ldc() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ldc());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cublasSgemmQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cublasSgemmQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const cublasSgemmQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cublasSgemmQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cublasSgemmQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cublasSgemmQuery)
    MergeFrom(*source);
  }
}

void cublasSgemmQuery::MergeFrom(const cublasSgemmQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cublasSgemmQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.handle().size() > 0) {

    handle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handle_);
  }
  if (from.transa() != 0) {
    set_transa(from.transa());
  }
  if (from.transb() != 0) {
    set_transb(from.transb());
  }
  if (from.m() != 0) {
    set_m(from.m());
  }
  if (from.n() != 0) {
    set_n(from.n());
  }
  if (from.k() != 0) {
    set_k(from.k());
  }
  if (from.alpha() != 0) {
    set_alpha(from.alpha());
  }
  if (from.matrix_a() != 0) {
    set_matrix_a(from.matrix_a());
  }
  if (from.matrix_b() != 0) {
    set_matrix_b(from.matrix_b());
  }
  if (from.lda() != 0) {
    set_lda(from.lda());
  }
  if (from.ldb() != 0) {
    set_ldb(from.ldb());
  }
  if (from.matrix_c() != 0) {
    set_matrix_c(from.matrix_c());
  }
  if (from.beta() != 0) {
    set_beta(from.beta());
  }
  if (from.ldc() != 0) {
    set_ldc(from.ldc());
  }
}

void cublasSgemmQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cublasSgemmQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cublasSgemmQuery::CopyFrom(const cublasSgemmQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cublasSgemmQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cublasSgemmQuery::IsInitialized() const {
  return true;
}

void cublasSgemmQuery::Swap(cublasSgemmQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cublasSgemmQuery::InternalSwap(cublasSgemmQuery* other) {
  using std::swap;
  handle_.Swap(&other->handle_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(transa_, other->transa_);
  swap(transb_, other->transb_);
  swap(m_, other->m_);
  swap(n_, other->n_);
  swap(k_, other->k_);
  swap(alpha_, other->alpha_);
  swap(matrix_a_, other->matrix_a_);
  swap(matrix_b_, other->matrix_b_);
  swap(lda_, other->lda_);
  swap(ldb_, other->ldb_);
  swap(matrix_c_, other->matrix_c_);
  swap(beta_, other->beta_);
  swap(ldc_, other->ldc_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cublasSgemmQuery::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cublasSgemmStridedBatchedQuery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cublasSgemmStridedBatchedQuery::kHandleFieldNumber;
const int cublasSgemmStridedBatchedQuery::kTransaFieldNumber;
const int cublasSgemmStridedBatchedQuery::kTransbFieldNumber;
const int cublasSgemmStridedBatchedQuery::kMFieldNumber;
const int cublasSgemmStridedBatchedQuery::kNFieldNumber;
const int cublasSgemmStridedBatchedQuery::kKFieldNumber;
const int cublasSgemmStridedBatchedQuery::kAlphaFieldNumber;
const int cublasSgemmStridedBatchedQuery::kMatrixAFieldNumber;
const int cublasSgemmStridedBatchedQuery::kLdaFieldNumber;
const int cublasSgemmStridedBatchedQuery::kMatrixBFieldNumber;
const int cublasSgemmStridedBatchedQuery::kLdbFieldNumber;
const int cublasSgemmStridedBatchedQuery::kBetaFieldNumber;
const int cublasSgemmStridedBatchedQuery::kMatrixCFieldNumber;
const int cublasSgemmStridedBatchedQuery::kLdcFieldNumber;
const int cublasSgemmStridedBatchedQuery::kStrideAFieldNumber;
const int cublasSgemmStridedBatchedQuery::kStrideBFieldNumber;
const int cublasSgemmStridedBatchedQuery::kStrideCFieldNumber;
const int cublasSgemmStridedBatchedQuery::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cublasSgemmStridedBatchedQuery::cublasSgemmStridedBatchedQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cublasSgemmStridedBatchedQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cublasSgemmStridedBatchedQuery)
}
cublasSgemmStridedBatchedQuery::cublasSgemmStridedBatchedQuery(const cublasSgemmStridedBatchedQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.handle().size() > 0) {
    handle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handle_);
  }
  ::memcpy(&transa_, &from.transa_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&transa_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:cudarpc.cublasSgemmStridedBatchedQuery)
}

void cublasSgemmStridedBatchedQuery::SharedCtor() {
  handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&transa_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&transa_)) + sizeof(count_));
}

cublasSgemmStridedBatchedQuery::~cublasSgemmStridedBatchedQuery() {
  // @@protoc_insertion_point(destructor:cudarpc.cublasSgemmStridedBatchedQuery)
  SharedDtor();
}

void cublasSgemmStridedBatchedQuery::SharedDtor() {
  handle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cublasSgemmStridedBatchedQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cublasSgemmStridedBatchedQuery::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cublasSgemmStridedBatchedQuery& cublasSgemmStridedBatchedQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cublasSgemmStridedBatchedQuery.base);
  return *internal_default_instance();
}


void cublasSgemmStridedBatchedQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cublasSgemmStridedBatchedQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  handle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&transa_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&transa_)) + sizeof(count_));
  _internal_metadata_.Clear();
}

bool cublasSgemmStridedBatchedQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cublasSgemmStridedBatchedQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_handle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 transa = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transa_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 transb = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 m = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 n = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &n_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 k = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &k_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float alpha = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &alpha_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 matrix_a = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &matrix_a_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 lda = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lda_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 matrix_b = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &matrix_b_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ldb = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ldb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float beta = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &beta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 matrix_c = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &matrix_c_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ldc = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ldc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 stride_a = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &stride_a_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 stride_b = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &stride_b_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 stride_c = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &stride_c_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 count = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cublasSgemmStridedBatchedQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cublasSgemmStridedBatchedQuery)
  return false;
#undef DO_
}

void cublasSgemmStridedBatchedQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cublasSgemmStridedBatchedQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes handle = 1;
  if (this->handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->handle(), output);
  }

  // int32 transa = 2;
  if (this->transa() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->transa(), output);
  }

  // int32 transb = 3;
  if (this->transb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->transb(), output);
  }

  // int32 m = 4;
  if (this->m() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m(), output);
  }

  // int32 n = 5;
  if (this->n() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->n(), output);
  }

  // int32 k = 6;
  if (this->k() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->k(), output);
  }

  // float alpha = 7;
  if (this->alpha() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->alpha(), output);
  }

  // uint64 matrix_a = 8;
  if (this->matrix_a() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->matrix_a(), output);
  }

  // int32 lda = 9;
  if (this->lda() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->lda(), output);
  }

  // uint64 matrix_b = 10;
  if (this->matrix_b() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->matrix_b(), output);
  }

  // int32 ldb = 11;
  if (this->ldb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->ldb(), output);
  }

  // float beta = 12;
  if (this->beta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->beta(), output);
  }

  // uint64 matrix_c = 13;
  if (this->matrix_c() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(13, this->matrix_c(), output);
  }

  // int32 ldc = 14;
  if (this->ldc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->ldc(), output);
  }

  // int64 stride_a = 15;
  if (this->stride_a() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(15, this->stride_a(), output);
  }

  // int64 stride_b = 16;
  if (this->stride_b() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(16, this->stride_b(), output);
  }

  // int64 stride_c = 17;
  if (this->stride_c() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(17, this->stride_c(), output);
  }

  // int32 count = 18;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cublasSgemmStridedBatchedQuery)
}

::google::protobuf::uint8* cublasSgemmStridedBatchedQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cublasSgemmStridedBatchedQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes handle = 1;
  if (this->handle().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->handle(), target);
  }

  // int32 transa = 2;
  if (this->transa() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->transa(), target);
  }

  // int32 transb = 3;
  if (this->transb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->transb(), target);
  }

  // int32 m = 4;
  if (this->m() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m(), target);
  }

  // int32 n = 5;
  if (this->n() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->n(), target);
  }

  // int32 k = 6;
  if (this->k() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->k(), target);
  }

  // float alpha = 7;
  if (this->alpha() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->alpha(), target);
  }

  // uint64 matrix_a = 8;
  if (this->matrix_a() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->matrix_a(), target);
  }

  // int32 lda = 9;
  if (this->lda() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->lda(), target);
  }

  // uint64 matrix_b = 10;
  if (this->matrix_b() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->matrix_b(), target);
  }

  // int32 ldb = 11;
  if (this->ldb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->ldb(), target);
  }

  // float beta = 12;
  if (this->beta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->beta(), target);
  }

  // uint64 matrix_c = 13;
  if (this->matrix_c() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(13, this->matrix_c(), target);
  }

  // int32 ldc = 14;
  if (this->ldc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->ldc(), target);
  }

  // int64 stride_a = 15;
  if (this->stride_a() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(15, this->stride_a(), target);
  }

  // int64 stride_b = 16;
  if (this->stride_b() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(16, this->stride_b(), target);
  }

  // int64 stride_c = 17;
  if (this->stride_c() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(17, this->stride_c(), target);
  }

  // int32 count = 18;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cublasSgemmStridedBatchedQuery)
  return target;
}

size_t cublasSgemmStridedBatchedQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cublasSgemmStridedBatchedQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes handle = 1;
  if (this->handle().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->handle());
  }

  // int32 transa = 2;
  if (this->transa() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->transa());
  }

  // int32 transb = 3;
  if (this->transb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->transb());
  }

  // int32 m = 4;
  if (this->m() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->m());
  }

  // int32 n = 5;
  if (this->n() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->n());
  }

  // int32 k = 6;
  if (this->k() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->k());
  }

  // float alpha = 7;
  if (this->alpha() != 0) {
    total_size += 1 + 4;
  }

  // uint64 matrix_a = 8;
  if (this->matrix_a() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->matrix_a());
  }

  // uint64 matrix_b = 10;
  if (this->matrix_b() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->matrix_b());
  }

  // int32 lda = 9;
  if (this->lda() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lda());
  }

  // int32 ldb = 11;
  if (this->ldb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ldb());
  }

  // uint64 matrix_c = 13;
  if (this->matrix_c() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->matrix_c());
  }

  // float beta = 12;
  if (this->beta() != 0) {
    total_size += 1 + 4;
  }

  // int32 ldc = 14;
  if (this->ldc() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ldc());
  }

  // int64 stride_a = 15;
  if (this->stride_a() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->stride_a());
  }

  // int64 stride_b = 16;
  if (this->stride_b() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->stride_b());
  }

  // int64 stride_c = 17;
  if (this->stride_c() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->stride_c());
  }

  // int32 count = 18;
  if (this->count() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cublasSgemmStridedBatchedQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cublasSgemmStridedBatchedQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const cublasSgemmStridedBatchedQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cublasSgemmStridedBatchedQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cublasSgemmStridedBatchedQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cublasSgemmStridedBatchedQuery)
    MergeFrom(*source);
  }
}

void cublasSgemmStridedBatchedQuery::MergeFrom(const cublasSgemmStridedBatchedQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cublasSgemmStridedBatchedQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.handle().size() > 0) {

    handle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handle_);
  }
  if (from.transa() != 0) {
    set_transa(from.transa());
  }
  if (from.transb() != 0) {
    set_transb(from.transb());
  }
  if (from.m() != 0) {
    set_m(from.m());
  }
  if (from.n() != 0) {
    set_n(from.n());
  }
  if (from.k() != 0) {
    set_k(from.k());
  }
  if (from.alpha() != 0) {
    set_alpha(from.alpha());
  }
  if (from.matrix_a() != 0) {
    set_matrix_a(from.matrix_a());
  }
  if (from.matrix_b() != 0) {
    set_matrix_b(from.matrix_b());
  }
  if (from.lda() != 0) {
    set_lda(from.lda());
  }
  if (from.ldb() != 0) {
    set_ldb(from.ldb());
  }
  if (from.matrix_c() != 0) {
    set_matrix_c(from.matrix_c());
  }
  if (from.beta() != 0) {
    set_beta(from.beta());
  }
  if (from.ldc() != 0) {
    set_ldc(from.ldc());
  }
  if (from.stride_a() != 0) {
    set_stride_a(from.stride_a());
  }
  if (from.stride_b() != 0) {
    set_stride_b(from.stride_b());
  }
  if (from.stride_c() != 0) {
    set_stride_c(from.stride_c());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void cublasSgemmStridedBatchedQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cublasSgemmStridedBatchedQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cublasSgemmStridedBatchedQuery::CopyFrom(const cublasSgemmStridedBatchedQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cublasSgemmStridedBatchedQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cublasSgemmStridedBatchedQuery::IsInitialized() const {
  return true;
}

void cublasSgemmStridedBatchedQuery::Swap(cublasSgemmStridedBatchedQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cublasSgemmStridedBatchedQuery::InternalSwap(cublasSgemmStridedBatchedQuery* other) {
  using std::swap;
  handle_.Swap(&other->handle_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(transa_, other->transa_);
  swap(transb_, other->transb_);
  swap(m_, other->m_);
  swap(n_, other->n_);
  swap(k_, other->k_);
  swap(alpha_, other->alpha_);
  swap(matrix_a_, other->matrix_a_);
  swap(matrix_b_, other->matrix_b_);
  swap(lda_, other->lda_);
  swap(ldb_, other->ldb_);
  swap(matrix_c_, other->matrix_c_);
  swap(beta_, other->beta_);
  swap(ldc_, other->ldc_);
  swap(stride_a_, other->stride_a_);
  swap(stride_b_, other->stride_b_);
  swap(stride_c_, other->stride_c_);
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cublasSgemmStridedBatchedQuery::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cudnnCreateDesciptorResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cudnnCreateDesciptorResponse::kErrorFieldNumber;
const int cudnnCreateDesciptorResponse::kCudnnDescriptorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cudnnCreateDesciptorResponse::cudnnCreateDesciptorResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cudnnCreateDesciptorResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cudnnCreateDesciptorResponse)
}
cudnnCreateDesciptorResponse::cudnnCreateDesciptorResponse(const cudnnCreateDesciptorResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cudnn_descriptor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cudnn_descriptor().size() > 0) {
    cudnn_descriptor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cudnn_descriptor_);
  }
  error_ = from.error_;
  // @@protoc_insertion_point(copy_constructor:cudarpc.cudnnCreateDesciptorResponse)
}

void cudnnCreateDesciptorResponse::SharedCtor() {
  cudnn_descriptor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = 0;
}

cudnnCreateDesciptorResponse::~cudnnCreateDesciptorResponse() {
  // @@protoc_insertion_point(destructor:cudarpc.cudnnCreateDesciptorResponse)
  SharedDtor();
}

void cudnnCreateDesciptorResponse::SharedDtor() {
  cudnn_descriptor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cudnnCreateDesciptorResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cudnnCreateDesciptorResponse::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cudnnCreateDesciptorResponse& cudnnCreateDesciptorResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cudnnCreateDesciptorResponse.base);
  return *internal_default_instance();
}


void cudnnCreateDesciptorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cudnnCreateDesciptorResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cudnn_descriptor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = 0;
  _internal_metadata_.Clear();
}

bool cudnnCreateDesciptorResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cudnnCreateDesciptorResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes cudnn_descriptor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_cudnn_descriptor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cudnnCreateDesciptorResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cudnnCreateDesciptorResponse)
  return false;
#undef DO_
}

void cudnnCreateDesciptorResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cudnnCreateDesciptorResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // bytes cudnn_descriptor = 2;
  if (this->cudnn_descriptor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->cudnn_descriptor(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cudnnCreateDesciptorResponse)
}

::google::protobuf::uint8* cudnnCreateDesciptorResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cudnnCreateDesciptorResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // bytes cudnn_descriptor = 2;
  if (this->cudnn_descriptor().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->cudnn_descriptor(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cudnnCreateDesciptorResponse)
  return target;
}

size_t cudnnCreateDesciptorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cudnnCreateDesciptorResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes cudnn_descriptor = 2;
  if (this->cudnn_descriptor().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->cudnn_descriptor());
  }

  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cudnnCreateDesciptorResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cudnnCreateDesciptorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const cudnnCreateDesciptorResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cudnnCreateDesciptorResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cudnnCreateDesciptorResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cudnnCreateDesciptorResponse)
    MergeFrom(*source);
  }
}

void cudnnCreateDesciptorResponse::MergeFrom(const cudnnCreateDesciptorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cudnnCreateDesciptorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cudnn_descriptor().size() > 0) {

    cudnn_descriptor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cudnn_descriptor_);
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void cudnnCreateDesciptorResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cudnnCreateDesciptorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cudnnCreateDesciptorResponse::CopyFrom(const cudnnCreateDesciptorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cudnnCreateDesciptorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cudnnCreateDesciptorResponse::IsInitialized() const {
  return true;
}

void cudnnCreateDesciptorResponse::Swap(cudnnCreateDesciptorResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cudnnCreateDesciptorResponse::InternalSwap(cudnnCreateDesciptorResponse* other) {
  using std::swap;
  cudnn_descriptor_.Swap(&other->cudnn_descriptor_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cudnnCreateDesciptorResponse::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cudnnSetTensorNdDescriptorQuery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cudnnSetTensorNdDescriptorQuery::kCudnnDescriptorFieldNumber;
const int cudnnSetTensorNdDescriptorQuery::kTypeFieldNumber;
const int cudnnSetTensorNdDescriptorQuery::kDimsFieldNumber;
const int cudnnSetTensorNdDescriptorQuery::kDimAFieldNumber;
const int cudnnSetTensorNdDescriptorQuery::kStrideAFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cudnnSetTensorNdDescriptorQuery::cudnnSetTensorNdDescriptorQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cudnnSetTensorNdDescriptorQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cudnnSetTensorNdDescriptorQuery)
}
cudnnSetTensorNdDescriptorQuery::cudnnSetTensorNdDescriptorQuery(const cudnnSetTensorNdDescriptorQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      dim_a_(from.dim_a_),
      stride_a_(from.stride_a_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cudnn_descriptor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cudnn_descriptor().size() > 0) {
    cudnn_descriptor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cudnn_descriptor_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&dims_) -
    reinterpret_cast<char*>(&type_)) + sizeof(dims_));
  // @@protoc_insertion_point(copy_constructor:cudarpc.cudnnSetTensorNdDescriptorQuery)
}

void cudnnSetTensorNdDescriptorQuery::SharedCtor() {
  cudnn_descriptor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dims_) -
      reinterpret_cast<char*>(&type_)) + sizeof(dims_));
}

cudnnSetTensorNdDescriptorQuery::~cudnnSetTensorNdDescriptorQuery() {
  // @@protoc_insertion_point(destructor:cudarpc.cudnnSetTensorNdDescriptorQuery)
  SharedDtor();
}

void cudnnSetTensorNdDescriptorQuery::SharedDtor() {
  cudnn_descriptor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cudnnSetTensorNdDescriptorQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cudnnSetTensorNdDescriptorQuery::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cudnnSetTensorNdDescriptorQuery& cudnnSetTensorNdDescriptorQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cudnnSetTensorNdDescriptorQuery.base);
  return *internal_default_instance();
}


void cudnnSetTensorNdDescriptorQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cudnnSetTensorNdDescriptorQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dim_a_.Clear();
  stride_a_.Clear();
  cudnn_descriptor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dims_) -
      reinterpret_cast<char*>(&type_)) + sizeof(dims_));
  _internal_metadata_.Clear();
}

bool cudnnSetTensorNdDescriptorQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cudnnSetTensorNdDescriptorQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes cudnn_descriptor = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_cudnn_descriptor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 dims = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dims_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 dim_a = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_dim_a())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 34u, input, this->mutable_dim_a())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 stride_a = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_stride_a())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 42u, input, this->mutable_stride_a())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cudnnSetTensorNdDescriptorQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cudnnSetTensorNdDescriptorQuery)
  return false;
#undef DO_
}

void cudnnSetTensorNdDescriptorQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cudnnSetTensorNdDescriptorQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes cudnn_descriptor = 1;
  if (this->cudnn_descriptor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->cudnn_descriptor(), output);
  }

  // int32 type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // int32 dims = 3;
  if (this->dims() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->dims(), output);
  }

  // repeated int32 dim_a = 4;
  if (this->dim_a_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _dim_a_cached_byte_size_));
  }
  for (int i = 0, n = this->dim_a_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->dim_a(i), output);
  }

  // repeated int32 stride_a = 5;
  if (this->stride_a_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _stride_a_cached_byte_size_));
  }
  for (int i = 0, n = this->stride_a_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->stride_a(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cudnnSetTensorNdDescriptorQuery)
}

::google::protobuf::uint8* cudnnSetTensorNdDescriptorQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cudnnSetTensorNdDescriptorQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes cudnn_descriptor = 1;
  if (this->cudnn_descriptor().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->cudnn_descriptor(), target);
  }

  // int32 type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // int32 dims = 3;
  if (this->dims() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->dims(), target);
  }

  // repeated int32 dim_a = 4;
  if (this->dim_a_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _dim_a_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->dim_a_, target);
  }

  // repeated int32 stride_a = 5;
  if (this->stride_a_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _stride_a_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->stride_a_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cudnnSetTensorNdDescriptorQuery)
  return target;
}

size_t cudnnSetTensorNdDescriptorQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cudnnSetTensorNdDescriptorQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 dim_a = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->dim_a_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _dim_a_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 stride_a = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->stride_a_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _stride_a_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bytes cudnn_descriptor = 1;
  if (this->cudnn_descriptor().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->cudnn_descriptor());
  }

  // int32 type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 dims = 3;
  if (this->dims() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dims());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cudnnSetTensorNdDescriptorQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cudnnSetTensorNdDescriptorQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const cudnnSetTensorNdDescriptorQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cudnnSetTensorNdDescriptorQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cudnnSetTensorNdDescriptorQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cudnnSetTensorNdDescriptorQuery)
    MergeFrom(*source);
  }
}

void cudnnSetTensorNdDescriptorQuery::MergeFrom(const cudnnSetTensorNdDescriptorQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cudnnSetTensorNdDescriptorQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dim_a_.MergeFrom(from.dim_a_);
  stride_a_.MergeFrom(from.stride_a_);
  if (from.cudnn_descriptor().size() > 0) {

    cudnn_descriptor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cudnn_descriptor_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.dims() != 0) {
    set_dims(from.dims());
  }
}

void cudnnSetTensorNdDescriptorQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cudnnSetTensorNdDescriptorQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cudnnSetTensorNdDescriptorQuery::CopyFrom(const cudnnSetTensorNdDescriptorQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cudnnSetTensorNdDescriptorQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cudnnSetTensorNdDescriptorQuery::IsInitialized() const {
  return true;
}

void cudnnSetTensorNdDescriptorQuery::Swap(cudnnSetTensorNdDescriptorQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cudnnSetTensorNdDescriptorQuery::InternalSwap(cudnnSetTensorNdDescriptorQuery* other) {
  using std::swap;
  dim_a_.InternalSwap(&other->dim_a_);
  stride_a_.InternalSwap(&other->stride_a_);
  cudnn_descriptor_.Swap(&other->cudnn_descriptor_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(dims_, other->dims_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cudnnSetTensorNdDescriptorQuery::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cudnnSetFilterNdDescriptorQuery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cudnnSetFilterNdDescriptorQuery::kCudnnDescriptorFieldNumber;
const int cudnnSetFilterNdDescriptorQuery::kTypeFieldNumber;
const int cudnnSetFilterNdDescriptorQuery::kFormatFieldNumber;
const int cudnnSetFilterNdDescriptorQuery::kDimsFieldNumber;
const int cudnnSetFilterNdDescriptorQuery::kDimAFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cudnnSetFilterNdDescriptorQuery::cudnnSetFilterNdDescriptorQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cudnnSetFilterNdDescriptorQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cudnnSetFilterNdDescriptorQuery)
}
cudnnSetFilterNdDescriptorQuery::cudnnSetFilterNdDescriptorQuery(const cudnnSetFilterNdDescriptorQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      dim_a_(from.dim_a_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cudnn_descriptor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cudnn_descriptor().size() > 0) {
    cudnn_descriptor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cudnn_descriptor_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&dims_) -
    reinterpret_cast<char*>(&type_)) + sizeof(dims_));
  // @@protoc_insertion_point(copy_constructor:cudarpc.cudnnSetFilterNdDescriptorQuery)
}

void cudnnSetFilterNdDescriptorQuery::SharedCtor() {
  cudnn_descriptor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dims_) -
      reinterpret_cast<char*>(&type_)) + sizeof(dims_));
}

cudnnSetFilterNdDescriptorQuery::~cudnnSetFilterNdDescriptorQuery() {
  // @@protoc_insertion_point(destructor:cudarpc.cudnnSetFilterNdDescriptorQuery)
  SharedDtor();
}

void cudnnSetFilterNdDescriptorQuery::SharedDtor() {
  cudnn_descriptor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cudnnSetFilterNdDescriptorQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cudnnSetFilterNdDescriptorQuery::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cudnnSetFilterNdDescriptorQuery& cudnnSetFilterNdDescriptorQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cudnnSetFilterNdDescriptorQuery.base);
  return *internal_default_instance();
}


void cudnnSetFilterNdDescriptorQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cudnnSetFilterNdDescriptorQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dim_a_.Clear();
  cudnn_descriptor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dims_) -
      reinterpret_cast<char*>(&type_)) + sizeof(dims_));
  _internal_metadata_.Clear();
}

bool cudnnSetFilterNdDescriptorQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cudnnSetFilterNdDescriptorQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes cudnn_descriptor = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_cudnn_descriptor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 format = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &format_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 dims = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dims_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 dim_a = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_dim_a())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 42u, input, this->mutable_dim_a())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cudnnSetFilterNdDescriptorQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cudnnSetFilterNdDescriptorQuery)
  return false;
#undef DO_
}

void cudnnSetFilterNdDescriptorQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cudnnSetFilterNdDescriptorQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes cudnn_descriptor = 1;
  if (this->cudnn_descriptor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->cudnn_descriptor(), output);
  }

  // int32 type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // int32 format = 3;
  if (this->format() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->format(), output);
  }

  // int32 dims = 4;
  if (this->dims() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->dims(), output);
  }

  // repeated int32 dim_a = 5;
  if (this->dim_a_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _dim_a_cached_byte_size_));
  }
  for (int i = 0, n = this->dim_a_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->dim_a(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cudnnSetFilterNdDescriptorQuery)
}

::google::protobuf::uint8* cudnnSetFilterNdDescriptorQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cudnnSetFilterNdDescriptorQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes cudnn_descriptor = 1;
  if (this->cudnn_descriptor().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->cudnn_descriptor(), target);
  }

  // int32 type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // int32 format = 3;
  if (this->format() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->format(), target);
  }

  // int32 dims = 4;
  if (this->dims() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->dims(), target);
  }

  // repeated int32 dim_a = 5;
  if (this->dim_a_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _dim_a_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->dim_a_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cudnnSetFilterNdDescriptorQuery)
  return target;
}

size_t cudnnSetFilterNdDescriptorQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cudnnSetFilterNdDescriptorQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 dim_a = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->dim_a_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _dim_a_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bytes cudnn_descriptor = 1;
  if (this->cudnn_descriptor().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->cudnn_descriptor());
  }

  // int32 type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 format = 3;
  if (this->format() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->format());
  }

  // int32 dims = 4;
  if (this->dims() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dims());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cudnnSetFilterNdDescriptorQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cudnnSetFilterNdDescriptorQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const cudnnSetFilterNdDescriptorQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cudnnSetFilterNdDescriptorQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cudnnSetFilterNdDescriptorQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cudnnSetFilterNdDescriptorQuery)
    MergeFrom(*source);
  }
}

void cudnnSetFilterNdDescriptorQuery::MergeFrom(const cudnnSetFilterNdDescriptorQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cudnnSetFilterNdDescriptorQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dim_a_.MergeFrom(from.dim_a_);
  if (from.cudnn_descriptor().size() > 0) {

    cudnn_descriptor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cudnn_descriptor_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.format() != 0) {
    set_format(from.format());
  }
  if (from.dims() != 0) {
    set_dims(from.dims());
  }
}

void cudnnSetFilterNdDescriptorQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cudnnSetFilterNdDescriptorQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cudnnSetFilterNdDescriptorQuery::CopyFrom(const cudnnSetFilterNdDescriptorQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cudnnSetFilterNdDescriptorQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cudnnSetFilterNdDescriptorQuery::IsInitialized() const {
  return true;
}

void cudnnSetFilterNdDescriptorQuery::Swap(cudnnSetFilterNdDescriptorQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cudnnSetFilterNdDescriptorQuery::InternalSwap(cudnnSetFilterNdDescriptorQuery* other) {
  using std::swap;
  dim_a_.InternalSwap(&other->dim_a_);
  cudnn_descriptor_.Swap(&other->cudnn_descriptor_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(format_, other->format_);
  swap(dims_, other->dims_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cudnnSetFilterNdDescriptorQuery::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cudnnSetConvolutionNdDescriptorQuery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cudnnSetConvolutionNdDescriptorQuery::kCudnnDescriptorFieldNumber;
const int cudnnSetConvolutionNdDescriptorQuery::kLengthFieldNumber;
const int cudnnSetConvolutionNdDescriptorQuery::kPadAFieldNumber;
const int cudnnSetConvolutionNdDescriptorQuery::kStrideAFieldNumber;
const int cudnnSetConvolutionNdDescriptorQuery::kDilationAFieldNumber;
const int cudnnSetConvolutionNdDescriptorQuery::kModeFieldNumber;
const int cudnnSetConvolutionNdDescriptorQuery::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cudnnSetConvolutionNdDescriptorQuery::cudnnSetConvolutionNdDescriptorQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cudnnSetConvolutionNdDescriptorQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cudnnSetConvolutionNdDescriptorQuery)
}
cudnnSetConvolutionNdDescriptorQuery::cudnnSetConvolutionNdDescriptorQuery(const cudnnSetConvolutionNdDescriptorQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pad_a_(from.pad_a_),
      stride_a_(from.stride_a_),
      dilation_a_(from.dilation_a_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cudnn_descriptor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cudnn_descriptor().size() > 0) {
    cudnn_descriptor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cudnn_descriptor_);
  }
  ::memcpy(&length_, &from.length_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&length_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:cudarpc.cudnnSetConvolutionNdDescriptorQuery)
}

void cudnnSetConvolutionNdDescriptorQuery::SharedCtor() {
  cudnn_descriptor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&length_)) + sizeof(type_));
}

cudnnSetConvolutionNdDescriptorQuery::~cudnnSetConvolutionNdDescriptorQuery() {
  // @@protoc_insertion_point(destructor:cudarpc.cudnnSetConvolutionNdDescriptorQuery)
  SharedDtor();
}

void cudnnSetConvolutionNdDescriptorQuery::SharedDtor() {
  cudnn_descriptor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cudnnSetConvolutionNdDescriptorQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cudnnSetConvolutionNdDescriptorQuery::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cudnnSetConvolutionNdDescriptorQuery& cudnnSetConvolutionNdDescriptorQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cudnnSetConvolutionNdDescriptorQuery.base);
  return *internal_default_instance();
}


void cudnnSetConvolutionNdDescriptorQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cudnnSetConvolutionNdDescriptorQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pad_a_.Clear();
  stride_a_.Clear();
  dilation_a_.Clear();
  cudnn_descriptor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&length_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool cudnnSetConvolutionNdDescriptorQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cudnnSetConvolutionNdDescriptorQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes cudnn_descriptor = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_cudnn_descriptor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 length = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 pad_a = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_pad_a())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 26u, input, this->mutable_pad_a())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 stride_a = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_stride_a())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 34u, input, this->mutable_stride_a())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 dilation_a = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_dilation_a())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 42u, input, this->mutable_dilation_a())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mode = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cudnnSetConvolutionNdDescriptorQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cudnnSetConvolutionNdDescriptorQuery)
  return false;
#undef DO_
}

void cudnnSetConvolutionNdDescriptorQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cudnnSetConvolutionNdDescriptorQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes cudnn_descriptor = 1;
  if (this->cudnn_descriptor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->cudnn_descriptor(), output);
  }

  // int32 length = 2;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->length(), output);
  }

  // repeated int32 pad_a = 3;
  if (this->pad_a_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _pad_a_cached_byte_size_));
  }
  for (int i = 0, n = this->pad_a_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->pad_a(i), output);
  }

  // repeated int32 stride_a = 4;
  if (this->stride_a_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _stride_a_cached_byte_size_));
  }
  for (int i = 0, n = this->stride_a_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->stride_a(i), output);
  }

  // repeated int32 dilation_a = 5;
  if (this->dilation_a_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _dilation_a_cached_byte_size_));
  }
  for (int i = 0, n = this->dilation_a_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->dilation_a(i), output);
  }

  // int32 mode = 6;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->mode(), output);
  }

  // int32 type = 7;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cudnnSetConvolutionNdDescriptorQuery)
}

::google::protobuf::uint8* cudnnSetConvolutionNdDescriptorQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cudnnSetConvolutionNdDescriptorQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes cudnn_descriptor = 1;
  if (this->cudnn_descriptor().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->cudnn_descriptor(), target);
  }

  // int32 length = 2;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->length(), target);
  }

  // repeated int32 pad_a = 3;
  if (this->pad_a_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _pad_a_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->pad_a_, target);
  }

  // repeated int32 stride_a = 4;
  if (this->stride_a_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _stride_a_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->stride_a_, target);
  }

  // repeated int32 dilation_a = 5;
  if (this->dilation_a_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _dilation_a_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->dilation_a_, target);
  }

  // int32 mode = 6;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->mode(), target);
  }

  // int32 type = 7;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cudnnSetConvolutionNdDescriptorQuery)
  return target;
}

size_t cudnnSetConvolutionNdDescriptorQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cudnnSetConvolutionNdDescriptorQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 pad_a = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->pad_a_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _pad_a_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 stride_a = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->stride_a_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _stride_a_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 dilation_a = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->dilation_a_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _dilation_a_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bytes cudnn_descriptor = 1;
  if (this->cudnn_descriptor().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->cudnn_descriptor());
  }

  // int32 length = 2;
  if (this->length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->length());
  }

  // int32 mode = 6;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mode());
  }

  // int32 type = 7;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cudnnSetConvolutionNdDescriptorQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cudnnSetConvolutionNdDescriptorQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const cudnnSetConvolutionNdDescriptorQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cudnnSetConvolutionNdDescriptorQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cudnnSetConvolutionNdDescriptorQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cudnnSetConvolutionNdDescriptorQuery)
    MergeFrom(*source);
  }
}

void cudnnSetConvolutionNdDescriptorQuery::MergeFrom(const cudnnSetConvolutionNdDescriptorQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cudnnSetConvolutionNdDescriptorQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pad_a_.MergeFrom(from.pad_a_);
  stride_a_.MergeFrom(from.stride_a_);
  dilation_a_.MergeFrom(from.dilation_a_);
  if (from.cudnn_descriptor().size() > 0) {

    cudnn_descriptor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cudnn_descriptor_);
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void cudnnSetConvolutionNdDescriptorQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cudnnSetConvolutionNdDescriptorQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cudnnSetConvolutionNdDescriptorQuery::CopyFrom(const cudnnSetConvolutionNdDescriptorQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cudnnSetConvolutionNdDescriptorQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cudnnSetConvolutionNdDescriptorQuery::IsInitialized() const {
  return true;
}

void cudnnSetConvolutionNdDescriptorQuery::Swap(cudnnSetConvolutionNdDescriptorQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cudnnSetConvolutionNdDescriptorQuery::InternalSwap(cudnnSetConvolutionNdDescriptorQuery* other) {
  using std::swap;
  pad_a_.InternalSwap(&other->pad_a_);
  stride_a_.InternalSwap(&other->stride_a_);
  dilation_a_.InternalSwap(&other->dilation_a_);
  cudnn_descriptor_.Swap(&other->cudnn_descriptor_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(length_, other->length_);
  swap(mode_, other->mode_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cudnnSetConvolutionNdDescriptorQuery::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cudnnSetConvolutionGroupCountQuery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cudnnSetConvolutionGroupCountQuery::kCudnnDescriptorFieldNumber;
const int cudnnSetConvolutionGroupCountQuery::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cudnnSetConvolutionGroupCountQuery::cudnnSetConvolutionGroupCountQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cudnnSetConvolutionGroupCountQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cudnnSetConvolutionGroupCountQuery)
}
cudnnSetConvolutionGroupCountQuery::cudnnSetConvolutionGroupCountQuery(const cudnnSetConvolutionGroupCountQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cudnn_descriptor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cudnn_descriptor().size() > 0) {
    cudnn_descriptor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cudnn_descriptor_);
  }
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:cudarpc.cudnnSetConvolutionGroupCountQuery)
}

void cudnnSetConvolutionGroupCountQuery::SharedCtor() {
  cudnn_descriptor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  count_ = 0;
}

cudnnSetConvolutionGroupCountQuery::~cudnnSetConvolutionGroupCountQuery() {
  // @@protoc_insertion_point(destructor:cudarpc.cudnnSetConvolutionGroupCountQuery)
  SharedDtor();
}

void cudnnSetConvolutionGroupCountQuery::SharedDtor() {
  cudnn_descriptor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cudnnSetConvolutionGroupCountQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cudnnSetConvolutionGroupCountQuery::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cudnnSetConvolutionGroupCountQuery& cudnnSetConvolutionGroupCountQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cudnnSetConvolutionGroupCountQuery.base);
  return *internal_default_instance();
}


void cudnnSetConvolutionGroupCountQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cudnnSetConvolutionGroupCountQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cudnn_descriptor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  count_ = 0;
  _internal_metadata_.Clear();
}

bool cudnnSetConvolutionGroupCountQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cudnnSetConvolutionGroupCountQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes cudnn_descriptor = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_cudnn_descriptor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cudnnSetConvolutionGroupCountQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cudnnSetConvolutionGroupCountQuery)
  return false;
#undef DO_
}

void cudnnSetConvolutionGroupCountQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cudnnSetConvolutionGroupCountQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes cudnn_descriptor = 1;
  if (this->cudnn_descriptor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->cudnn_descriptor(), output);
  }

  // int32 count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cudnnSetConvolutionGroupCountQuery)
}

::google::protobuf::uint8* cudnnSetConvolutionGroupCountQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cudnnSetConvolutionGroupCountQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes cudnn_descriptor = 1;
  if (this->cudnn_descriptor().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->cudnn_descriptor(), target);
  }

  // int32 count = 2;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cudnnSetConvolutionGroupCountQuery)
  return target;
}

size_t cudnnSetConvolutionGroupCountQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cudnnSetConvolutionGroupCountQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes cudnn_descriptor = 1;
  if (this->cudnn_descriptor().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->cudnn_descriptor());
  }

  // int32 count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cudnnSetConvolutionGroupCountQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cudnnSetConvolutionGroupCountQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const cudnnSetConvolutionGroupCountQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cudnnSetConvolutionGroupCountQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cudnnSetConvolutionGroupCountQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cudnnSetConvolutionGroupCountQuery)
    MergeFrom(*source);
  }
}

void cudnnSetConvolutionGroupCountQuery::MergeFrom(const cudnnSetConvolutionGroupCountQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cudnnSetConvolutionGroupCountQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cudnn_descriptor().size() > 0) {

    cudnn_descriptor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cudnn_descriptor_);
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void cudnnSetConvolutionGroupCountQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cudnnSetConvolutionGroupCountQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cudnnSetConvolutionGroupCountQuery::CopyFrom(const cudnnSetConvolutionGroupCountQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cudnnSetConvolutionGroupCountQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cudnnSetConvolutionGroupCountQuery::IsInitialized() const {
  return true;
}

void cudnnSetConvolutionGroupCountQuery::Swap(cudnnSetConvolutionGroupCountQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cudnnSetConvolutionGroupCountQuery::InternalSwap(cudnnSetConvolutionGroupCountQuery* other) {
  using std::swap;
  cudnn_descriptor_.Swap(&other->cudnn_descriptor_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cudnnSetConvolutionGroupCountQuery::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cudnnSetConvolutionMathTypeQuery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cudnnSetConvolutionMathTypeQuery::kCudnnDescriptorFieldNumber;
const int cudnnSetConvolutionMathTypeQuery::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cudnnSetConvolutionMathTypeQuery::cudnnSetConvolutionMathTypeQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cudnnSetConvolutionMathTypeQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cudnnSetConvolutionMathTypeQuery)
}
cudnnSetConvolutionMathTypeQuery::cudnnSetConvolutionMathTypeQuery(const cudnnSetConvolutionMathTypeQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cudnn_descriptor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cudnn_descriptor().size() > 0) {
    cudnn_descriptor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cudnn_descriptor_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:cudarpc.cudnnSetConvolutionMathTypeQuery)
}

void cudnnSetConvolutionMathTypeQuery::SharedCtor() {
  cudnn_descriptor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

cudnnSetConvolutionMathTypeQuery::~cudnnSetConvolutionMathTypeQuery() {
  // @@protoc_insertion_point(destructor:cudarpc.cudnnSetConvolutionMathTypeQuery)
  SharedDtor();
}

void cudnnSetConvolutionMathTypeQuery::SharedDtor() {
  cudnn_descriptor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cudnnSetConvolutionMathTypeQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cudnnSetConvolutionMathTypeQuery::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cudnnSetConvolutionMathTypeQuery& cudnnSetConvolutionMathTypeQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cudnnSetConvolutionMathTypeQuery.base);
  return *internal_default_instance();
}


void cudnnSetConvolutionMathTypeQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cudnnSetConvolutionMathTypeQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cudnn_descriptor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool cudnnSetConvolutionMathTypeQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cudnnSetConvolutionMathTypeQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes cudnn_descriptor = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_cudnn_descriptor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cudnnSetConvolutionMathTypeQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cudnnSetConvolutionMathTypeQuery)
  return false;
#undef DO_
}

void cudnnSetConvolutionMathTypeQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cudnnSetConvolutionMathTypeQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes cudnn_descriptor = 1;
  if (this->cudnn_descriptor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->cudnn_descriptor(), output);
  }

  // int32 type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cudnnSetConvolutionMathTypeQuery)
}

::google::protobuf::uint8* cudnnSetConvolutionMathTypeQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cudnnSetConvolutionMathTypeQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes cudnn_descriptor = 1;
  if (this->cudnn_descriptor().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->cudnn_descriptor(), target);
  }

  // int32 type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cudnnSetConvolutionMathTypeQuery)
  return target;
}

size_t cudnnSetConvolutionMathTypeQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cudnnSetConvolutionMathTypeQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes cudnn_descriptor = 1;
  if (this->cudnn_descriptor().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->cudnn_descriptor());
  }

  // int32 type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cudnnSetConvolutionMathTypeQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cudnnSetConvolutionMathTypeQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const cudnnSetConvolutionMathTypeQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cudnnSetConvolutionMathTypeQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cudnnSetConvolutionMathTypeQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cudnnSetConvolutionMathTypeQuery)
    MergeFrom(*source);
  }
}

void cudnnSetConvolutionMathTypeQuery::MergeFrom(const cudnnSetConvolutionMathTypeQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cudnnSetConvolutionMathTypeQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cudnn_descriptor().size() > 0) {

    cudnn_descriptor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cudnn_descriptor_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void cudnnSetConvolutionMathTypeQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cudnnSetConvolutionMathTypeQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cudnnSetConvolutionMathTypeQuery::CopyFrom(const cudnnSetConvolutionMathTypeQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cudnnSetConvolutionMathTypeQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cudnnSetConvolutionMathTypeQuery::IsInitialized() const {
  return true;
}

void cudnnSetConvolutionMathTypeQuery::Swap(cudnnSetConvolutionMathTypeQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cudnnSetConvolutionMathTypeQuery::InternalSwap(cudnnSetConvolutionMathTypeQuery* other) {
  using std::swap;
  cudnn_descriptor_.Swap(&other->cudnn_descriptor_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cudnnSetConvolutionMathTypeQuery::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cudnnGetConvolutionForwardAlgorithm_v7Query::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cudnnGetConvolutionForwardAlgorithm_v7Query::kHandleFieldNumber;
const int cudnnGetConvolutionForwardAlgorithm_v7Query::kXDescFieldNumber;
const int cudnnGetConvolutionForwardAlgorithm_v7Query::kWDescFieldNumber;
const int cudnnGetConvolutionForwardAlgorithm_v7Query::kConvDescFieldNumber;
const int cudnnGetConvolutionForwardAlgorithm_v7Query::kYDescFieldNumber;
const int cudnnGetConvolutionForwardAlgorithm_v7Query::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cudnnGetConvolutionForwardAlgorithm_v7Query::cudnnGetConvolutionForwardAlgorithm_v7Query()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cudnnGetConvolutionForwardAlgorithm_v7Query.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cudnnGetConvolutionForwardAlgorithm_v7Query)
}
cudnnGetConvolutionForwardAlgorithm_v7Query::cudnnGetConvolutionForwardAlgorithm_v7Query(const cudnnGetConvolutionForwardAlgorithm_v7Query& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.handle().size() > 0) {
    handle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handle_);
  }
  x_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.x_desc().size() > 0) {
    x_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_desc_);
  }
  w_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.w_desc().size() > 0) {
    w_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.w_desc_);
  }
  conv_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.conv_desc().size() > 0) {
    conv_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.conv_desc_);
  }
  y_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.y_desc().size() > 0) {
    y_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_desc_);
  }
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:cudarpc.cudnnGetConvolutionForwardAlgorithm_v7Query)
}

void cudnnGetConvolutionForwardAlgorithm_v7Query::SharedCtor() {
  handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  x_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  w_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  conv_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  count_ = 0;
}

cudnnGetConvolutionForwardAlgorithm_v7Query::~cudnnGetConvolutionForwardAlgorithm_v7Query() {
  // @@protoc_insertion_point(destructor:cudarpc.cudnnGetConvolutionForwardAlgorithm_v7Query)
  SharedDtor();
}

void cudnnGetConvolutionForwardAlgorithm_v7Query::SharedDtor() {
  handle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  x_desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  w_desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  conv_desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cudnnGetConvolutionForwardAlgorithm_v7Query::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cudnnGetConvolutionForwardAlgorithm_v7Query::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cudnnGetConvolutionForwardAlgorithm_v7Query& cudnnGetConvolutionForwardAlgorithm_v7Query::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cudnnGetConvolutionForwardAlgorithm_v7Query.base);
  return *internal_default_instance();
}


void cudnnGetConvolutionForwardAlgorithm_v7Query::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cudnnGetConvolutionForwardAlgorithm_v7Query)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  handle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  x_desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  w_desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  conv_desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  count_ = 0;
  _internal_metadata_.Clear();
}

bool cudnnGetConvolutionForwardAlgorithm_v7Query::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cudnnGetConvolutionForwardAlgorithm_v7Query)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_handle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes x_desc = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_x_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes w_desc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_w_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes conv_desc = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_conv_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes y_desc = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_y_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 count = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cudnnGetConvolutionForwardAlgorithm_v7Query)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cudnnGetConvolutionForwardAlgorithm_v7Query)
  return false;
#undef DO_
}

void cudnnGetConvolutionForwardAlgorithm_v7Query::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cudnnGetConvolutionForwardAlgorithm_v7Query)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes handle = 1;
  if (this->handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->handle(), output);
  }

  // bytes x_desc = 2;
  if (this->x_desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->x_desc(), output);
  }

  // bytes w_desc = 3;
  if (this->w_desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->w_desc(), output);
  }

  // bytes conv_desc = 4;
  if (this->conv_desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->conv_desc(), output);
  }

  // bytes y_desc = 5;
  if (this->y_desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->y_desc(), output);
  }

  // int32 count = 6;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cudnnGetConvolutionForwardAlgorithm_v7Query)
}

::google::protobuf::uint8* cudnnGetConvolutionForwardAlgorithm_v7Query::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cudnnGetConvolutionForwardAlgorithm_v7Query)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes handle = 1;
  if (this->handle().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->handle(), target);
  }

  // bytes x_desc = 2;
  if (this->x_desc().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->x_desc(), target);
  }

  // bytes w_desc = 3;
  if (this->w_desc().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->w_desc(), target);
  }

  // bytes conv_desc = 4;
  if (this->conv_desc().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->conv_desc(), target);
  }

  // bytes y_desc = 5;
  if (this->y_desc().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->y_desc(), target);
  }

  // int32 count = 6;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cudnnGetConvolutionForwardAlgorithm_v7Query)
  return target;
}

size_t cudnnGetConvolutionForwardAlgorithm_v7Query::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cudnnGetConvolutionForwardAlgorithm_v7Query)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes handle = 1;
  if (this->handle().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->handle());
  }

  // bytes x_desc = 2;
  if (this->x_desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->x_desc());
  }

  // bytes w_desc = 3;
  if (this->w_desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->w_desc());
  }

  // bytes conv_desc = 4;
  if (this->conv_desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->conv_desc());
  }

  // bytes y_desc = 5;
  if (this->y_desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->y_desc());
  }

  // int32 count = 6;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cudnnGetConvolutionForwardAlgorithm_v7Query::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cudnnGetConvolutionForwardAlgorithm_v7Query)
  GOOGLE_DCHECK_NE(&from, this);
  const cudnnGetConvolutionForwardAlgorithm_v7Query* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cudnnGetConvolutionForwardAlgorithm_v7Query>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cudnnGetConvolutionForwardAlgorithm_v7Query)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cudnnGetConvolutionForwardAlgorithm_v7Query)
    MergeFrom(*source);
  }
}

void cudnnGetConvolutionForwardAlgorithm_v7Query::MergeFrom(const cudnnGetConvolutionForwardAlgorithm_v7Query& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cudnnGetConvolutionForwardAlgorithm_v7Query)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.handle().size() > 0) {

    handle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handle_);
  }
  if (from.x_desc().size() > 0) {

    x_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_desc_);
  }
  if (from.w_desc().size() > 0) {

    w_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.w_desc_);
  }
  if (from.conv_desc().size() > 0) {

    conv_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.conv_desc_);
  }
  if (from.y_desc().size() > 0) {

    y_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_desc_);
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void cudnnGetConvolutionForwardAlgorithm_v7Query::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cudnnGetConvolutionForwardAlgorithm_v7Query)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cudnnGetConvolutionForwardAlgorithm_v7Query::CopyFrom(const cudnnGetConvolutionForwardAlgorithm_v7Query& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cudnnGetConvolutionForwardAlgorithm_v7Query)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cudnnGetConvolutionForwardAlgorithm_v7Query::IsInitialized() const {
  return true;
}

void cudnnGetConvolutionForwardAlgorithm_v7Query::Swap(cudnnGetConvolutionForwardAlgorithm_v7Query* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cudnnGetConvolutionForwardAlgorithm_v7Query::InternalSwap(cudnnGetConvolutionForwardAlgorithm_v7Query* other) {
  using std::swap;
  handle_.Swap(&other->handle_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  x_desc_.Swap(&other->x_desc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  w_desc_.Swap(&other->w_desc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  conv_desc_.Swap(&other->conv_desc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  y_desc_.Swap(&other->y_desc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cudnnGetConvolutionForwardAlgorithm_v7Query::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cudnnGetConvolutionForwardAlgorithm_v7Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cudnnGetConvolutionForwardAlgorithm_v7Response::kErrorFieldNumber;
const int cudnnGetConvolutionForwardAlgorithm_v7Response::kCountFieldNumber;
const int cudnnGetConvolutionForwardAlgorithm_v7Response::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cudnnGetConvolutionForwardAlgorithm_v7Response::cudnnGetConvolutionForwardAlgorithm_v7Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cudnnGetConvolutionForwardAlgorithm_v7Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cudnnGetConvolutionForwardAlgorithm_v7Response)
}
cudnnGetConvolutionForwardAlgorithm_v7Response::cudnnGetConvolutionForwardAlgorithm_v7Response(const cudnnGetConvolutionForwardAlgorithm_v7Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  results_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.results().size() > 0) {
    results_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.results_);
  }
  ::memcpy(&error_, &from.error_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&error_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:cudarpc.cudnnGetConvolutionForwardAlgorithm_v7Response)
}

void cudnnGetConvolutionForwardAlgorithm_v7Response::SharedCtor() {
  results_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&error_)) + sizeof(count_));
}

cudnnGetConvolutionForwardAlgorithm_v7Response::~cudnnGetConvolutionForwardAlgorithm_v7Response() {
  // @@protoc_insertion_point(destructor:cudarpc.cudnnGetConvolutionForwardAlgorithm_v7Response)
  SharedDtor();
}

void cudnnGetConvolutionForwardAlgorithm_v7Response::SharedDtor() {
  results_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cudnnGetConvolutionForwardAlgorithm_v7Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cudnnGetConvolutionForwardAlgorithm_v7Response::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cudnnGetConvolutionForwardAlgorithm_v7Response& cudnnGetConvolutionForwardAlgorithm_v7Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cudnnGetConvolutionForwardAlgorithm_v7Response.base);
  return *internal_default_instance();
}


void cudnnGetConvolutionForwardAlgorithm_v7Response::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cudnnGetConvolutionForwardAlgorithm_v7Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&error_)) + sizeof(count_));
  _internal_metadata_.Clear();
}

bool cudnnGetConvolutionForwardAlgorithm_v7Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cudnnGetConvolutionForwardAlgorithm_v7Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes results = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cudnnGetConvolutionForwardAlgorithm_v7Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cudnnGetConvolutionForwardAlgorithm_v7Response)
  return false;
#undef DO_
}

void cudnnGetConvolutionForwardAlgorithm_v7Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cudnnGetConvolutionForwardAlgorithm_v7Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // int32 count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  // bytes results = 3;
  if (this->results().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->results(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cudnnGetConvolutionForwardAlgorithm_v7Response)
}

::google::protobuf::uint8* cudnnGetConvolutionForwardAlgorithm_v7Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cudnnGetConvolutionForwardAlgorithm_v7Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // int32 count = 2;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  // bytes results = 3;
  if (this->results().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->results(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cudnnGetConvolutionForwardAlgorithm_v7Response)
  return target;
}

size_t cudnnGetConvolutionForwardAlgorithm_v7Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cudnnGetConvolutionForwardAlgorithm_v7Response)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes results = 3;
  if (this->results().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->results());
  }

  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  // int32 count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cudnnGetConvolutionForwardAlgorithm_v7Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cudnnGetConvolutionForwardAlgorithm_v7Response)
  GOOGLE_DCHECK_NE(&from, this);
  const cudnnGetConvolutionForwardAlgorithm_v7Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cudnnGetConvolutionForwardAlgorithm_v7Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cudnnGetConvolutionForwardAlgorithm_v7Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cudnnGetConvolutionForwardAlgorithm_v7Response)
    MergeFrom(*source);
  }
}

void cudnnGetConvolutionForwardAlgorithm_v7Response::MergeFrom(const cudnnGetConvolutionForwardAlgorithm_v7Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cudnnGetConvolutionForwardAlgorithm_v7Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.results().size() > 0) {

    results_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.results_);
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void cudnnGetConvolutionForwardAlgorithm_v7Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cudnnGetConvolutionForwardAlgorithm_v7Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cudnnGetConvolutionForwardAlgorithm_v7Response::CopyFrom(const cudnnGetConvolutionForwardAlgorithm_v7Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cudnnGetConvolutionForwardAlgorithm_v7Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cudnnGetConvolutionForwardAlgorithm_v7Response::IsInitialized() const {
  return true;
}

void cudnnGetConvolutionForwardAlgorithm_v7Response::Swap(cudnnGetConvolutionForwardAlgorithm_v7Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cudnnGetConvolutionForwardAlgorithm_v7Response::InternalSwap(cudnnGetConvolutionForwardAlgorithm_v7Response* other) {
  using std::swap;
  results_.Swap(&other->results_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_, other->error_);
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cudnnGetConvolutionForwardAlgorithm_v7Response::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cudnnConvolutionForwardQuery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cudnnConvolutionForwardQuery::kHandleFieldNumber;
const int cudnnConvolutionForwardQuery::kAlphaFieldNumber;
const int cudnnConvolutionForwardQuery::kXDescFieldNumber;
const int cudnnConvolutionForwardQuery::kXFieldNumber;
const int cudnnConvolutionForwardQuery::kWDescFieldNumber;
const int cudnnConvolutionForwardQuery::kWFieldNumber;
const int cudnnConvolutionForwardQuery::kConvDescFieldNumber;
const int cudnnConvolutionForwardQuery::kAlgoFieldNumber;
const int cudnnConvolutionForwardQuery::kWorkspaceFieldNumber;
const int cudnnConvolutionForwardQuery::kWorkspaceSizeFieldNumber;
const int cudnnConvolutionForwardQuery::kBetaFieldNumber;
const int cudnnConvolutionForwardQuery::kYDescFieldNumber;
const int cudnnConvolutionForwardQuery::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cudnnConvolutionForwardQuery::cudnnConvolutionForwardQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cudnnConvolutionForwardQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cudnnConvolutionForwardQuery)
}
cudnnConvolutionForwardQuery::cudnnConvolutionForwardQuery(const cudnnConvolutionForwardQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.handle().size() > 0) {
    handle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handle_);
  }
  x_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.x_desc().size() > 0) {
    x_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_desc_);
  }
  w_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.w_desc().size() > 0) {
    w_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.w_desc_);
  }
  conv_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.conv_desc().size() > 0) {
    conv_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.conv_desc_);
  }
  y_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.y_desc().size() > 0) {
    y_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_desc_);
  }
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&beta_) -
    reinterpret_cast<char*>(&x_)) + sizeof(beta_));
  // @@protoc_insertion_point(copy_constructor:cudarpc.cudnnConvolutionForwardQuery)
}

void cudnnConvolutionForwardQuery::SharedCtor() {
  handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  x_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  w_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  conv_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&beta_) -
      reinterpret_cast<char*>(&x_)) + sizeof(beta_));
}

cudnnConvolutionForwardQuery::~cudnnConvolutionForwardQuery() {
  // @@protoc_insertion_point(destructor:cudarpc.cudnnConvolutionForwardQuery)
  SharedDtor();
}

void cudnnConvolutionForwardQuery::SharedDtor() {
  handle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  x_desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  w_desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  conv_desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cudnnConvolutionForwardQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cudnnConvolutionForwardQuery::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cudnnConvolutionForwardQuery& cudnnConvolutionForwardQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cudnnConvolutionForwardQuery.base);
  return *internal_default_instance();
}


void cudnnConvolutionForwardQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cudnnConvolutionForwardQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  handle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  x_desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  w_desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  conv_desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&beta_) -
      reinterpret_cast<char*>(&x_)) + sizeof(beta_));
  _internal_metadata_.Clear();
}

bool cudnnConvolutionForwardQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cudnnConvolutionForwardQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_handle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float alpha = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &alpha_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes x_desc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_x_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 x = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes w_Desc = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_w_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 w = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &w_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes conv_desc = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_conv_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 algo = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &algo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 workspace = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &workspace_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 workspace_size = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &workspace_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float beta = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &beta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes y_desc = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_y_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 y = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cudnnConvolutionForwardQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cudnnConvolutionForwardQuery)
  return false;
#undef DO_
}

void cudnnConvolutionForwardQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cudnnConvolutionForwardQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes handle = 1;
  if (this->handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->handle(), output);
  }

  // float alpha = 2;
  if (this->alpha() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->alpha(), output);
  }

  // bytes x_desc = 3;
  if (this->x_desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->x_desc(), output);
  }

  // uint64 x = 4;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->x(), output);
  }

  // bytes w_Desc = 5;
  if (this->w_desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->w_desc(), output);
  }

  // uint64 w = 6;
  if (this->w() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->w(), output);
  }

  // bytes conv_desc = 7;
  if (this->conv_desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->conv_desc(), output);
  }

  // int32 algo = 8;
  if (this->algo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->algo(), output);
  }

  // uint64 workspace = 9;
  if (this->workspace() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->workspace(), output);
  }

  // uint64 workspace_size = 10;
  if (this->workspace_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->workspace_size(), output);
  }

  // float beta = 11;
  if (this->beta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->beta(), output);
  }

  // bytes y_desc = 12;
  if (this->y_desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->y_desc(), output);
  }

  // uint64 y = 13;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(13, this->y(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cudnnConvolutionForwardQuery)
}

::google::protobuf::uint8* cudnnConvolutionForwardQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cudnnConvolutionForwardQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes handle = 1;
  if (this->handle().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->handle(), target);
  }

  // float alpha = 2;
  if (this->alpha() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->alpha(), target);
  }

  // bytes x_desc = 3;
  if (this->x_desc().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->x_desc(), target);
  }

  // uint64 x = 4;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->x(), target);
  }

  // bytes w_Desc = 5;
  if (this->w_desc().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->w_desc(), target);
  }

  // uint64 w = 6;
  if (this->w() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->w(), target);
  }

  // bytes conv_desc = 7;
  if (this->conv_desc().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->conv_desc(), target);
  }

  // int32 algo = 8;
  if (this->algo() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->algo(), target);
  }

  // uint64 workspace = 9;
  if (this->workspace() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->workspace(), target);
  }

  // uint64 workspace_size = 10;
  if (this->workspace_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->workspace_size(), target);
  }

  // float beta = 11;
  if (this->beta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->beta(), target);
  }

  // bytes y_desc = 12;
  if (this->y_desc().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->y_desc(), target);
  }

  // uint64 y = 13;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(13, this->y(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cudnnConvolutionForwardQuery)
  return target;
}

size_t cudnnConvolutionForwardQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cudnnConvolutionForwardQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes handle = 1;
  if (this->handle().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->handle());
  }

  // bytes x_desc = 3;
  if (this->x_desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->x_desc());
  }

  // bytes w_Desc = 5;
  if (this->w_desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->w_desc());
  }

  // bytes conv_desc = 7;
  if (this->conv_desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->conv_desc());
  }

  // bytes y_desc = 12;
  if (this->y_desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->y_desc());
  }

  // uint64 x = 4;
  if (this->x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->x());
  }

  // float alpha = 2;
  if (this->alpha() != 0) {
    total_size += 1 + 4;
  }

  // int32 algo = 8;
  if (this->algo() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->algo());
  }

  // uint64 w = 6;
  if (this->w() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->w());
  }

  // uint64 workspace = 9;
  if (this->workspace() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->workspace());
  }

  // uint64 workspace_size = 10;
  if (this->workspace_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->workspace_size());
  }

  // uint64 y = 13;
  if (this->y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->y());
  }

  // float beta = 11;
  if (this->beta() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cudnnConvolutionForwardQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cudnnConvolutionForwardQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const cudnnConvolutionForwardQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cudnnConvolutionForwardQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cudnnConvolutionForwardQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cudnnConvolutionForwardQuery)
    MergeFrom(*source);
  }
}

void cudnnConvolutionForwardQuery::MergeFrom(const cudnnConvolutionForwardQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cudnnConvolutionForwardQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.handle().size() > 0) {

    handle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handle_);
  }
  if (from.x_desc().size() > 0) {

    x_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_desc_);
  }
  if (from.w_desc().size() > 0) {

    w_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.w_desc_);
  }
  if (from.conv_desc().size() > 0) {

    conv_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.conv_desc_);
  }
  if (from.y_desc().size() > 0) {

    y_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_desc_);
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.alpha() != 0) {
    set_alpha(from.alpha());
  }
  if (from.algo() != 0) {
    set_algo(from.algo());
  }
  if (from.w() != 0) {
    set_w(from.w());
  }
  if (from.workspace() != 0) {
    set_workspace(from.workspace());
  }
  if (from.workspace_size() != 0) {
    set_workspace_size(from.workspace_size());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.beta() != 0) {
    set_beta(from.beta());
  }
}

void cudnnConvolutionForwardQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cudnnConvolutionForwardQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cudnnConvolutionForwardQuery::CopyFrom(const cudnnConvolutionForwardQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cudnnConvolutionForwardQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cudnnConvolutionForwardQuery::IsInitialized() const {
  return true;
}

void cudnnConvolutionForwardQuery::Swap(cudnnConvolutionForwardQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cudnnConvolutionForwardQuery::InternalSwap(cudnnConvolutionForwardQuery* other) {
  using std::swap;
  handle_.Swap(&other->handle_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  x_desc_.Swap(&other->x_desc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  w_desc_.Swap(&other->w_desc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  conv_desc_.Swap(&other->conv_desc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  y_desc_.Swap(&other->y_desc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(x_, other->x_);
  swap(alpha_, other->alpha_);
  swap(algo_, other->algo_);
  swap(w_, other->w_);
  swap(workspace_, other->workspace_);
  swap(workspace_size_, other->workspace_size_);
  swap(y_, other->y_);
  swap(beta_, other->beta_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cudnnConvolutionForwardQuery::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cudnnBatchNormalizationForwardInferenceQuery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cudnnBatchNormalizationForwardInferenceQuery::kHandleFieldNumber;
const int cudnnBatchNormalizationForwardInferenceQuery::kModeFieldNumber;
const int cudnnBatchNormalizationForwardInferenceQuery::kAlphaFieldNumber;
const int cudnnBatchNormalizationForwardInferenceQuery::kBetaFieldNumber;
const int cudnnBatchNormalizationForwardInferenceQuery::kXDescFieldNumber;
const int cudnnBatchNormalizationForwardInferenceQuery::kXFieldNumber;
const int cudnnBatchNormalizationForwardInferenceQuery::kYDescFieldNumber;
const int cudnnBatchNormalizationForwardInferenceQuery::kYFieldNumber;
const int cudnnBatchNormalizationForwardInferenceQuery::kBnDescFieldNumber;
const int cudnnBatchNormalizationForwardInferenceQuery::kBnScaleFieldNumber;
const int cudnnBatchNormalizationForwardInferenceQuery::kBnBiasFieldNumber;
const int cudnnBatchNormalizationForwardInferenceQuery::kEsMeanFieldNumber;
const int cudnnBatchNormalizationForwardInferenceQuery::kEsVarFieldNumber;
const int cudnnBatchNormalizationForwardInferenceQuery::kEpsilonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cudnnBatchNormalizationForwardInferenceQuery::cudnnBatchNormalizationForwardInferenceQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cudnnBatchNormalizationForwardInferenceQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cudnnBatchNormalizationForwardInferenceQuery)
}
cudnnBatchNormalizationForwardInferenceQuery::cudnnBatchNormalizationForwardInferenceQuery(const cudnnBatchNormalizationForwardInferenceQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.handle().size() > 0) {
    handle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handle_);
  }
  x_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.x_desc().size() > 0) {
    x_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_desc_);
  }
  y_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.y_desc().size() > 0) {
    y_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_desc_);
  }
  bn_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bn_desc().size() > 0) {
    bn_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bn_desc_);
  }
  ::memcpy(&mode_, &from.mode_,
    static_cast<size_t>(reinterpret_cast<char*>(&beta_) -
    reinterpret_cast<char*>(&mode_)) + sizeof(beta_));
  // @@protoc_insertion_point(copy_constructor:cudarpc.cudnnBatchNormalizationForwardInferenceQuery)
}

void cudnnBatchNormalizationForwardInferenceQuery::SharedCtor() {
  handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  x_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bn_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&beta_) -
      reinterpret_cast<char*>(&mode_)) + sizeof(beta_));
}

cudnnBatchNormalizationForwardInferenceQuery::~cudnnBatchNormalizationForwardInferenceQuery() {
  // @@protoc_insertion_point(destructor:cudarpc.cudnnBatchNormalizationForwardInferenceQuery)
  SharedDtor();
}

void cudnnBatchNormalizationForwardInferenceQuery::SharedDtor() {
  handle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  x_desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bn_desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cudnnBatchNormalizationForwardInferenceQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cudnnBatchNormalizationForwardInferenceQuery::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cudnnBatchNormalizationForwardInferenceQuery& cudnnBatchNormalizationForwardInferenceQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cudnnBatchNormalizationForwardInferenceQuery.base);
  return *internal_default_instance();
}


void cudnnBatchNormalizationForwardInferenceQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cudnnBatchNormalizationForwardInferenceQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  handle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  x_desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bn_desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&beta_) -
      reinterpret_cast<char*>(&mode_)) + sizeof(beta_));
  _internal_metadata_.Clear();
}

bool cudnnBatchNormalizationForwardInferenceQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cudnnBatchNormalizationForwardInferenceQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes handle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_handle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float alpha = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &alpha_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float beta = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &beta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes x_desc = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_x_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 x = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes y_desc = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_y_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 y = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes bn_Desc = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bn_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 bn_scale = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bn_scale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 bn_bias = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bn_bias_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 es_mean = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &es_mean_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 es_var = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &es_var_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double epsilon = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(113u /* 113 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &epsilon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cudnnBatchNormalizationForwardInferenceQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cudnnBatchNormalizationForwardInferenceQuery)
  return false;
#undef DO_
}

void cudnnBatchNormalizationForwardInferenceQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cudnnBatchNormalizationForwardInferenceQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes handle = 1;
  if (this->handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->handle(), output);
  }

  // int32 mode = 2;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mode(), output);
  }

  // float alpha = 3;
  if (this->alpha() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->alpha(), output);
  }

  // float beta = 4;
  if (this->beta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->beta(), output);
  }

  // bytes x_desc = 5;
  if (this->x_desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->x_desc(), output);
  }

  // uint64 x = 6;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->x(), output);
  }

  // bytes y_desc = 7;
  if (this->y_desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->y_desc(), output);
  }

  // uint64 y = 8;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->y(), output);
  }

  // bytes bn_Desc = 9;
  if (this->bn_desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->bn_desc(), output);
  }

  // uint64 bn_scale = 10;
  if (this->bn_scale() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->bn_scale(), output);
  }

  // uint64 bn_bias = 11;
  if (this->bn_bias() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->bn_bias(), output);
  }

  // uint64 es_mean = 12;
  if (this->es_mean() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(12, this->es_mean(), output);
  }

  // uint64 es_var = 13;
  if (this->es_var() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(13, this->es_var(), output);
  }

  // double epsilon = 14;
  if (this->epsilon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->epsilon(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cudnnBatchNormalizationForwardInferenceQuery)
}

::google::protobuf::uint8* cudnnBatchNormalizationForwardInferenceQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cudnnBatchNormalizationForwardInferenceQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes handle = 1;
  if (this->handle().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->handle(), target);
  }

  // int32 mode = 2;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mode(), target);
  }

  // float alpha = 3;
  if (this->alpha() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->alpha(), target);
  }

  // float beta = 4;
  if (this->beta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->beta(), target);
  }

  // bytes x_desc = 5;
  if (this->x_desc().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->x_desc(), target);
  }

  // uint64 x = 6;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->x(), target);
  }

  // bytes y_desc = 7;
  if (this->y_desc().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->y_desc(), target);
  }

  // uint64 y = 8;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->y(), target);
  }

  // bytes bn_Desc = 9;
  if (this->bn_desc().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->bn_desc(), target);
  }

  // uint64 bn_scale = 10;
  if (this->bn_scale() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->bn_scale(), target);
  }

  // uint64 bn_bias = 11;
  if (this->bn_bias() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->bn_bias(), target);
  }

  // uint64 es_mean = 12;
  if (this->es_mean() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(12, this->es_mean(), target);
  }

  // uint64 es_var = 13;
  if (this->es_var() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(13, this->es_var(), target);
  }

  // double epsilon = 14;
  if (this->epsilon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->epsilon(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cudnnBatchNormalizationForwardInferenceQuery)
  return target;
}

size_t cudnnBatchNormalizationForwardInferenceQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cudnnBatchNormalizationForwardInferenceQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes handle = 1;
  if (this->handle().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->handle());
  }

  // bytes x_desc = 5;
  if (this->x_desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->x_desc());
  }

  // bytes y_desc = 7;
  if (this->y_desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->y_desc());
  }

  // bytes bn_Desc = 9;
  if (this->bn_desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->bn_desc());
  }

  // int32 mode = 2;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mode());
  }

  // float alpha = 3;
  if (this->alpha() != 0) {
    total_size += 1 + 4;
  }

  // uint64 x = 6;
  if (this->x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->x());
  }

  // uint64 y = 8;
  if (this->y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->y());
  }

  // uint64 bn_scale = 10;
  if (this->bn_scale() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bn_scale());
  }

  // uint64 bn_bias = 11;
  if (this->bn_bias() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bn_bias());
  }

  // uint64 es_mean = 12;
  if (this->es_mean() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->es_mean());
  }

  // uint64 es_var = 13;
  if (this->es_var() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->es_var());
  }

  // double epsilon = 14;
  if (this->epsilon() != 0) {
    total_size += 1 + 8;
  }

  // float beta = 4;
  if (this->beta() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cudnnBatchNormalizationForwardInferenceQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cudnnBatchNormalizationForwardInferenceQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const cudnnBatchNormalizationForwardInferenceQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cudnnBatchNormalizationForwardInferenceQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cudnnBatchNormalizationForwardInferenceQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cudnnBatchNormalizationForwardInferenceQuery)
    MergeFrom(*source);
  }
}

void cudnnBatchNormalizationForwardInferenceQuery::MergeFrom(const cudnnBatchNormalizationForwardInferenceQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cudnnBatchNormalizationForwardInferenceQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.handle().size() > 0) {

    handle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handle_);
  }
  if (from.x_desc().size() > 0) {

    x_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_desc_);
  }
  if (from.y_desc().size() > 0) {

    y_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_desc_);
  }
  if (from.bn_desc().size() > 0) {

    bn_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bn_desc_);
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
  if (from.alpha() != 0) {
    set_alpha(from.alpha());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.bn_scale() != 0) {
    set_bn_scale(from.bn_scale());
  }
  if (from.bn_bias() != 0) {
    set_bn_bias(from.bn_bias());
  }
  if (from.es_mean() != 0) {
    set_es_mean(from.es_mean());
  }
  if (from.es_var() != 0) {
    set_es_var(from.es_var());
  }
  if (from.epsilon() != 0) {
    set_epsilon(from.epsilon());
  }
  if (from.beta() != 0) {
    set_beta(from.beta());
  }
}

void cudnnBatchNormalizationForwardInferenceQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cudnnBatchNormalizationForwardInferenceQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cudnnBatchNormalizationForwardInferenceQuery::CopyFrom(const cudnnBatchNormalizationForwardInferenceQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cudnnBatchNormalizationForwardInferenceQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cudnnBatchNormalizationForwardInferenceQuery::IsInitialized() const {
  return true;
}

void cudnnBatchNormalizationForwardInferenceQuery::Swap(cudnnBatchNormalizationForwardInferenceQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cudnnBatchNormalizationForwardInferenceQuery::InternalSwap(cudnnBatchNormalizationForwardInferenceQuery* other) {
  using std::swap;
  handle_.Swap(&other->handle_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  x_desc_.Swap(&other->x_desc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  y_desc_.Swap(&other->y_desc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bn_desc_.Swap(&other->bn_desc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mode_, other->mode_);
  swap(alpha_, other->alpha_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(bn_scale_, other->bn_scale_);
  swap(bn_bias_, other->bn_bias_);
  swap(es_mean_, other->es_mean_);
  swap(es_var_, other->es_var_);
  swap(epsilon_, other->epsilon_);
  swap(beta_, other->beta_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cudnnBatchNormalizationForwardInferenceQuery::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cuInitQuery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cuInitQuery::kFlagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cuInitQuery::cuInitQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cuInitQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cuInitQuery)
}
cuInitQuery::cuInitQuery(const cuInitQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  flags_ = from.flags_;
  // @@protoc_insertion_point(copy_constructor:cudarpc.cuInitQuery)
}

void cuInitQuery::SharedCtor() {
  flags_ = 0u;
}

cuInitQuery::~cuInitQuery() {
  // @@protoc_insertion_point(destructor:cudarpc.cuInitQuery)
  SharedDtor();
}

void cuInitQuery::SharedDtor() {
}

void cuInitQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cuInitQuery::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cuInitQuery& cuInitQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cuInitQuery.base);
  return *internal_default_instance();
}


void cuInitQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cuInitQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  flags_ = 0u;
  _internal_metadata_.Clear();
}

bool cuInitQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cuInitQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 flags = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cuInitQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cuInitQuery)
  return false;
#undef DO_
}

void cuInitQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cuInitQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 flags = 1;
  if (this->flags() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->flags(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cuInitQuery)
}

::google::protobuf::uint8* cuInitQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cuInitQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 flags = 1;
  if (this->flags() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->flags(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cuInitQuery)
  return target;
}

size_t cuInitQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cuInitQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 flags = 1;
  if (this->flags() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flags());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cuInitQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cuInitQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const cuInitQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cuInitQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cuInitQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cuInitQuery)
    MergeFrom(*source);
  }
}

void cuInitQuery::MergeFrom(const cuInitQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cuInitQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.flags() != 0) {
    set_flags(from.flags());
  }
}

void cuInitQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cuInitQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cuInitQuery::CopyFrom(const cuInitQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cuInitQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cuInitQuery::IsInitialized() const {
  return true;
}

void cuInitQuery::Swap(cuInitQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cuInitQuery::InternalSwap(cuInitQuery* other) {
  using std::swap;
  swap(flags_, other->flags_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cuInitQuery::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cuDevicePrimaryCtxGetStateQuery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cuDevicePrimaryCtxGetStateQuery::kDeviceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cuDevicePrimaryCtxGetStateQuery::cuDevicePrimaryCtxGetStateQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cuDevicePrimaryCtxGetStateQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cuDevicePrimaryCtxGetStateQuery)
}
cuDevicePrimaryCtxGetStateQuery::cuDevicePrimaryCtxGetStateQuery(const cuDevicePrimaryCtxGetStateQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_ = from.device_;
  // @@protoc_insertion_point(copy_constructor:cudarpc.cuDevicePrimaryCtxGetStateQuery)
}

void cuDevicePrimaryCtxGetStateQuery::SharedCtor() {
  device_ = GOOGLE_LONGLONG(0);
}

cuDevicePrimaryCtxGetStateQuery::~cuDevicePrimaryCtxGetStateQuery() {
  // @@protoc_insertion_point(destructor:cudarpc.cuDevicePrimaryCtxGetStateQuery)
  SharedDtor();
}

void cuDevicePrimaryCtxGetStateQuery::SharedDtor() {
}

void cuDevicePrimaryCtxGetStateQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cuDevicePrimaryCtxGetStateQuery::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cuDevicePrimaryCtxGetStateQuery& cuDevicePrimaryCtxGetStateQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cuDevicePrimaryCtxGetStateQuery.base);
  return *internal_default_instance();
}


void cuDevicePrimaryCtxGetStateQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cuDevicePrimaryCtxGetStateQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  device_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool cuDevicePrimaryCtxGetStateQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cuDevicePrimaryCtxGetStateQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 device = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &device_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cuDevicePrimaryCtxGetStateQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cuDevicePrimaryCtxGetStateQuery)
  return false;
#undef DO_
}

void cuDevicePrimaryCtxGetStateQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cuDevicePrimaryCtxGetStateQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 device = 1;
  if (this->device() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->device(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cuDevicePrimaryCtxGetStateQuery)
}

::google::protobuf::uint8* cuDevicePrimaryCtxGetStateQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cuDevicePrimaryCtxGetStateQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 device = 1;
  if (this->device() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->device(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cuDevicePrimaryCtxGetStateQuery)
  return target;
}

size_t cuDevicePrimaryCtxGetStateQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cuDevicePrimaryCtxGetStateQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 device = 1;
  if (this->device() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->device());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cuDevicePrimaryCtxGetStateQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cuDevicePrimaryCtxGetStateQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const cuDevicePrimaryCtxGetStateQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cuDevicePrimaryCtxGetStateQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cuDevicePrimaryCtxGetStateQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cuDevicePrimaryCtxGetStateQuery)
    MergeFrom(*source);
  }
}

void cuDevicePrimaryCtxGetStateQuery::MergeFrom(const cuDevicePrimaryCtxGetStateQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cuDevicePrimaryCtxGetStateQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.device() != 0) {
    set_device(from.device());
  }
}

void cuDevicePrimaryCtxGetStateQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cuDevicePrimaryCtxGetStateQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cuDevicePrimaryCtxGetStateQuery::CopyFrom(const cuDevicePrimaryCtxGetStateQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cuDevicePrimaryCtxGetStateQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cuDevicePrimaryCtxGetStateQuery::IsInitialized() const {
  return true;
}

void cuDevicePrimaryCtxGetStateQuery::Swap(cuDevicePrimaryCtxGetStateQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cuDevicePrimaryCtxGetStateQuery::InternalSwap(cuDevicePrimaryCtxGetStateQuery* other) {
  using std::swap;
  swap(device_, other->device_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cuDevicePrimaryCtxGetStateQuery::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cuDevicePrimaryCtxGetStateResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cuDevicePrimaryCtxGetStateResponse::kErrorFieldNumber;
const int cuDevicePrimaryCtxGetStateResponse::kFlagsFieldNumber;
const int cuDevicePrimaryCtxGetStateResponse::kActiveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cuDevicePrimaryCtxGetStateResponse::cuDevicePrimaryCtxGetStateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cuDevicePrimaryCtxGetStateResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cuDevicePrimaryCtxGetStateResponse)
}
cuDevicePrimaryCtxGetStateResponse::cuDevicePrimaryCtxGetStateResponse(const cuDevicePrimaryCtxGetStateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&error_, &from.error_,
    static_cast<size_t>(reinterpret_cast<char*>(&active_) -
    reinterpret_cast<char*>(&error_)) + sizeof(active_));
  // @@protoc_insertion_point(copy_constructor:cudarpc.cuDevicePrimaryCtxGetStateResponse)
}

void cuDevicePrimaryCtxGetStateResponse::SharedCtor() {
  ::memset(&error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&active_) -
      reinterpret_cast<char*>(&error_)) + sizeof(active_));
}

cuDevicePrimaryCtxGetStateResponse::~cuDevicePrimaryCtxGetStateResponse() {
  // @@protoc_insertion_point(destructor:cudarpc.cuDevicePrimaryCtxGetStateResponse)
  SharedDtor();
}

void cuDevicePrimaryCtxGetStateResponse::SharedDtor() {
}

void cuDevicePrimaryCtxGetStateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cuDevicePrimaryCtxGetStateResponse::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cuDevicePrimaryCtxGetStateResponse& cuDevicePrimaryCtxGetStateResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cuDevicePrimaryCtxGetStateResponse.base);
  return *internal_default_instance();
}


void cuDevicePrimaryCtxGetStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cuDevicePrimaryCtxGetStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&active_) -
      reinterpret_cast<char*>(&error_)) + sizeof(active_));
  _internal_metadata_.Clear();
}

bool cuDevicePrimaryCtxGetStateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cuDevicePrimaryCtxGetStateResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 flags = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 active = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &active_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cuDevicePrimaryCtxGetStateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cuDevicePrimaryCtxGetStateResponse)
  return false;
#undef DO_
}

void cuDevicePrimaryCtxGetStateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cuDevicePrimaryCtxGetStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // uint32 flags = 2;
  if (this->flags() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->flags(), output);
  }

  // int32 active = 3;
  if (this->active() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->active(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cuDevicePrimaryCtxGetStateResponse)
}

::google::protobuf::uint8* cuDevicePrimaryCtxGetStateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cuDevicePrimaryCtxGetStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // uint32 flags = 2;
  if (this->flags() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->flags(), target);
  }

  // int32 active = 3;
  if (this->active() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->active(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cuDevicePrimaryCtxGetStateResponse)
  return target;
}

size_t cuDevicePrimaryCtxGetStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cuDevicePrimaryCtxGetStateResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  // uint32 flags = 2;
  if (this->flags() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flags());
  }

  // int32 active = 3;
  if (this->active() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->active());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cuDevicePrimaryCtxGetStateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cuDevicePrimaryCtxGetStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const cuDevicePrimaryCtxGetStateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cuDevicePrimaryCtxGetStateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cuDevicePrimaryCtxGetStateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cuDevicePrimaryCtxGetStateResponse)
    MergeFrom(*source);
  }
}

void cuDevicePrimaryCtxGetStateResponse::MergeFrom(const cuDevicePrimaryCtxGetStateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cuDevicePrimaryCtxGetStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error() != 0) {
    set_error(from.error());
  }
  if (from.flags() != 0) {
    set_flags(from.flags());
  }
  if (from.active() != 0) {
    set_active(from.active());
  }
}

void cuDevicePrimaryCtxGetStateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cuDevicePrimaryCtxGetStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cuDevicePrimaryCtxGetStateResponse::CopyFrom(const cuDevicePrimaryCtxGetStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cuDevicePrimaryCtxGetStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cuDevicePrimaryCtxGetStateResponse::IsInitialized() const {
  return true;
}

void cuDevicePrimaryCtxGetStateResponse::Swap(cuDevicePrimaryCtxGetStateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cuDevicePrimaryCtxGetStateResponse::InternalSwap(cuDevicePrimaryCtxGetStateResponse* other) {
  using std::swap;
  swap(error_, other->error_);
  swap(flags_, other->flags_);
  swap(active_, other->active_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cuDevicePrimaryCtxGetStateResponse::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cuGetProcAddressQuery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cuGetProcAddressQuery::kSymbolFieldNumber;
const int cuGetProcAddressQuery::kVersionFieldNumber;
const int cuGetProcAddressQuery::kFlagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cuGetProcAddressQuery::cuGetProcAddressQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cuGetProcAddressQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cuGetProcAddressQuery)
}
cuGetProcAddressQuery::cuGetProcAddressQuery(const cuGetProcAddressQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.symbol().size() > 0) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  ::memcpy(&flags_, &from.flags_,
    static_cast<size_t>(reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&flags_)) + sizeof(version_));
  // @@protoc_insertion_point(copy_constructor:cudarpc.cuGetProcAddressQuery)
}

void cuGetProcAddressQuery::SharedCtor() {
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&flags_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&flags_)) + sizeof(version_));
}

cuGetProcAddressQuery::~cuGetProcAddressQuery() {
  // @@protoc_insertion_point(destructor:cudarpc.cuGetProcAddressQuery)
  SharedDtor();
}

void cuGetProcAddressQuery::SharedDtor() {
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cuGetProcAddressQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cuGetProcAddressQuery::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cuGetProcAddressQuery& cuGetProcAddressQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cuGetProcAddressQuery.base);
  return *internal_default_instance();
}


void cuGetProcAddressQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cuGetProcAddressQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&flags_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&flags_)) + sizeof(version_));
  _internal_metadata_.Clear();
}

bool cuGetProcAddressQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cuGetProcAddressQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes symbol = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_symbol()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 flags = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cuGetProcAddressQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cuGetProcAddressQuery)
  return false;
#undef DO_
}

void cuGetProcAddressQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cuGetProcAddressQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes symbol = 1;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->symbol(), output);
  }

  // int32 version = 2;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->version(), output);
  }

  // uint64 flags = 3;
  if (this->flags() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->flags(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cuGetProcAddressQuery)
}

::google::protobuf::uint8* cuGetProcAddressQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cuGetProcAddressQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes symbol = 1;
  if (this->symbol().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->symbol(), target);
  }

  // int32 version = 2;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->version(), target);
  }

  // uint64 flags = 3;
  if (this->flags() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->flags(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cuGetProcAddressQuery)
  return target;
}

size_t cuGetProcAddressQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cuGetProcAddressQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes symbol = 1;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->symbol());
  }

  // uint64 flags = 3;
  if (this->flags() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->flags());
  }

  // int32 version = 2;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cuGetProcAddressQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cuGetProcAddressQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const cuGetProcAddressQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cuGetProcAddressQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cuGetProcAddressQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cuGetProcAddressQuery)
    MergeFrom(*source);
  }
}

void cuGetProcAddressQuery::MergeFrom(const cuGetProcAddressQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cuGetProcAddressQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.flags() != 0) {
    set_flags(from.flags());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
}

void cuGetProcAddressQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cuGetProcAddressQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cuGetProcAddressQuery::CopyFrom(const cuGetProcAddressQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cuGetProcAddressQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cuGetProcAddressQuery::IsInitialized() const {
  return true;
}

void cuGetProcAddressQuery::Swap(cuGetProcAddressQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cuGetProcAddressQuery::InternalSwap(cuGetProcAddressQuery* other) {
  using std::swap;
  symbol_.Swap(&other->symbol_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(flags_, other->flags_);
  swap(version_, other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cuGetProcAddressQuery::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cuGetProcAddressResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cuGetProcAddressResponse::kErrorFieldNumber;
const int cuGetProcAddressResponse::kPfnFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cuGetProcAddressResponse::cuGetProcAddressResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cuGetProcAddressResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cuGetProcAddressResponse)
}
cuGetProcAddressResponse::cuGetProcAddressResponse(const cuGetProcAddressResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pfn_, &from.pfn_,
    static_cast<size_t>(reinterpret_cast<char*>(&error_) -
    reinterpret_cast<char*>(&pfn_)) + sizeof(error_));
  // @@protoc_insertion_point(copy_constructor:cudarpc.cuGetProcAddressResponse)
}

void cuGetProcAddressResponse::SharedCtor() {
  ::memset(&pfn_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&pfn_)) + sizeof(error_));
}

cuGetProcAddressResponse::~cuGetProcAddressResponse() {
  // @@protoc_insertion_point(destructor:cudarpc.cuGetProcAddressResponse)
  SharedDtor();
}

void cuGetProcAddressResponse::SharedDtor() {
}

void cuGetProcAddressResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cuGetProcAddressResponse::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cuGetProcAddressResponse& cuGetProcAddressResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cuGetProcAddressResponse.base);
  return *internal_default_instance();
}


void cuGetProcAddressResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cuGetProcAddressResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&pfn_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&pfn_)) + sizeof(error_));
  _internal_metadata_.Clear();
}

bool cuGetProcAddressResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cuGetProcAddressResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 pfn = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &pfn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cuGetProcAddressResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cuGetProcAddressResponse)
  return false;
#undef DO_
}

void cuGetProcAddressResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cuGetProcAddressResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // uint64 pfn = 2;
  if (this->pfn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->pfn(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cuGetProcAddressResponse)
}

::google::protobuf::uint8* cuGetProcAddressResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cuGetProcAddressResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // uint64 pfn = 2;
  if (this->pfn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->pfn(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cuGetProcAddressResponse)
  return target;
}

size_t cuGetProcAddressResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cuGetProcAddressResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 pfn = 2;
  if (this->pfn() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->pfn());
  }

  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cuGetProcAddressResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cuGetProcAddressResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const cuGetProcAddressResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cuGetProcAddressResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cuGetProcAddressResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cuGetProcAddressResponse)
    MergeFrom(*source);
  }
}

void cuGetProcAddressResponse::MergeFrom(const cuGetProcAddressResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cuGetProcAddressResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pfn() != 0) {
    set_pfn(from.pfn());
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void cuGetProcAddressResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cuGetProcAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cuGetProcAddressResponse::CopyFrom(const cuGetProcAddressResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cuGetProcAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cuGetProcAddressResponse::IsInitialized() const {
  return true;
}

void cuGetProcAddressResponse::Swap(cuGetProcAddressResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cuGetProcAddressResponse::InternalSwap(cuGetProcAddressResponse* other) {
  using std::swap;
  swap(pfn_, other->pfn_);
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cuGetProcAddressResponse::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void getVersionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int getVersionResponse::kErrorFieldNumber;
const int getVersionResponse::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

getVersionResponse::getVersionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_getVersionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.getVersionResponse)
}
getVersionResponse::getVersionResponse(const getVersionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&error_, &from.error_,
    static_cast<size_t>(reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&error_)) + sizeof(version_));
  // @@protoc_insertion_point(copy_constructor:cudarpc.getVersionResponse)
}

void getVersionResponse::SharedCtor() {
  ::memset(&error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&error_)) + sizeof(version_));
}

getVersionResponse::~getVersionResponse() {
  // @@protoc_insertion_point(destructor:cudarpc.getVersionResponse)
  SharedDtor();
}

void getVersionResponse::SharedDtor() {
}

void getVersionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* getVersionResponse::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const getVersionResponse& getVersionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_getVersionResponse.base);
  return *internal_default_instance();
}


void getVersionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.getVersionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&error_)) + sizeof(version_));
  _internal_metadata_.Clear();
}

bool getVersionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.getVersionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.getVersionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.getVersionResponse)
  return false;
#undef DO_
}

void getVersionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.getVersionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // int32 version = 2;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.getVersionResponse)
}

::google::protobuf::uint8* getVersionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.getVersionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // int32 version = 2;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.getVersionResponse)
  return target;
}

size_t getVersionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.getVersionResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  // int32 version = 2;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getVersionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.getVersionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const getVersionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const getVersionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.getVersionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.getVersionResponse)
    MergeFrom(*source);
  }
}

void getVersionResponse::MergeFrom(const getVersionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.getVersionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error() != 0) {
    set_error(from.error());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
}

void getVersionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.getVersionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getVersionResponse::CopyFrom(const getVersionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.getVersionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getVersionResponse::IsInitialized() const {
  return true;
}

void getVersionResponse::Swap(getVersionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void getVersionResponse::InternalSwap(getVersionResponse* other) {
  using std::swap;
  swap(error_, other->error_);
  swap(version_, other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata getVersionResponse::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cudaGetDeviceResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cudaGetDeviceResponse::kErrorFieldNumber;
const int cudaGetDeviceResponse::kDeviceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cudaGetDeviceResponse::cudaGetDeviceResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cudaGetDeviceResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cudaGetDeviceResponse)
}
cudaGetDeviceResponse::cudaGetDeviceResponse(const cudaGetDeviceResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&error_, &from.error_,
    static_cast<size_t>(reinterpret_cast<char*>(&device_) -
    reinterpret_cast<char*>(&error_)) + sizeof(device_));
  // @@protoc_insertion_point(copy_constructor:cudarpc.cudaGetDeviceResponse)
}

void cudaGetDeviceResponse::SharedCtor() {
  ::memset(&error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&device_) -
      reinterpret_cast<char*>(&error_)) + sizeof(device_));
}

cudaGetDeviceResponse::~cudaGetDeviceResponse() {
  // @@protoc_insertion_point(destructor:cudarpc.cudaGetDeviceResponse)
  SharedDtor();
}

void cudaGetDeviceResponse::SharedDtor() {
}

void cudaGetDeviceResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cudaGetDeviceResponse::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cudaGetDeviceResponse& cudaGetDeviceResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cudaGetDeviceResponse.base);
  return *internal_default_instance();
}


void cudaGetDeviceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cudaGetDeviceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&device_) -
      reinterpret_cast<char*>(&error_)) + sizeof(device_));
  _internal_metadata_.Clear();
}

bool cudaGetDeviceResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cudaGetDeviceResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 device = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &device_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cudaGetDeviceResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cudaGetDeviceResponse)
  return false;
#undef DO_
}

void cudaGetDeviceResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cudaGetDeviceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // int32 device = 2;
  if (this->device() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->device(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cudaGetDeviceResponse)
}

::google::protobuf::uint8* cudaGetDeviceResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cudaGetDeviceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // int32 device = 2;
  if (this->device() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->device(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cudaGetDeviceResponse)
  return target;
}

size_t cudaGetDeviceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cudaGetDeviceResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  // int32 device = 2;
  if (this->device() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->device());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cudaGetDeviceResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cudaGetDeviceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const cudaGetDeviceResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cudaGetDeviceResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cudaGetDeviceResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cudaGetDeviceResponse)
    MergeFrom(*source);
  }
}

void cudaGetDeviceResponse::MergeFrom(const cudaGetDeviceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cudaGetDeviceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error() != 0) {
    set_error(from.error());
  }
  if (from.device() != 0) {
    set_device(from.device());
  }
}

void cudaGetDeviceResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cudaGetDeviceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cudaGetDeviceResponse::CopyFrom(const cudaGetDeviceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cudaGetDeviceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cudaGetDeviceResponse::IsInitialized() const {
  return true;
}

void cudaGetDeviceResponse::Swap(cudaGetDeviceResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cudaGetDeviceResponse::InternalSwap(cudaGetDeviceResponse* other) {
  using std::swap;
  swap(error_, other->error_);
  swap(device_, other->device_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cudaGetDeviceResponse::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cudaGetDeviceCountResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cudaGetDeviceCountResponse::kErrorFieldNumber;
const int cudaGetDeviceCountResponse::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cudaGetDeviceCountResponse::cudaGetDeviceCountResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cudaGetDeviceCountResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cudaGetDeviceCountResponse)
}
cudaGetDeviceCountResponse::cudaGetDeviceCountResponse(const cudaGetDeviceCountResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&error_, &from.error_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&error_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:cudarpc.cudaGetDeviceCountResponse)
}

void cudaGetDeviceCountResponse::SharedCtor() {
  ::memset(&error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&error_)) + sizeof(count_));
}

cudaGetDeviceCountResponse::~cudaGetDeviceCountResponse() {
  // @@protoc_insertion_point(destructor:cudarpc.cudaGetDeviceCountResponse)
  SharedDtor();
}

void cudaGetDeviceCountResponse::SharedDtor() {
}

void cudaGetDeviceCountResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cudaGetDeviceCountResponse::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cudaGetDeviceCountResponse& cudaGetDeviceCountResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cudaGetDeviceCountResponse.base);
  return *internal_default_instance();
}


void cudaGetDeviceCountResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cudaGetDeviceCountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&error_)) + sizeof(count_));
  _internal_metadata_.Clear();
}

bool cudaGetDeviceCountResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cudaGetDeviceCountResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cudaGetDeviceCountResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cudaGetDeviceCountResponse)
  return false;
#undef DO_
}

void cudaGetDeviceCountResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cudaGetDeviceCountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // int32 count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cudaGetDeviceCountResponse)
}

::google::protobuf::uint8* cudaGetDeviceCountResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cudaGetDeviceCountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // int32 count = 2;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cudaGetDeviceCountResponse)
  return target;
}

size_t cudaGetDeviceCountResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cudaGetDeviceCountResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  // int32 count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cudaGetDeviceCountResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cudaGetDeviceCountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const cudaGetDeviceCountResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cudaGetDeviceCountResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cudaGetDeviceCountResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cudaGetDeviceCountResponse)
    MergeFrom(*source);
  }
}

void cudaGetDeviceCountResponse::MergeFrom(const cudaGetDeviceCountResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cudaGetDeviceCountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error() != 0) {
    set_error(from.error());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void cudaGetDeviceCountResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cudaGetDeviceCountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cudaGetDeviceCountResponse::CopyFrom(const cudaGetDeviceCountResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cudaGetDeviceCountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cudaGetDeviceCountResponse::IsInitialized() const {
  return true;
}

void cudaGetDeviceCountResponse::Swap(cudaGetDeviceCountResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cudaGetDeviceCountResponse::InternalSwap(cudaGetDeviceCountResponse* other) {
  using std::swap;
  swap(error_, other->error_);
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cudaGetDeviceCountResponse::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cudaGetDevicePropertiesQuery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cudaGetDevicePropertiesQuery::kDeviceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cudaGetDevicePropertiesQuery::cudaGetDevicePropertiesQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cudaGetDevicePropertiesQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cudaGetDevicePropertiesQuery)
}
cudaGetDevicePropertiesQuery::cudaGetDevicePropertiesQuery(const cudaGetDevicePropertiesQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_ = from.device_;
  // @@protoc_insertion_point(copy_constructor:cudarpc.cudaGetDevicePropertiesQuery)
}

void cudaGetDevicePropertiesQuery::SharedCtor() {
  device_ = 0;
}

cudaGetDevicePropertiesQuery::~cudaGetDevicePropertiesQuery() {
  // @@protoc_insertion_point(destructor:cudarpc.cudaGetDevicePropertiesQuery)
  SharedDtor();
}

void cudaGetDevicePropertiesQuery::SharedDtor() {
}

void cudaGetDevicePropertiesQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cudaGetDevicePropertiesQuery::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cudaGetDevicePropertiesQuery& cudaGetDevicePropertiesQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cudaGetDevicePropertiesQuery.base);
  return *internal_default_instance();
}


void cudaGetDevicePropertiesQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cudaGetDevicePropertiesQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  device_ = 0;
  _internal_metadata_.Clear();
}

bool cudaGetDevicePropertiesQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cudaGetDevicePropertiesQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 device = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &device_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cudaGetDevicePropertiesQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cudaGetDevicePropertiesQuery)
  return false;
#undef DO_
}

void cudaGetDevicePropertiesQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cudaGetDevicePropertiesQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 device = 1;
  if (this->device() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->device(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cudaGetDevicePropertiesQuery)
}

::google::protobuf::uint8* cudaGetDevicePropertiesQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cudaGetDevicePropertiesQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 device = 1;
  if (this->device() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->device(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cudaGetDevicePropertiesQuery)
  return target;
}

size_t cudaGetDevicePropertiesQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cudaGetDevicePropertiesQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 device = 1;
  if (this->device() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->device());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cudaGetDevicePropertiesQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cudaGetDevicePropertiesQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const cudaGetDevicePropertiesQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cudaGetDevicePropertiesQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cudaGetDevicePropertiesQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cudaGetDevicePropertiesQuery)
    MergeFrom(*source);
  }
}

void cudaGetDevicePropertiesQuery::MergeFrom(const cudaGetDevicePropertiesQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cudaGetDevicePropertiesQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.device() != 0) {
    set_device(from.device());
  }
}

void cudaGetDevicePropertiesQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cudaGetDevicePropertiesQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cudaGetDevicePropertiesQuery::CopyFrom(const cudaGetDevicePropertiesQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cudaGetDevicePropertiesQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cudaGetDevicePropertiesQuery::IsInitialized() const {
  return true;
}

void cudaGetDevicePropertiesQuery::Swap(cudaGetDevicePropertiesQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cudaGetDevicePropertiesQuery::InternalSwap(cudaGetDevicePropertiesQuery* other) {
  using std::swap;
  swap(device_, other->device_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cudaGetDevicePropertiesQuery::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cudaGetDevicePropertiesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cudaGetDevicePropertiesResponse::kErrorFieldNumber;
const int cudaGetDevicePropertiesResponse::kPropFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cudaGetDevicePropertiesResponse::cudaGetDevicePropertiesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cudaGetDevicePropertiesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cudaGetDevicePropertiesResponse)
}
cudaGetDevicePropertiesResponse::cudaGetDevicePropertiesResponse(const cudaGetDevicePropertiesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  prop_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.prop().size() > 0) {
    prop_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prop_);
  }
  error_ = from.error_;
  // @@protoc_insertion_point(copy_constructor:cudarpc.cudaGetDevicePropertiesResponse)
}

void cudaGetDevicePropertiesResponse::SharedCtor() {
  prop_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = 0;
}

cudaGetDevicePropertiesResponse::~cudaGetDevicePropertiesResponse() {
  // @@protoc_insertion_point(destructor:cudarpc.cudaGetDevicePropertiesResponse)
  SharedDtor();
}

void cudaGetDevicePropertiesResponse::SharedDtor() {
  prop_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cudaGetDevicePropertiesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cudaGetDevicePropertiesResponse::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cudaGetDevicePropertiesResponse& cudaGetDevicePropertiesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cudaGetDevicePropertiesResponse.base);
  return *internal_default_instance();
}


void cudaGetDevicePropertiesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cudaGetDevicePropertiesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  prop_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = 0;
  _internal_metadata_.Clear();
}

bool cudaGetDevicePropertiesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cudaGetDevicePropertiesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes prop = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_prop()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cudaGetDevicePropertiesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cudaGetDevicePropertiesResponse)
  return false;
#undef DO_
}

void cudaGetDevicePropertiesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cudaGetDevicePropertiesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // bytes prop = 2;
  if (this->prop().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->prop(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cudaGetDevicePropertiesResponse)
}

::google::protobuf::uint8* cudaGetDevicePropertiesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cudaGetDevicePropertiesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // bytes prop = 2;
  if (this->prop().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->prop(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cudaGetDevicePropertiesResponse)
  return target;
}

size_t cudaGetDevicePropertiesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cudaGetDevicePropertiesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes prop = 2;
  if (this->prop().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->prop());
  }

  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cudaGetDevicePropertiesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cudaGetDevicePropertiesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const cudaGetDevicePropertiesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cudaGetDevicePropertiesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cudaGetDevicePropertiesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cudaGetDevicePropertiesResponse)
    MergeFrom(*source);
  }
}

void cudaGetDevicePropertiesResponse::MergeFrom(const cudaGetDevicePropertiesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cudaGetDevicePropertiesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.prop().size() > 0) {

    prop_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prop_);
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void cudaGetDevicePropertiesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cudaGetDevicePropertiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cudaGetDevicePropertiesResponse::CopyFrom(const cudaGetDevicePropertiesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cudaGetDevicePropertiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cudaGetDevicePropertiesResponse::IsInitialized() const {
  return true;
}

void cudaGetDevicePropertiesResponse::Swap(cudaGetDevicePropertiesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cudaGetDevicePropertiesResponse::InternalSwap(cudaGetDevicePropertiesResponse* other) {
  using std::swap;
  prop_.Swap(&other->prop_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cudaGetDevicePropertiesResponse::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cudaDeviceGetAttributeQuery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cudaDeviceGetAttributeQuery::kAttrFieldNumber;
const int cudaDeviceGetAttributeQuery::kDeviceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cudaDeviceGetAttributeQuery::cudaDeviceGetAttributeQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cudaDeviceGetAttributeQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cudaDeviceGetAttributeQuery)
}
cudaDeviceGetAttributeQuery::cudaDeviceGetAttributeQuery(const cudaDeviceGetAttributeQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&attr_, &from.attr_,
    static_cast<size_t>(reinterpret_cast<char*>(&device_) -
    reinterpret_cast<char*>(&attr_)) + sizeof(device_));
  // @@protoc_insertion_point(copy_constructor:cudarpc.cudaDeviceGetAttributeQuery)
}

void cudaDeviceGetAttributeQuery::SharedCtor() {
  ::memset(&attr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&device_) -
      reinterpret_cast<char*>(&attr_)) + sizeof(device_));
}

cudaDeviceGetAttributeQuery::~cudaDeviceGetAttributeQuery() {
  // @@protoc_insertion_point(destructor:cudarpc.cudaDeviceGetAttributeQuery)
  SharedDtor();
}

void cudaDeviceGetAttributeQuery::SharedDtor() {
}

void cudaDeviceGetAttributeQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cudaDeviceGetAttributeQuery::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cudaDeviceGetAttributeQuery& cudaDeviceGetAttributeQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cudaDeviceGetAttributeQuery.base);
  return *internal_default_instance();
}


void cudaDeviceGetAttributeQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cudaDeviceGetAttributeQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&attr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&device_) -
      reinterpret_cast<char*>(&attr_)) + sizeof(device_));
  _internal_metadata_.Clear();
}

bool cudaDeviceGetAttributeQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cudaDeviceGetAttributeQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 attr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 device = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &device_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cudaDeviceGetAttributeQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cudaDeviceGetAttributeQuery)
  return false;
#undef DO_
}

void cudaDeviceGetAttributeQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cudaDeviceGetAttributeQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 attr = 1;
  if (this->attr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->attr(), output);
  }

  // int32 device = 2;
  if (this->device() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->device(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cudaDeviceGetAttributeQuery)
}

::google::protobuf::uint8* cudaDeviceGetAttributeQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cudaDeviceGetAttributeQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 attr = 1;
  if (this->attr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->attr(), target);
  }

  // int32 device = 2;
  if (this->device() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->device(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cudaDeviceGetAttributeQuery)
  return target;
}

size_t cudaDeviceGetAttributeQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cudaDeviceGetAttributeQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 attr = 1;
  if (this->attr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->attr());
  }

  // int32 device = 2;
  if (this->device() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->device());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cudaDeviceGetAttributeQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cudaDeviceGetAttributeQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const cudaDeviceGetAttributeQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cudaDeviceGetAttributeQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cudaDeviceGetAttributeQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cudaDeviceGetAttributeQuery)
    MergeFrom(*source);
  }
}

void cudaDeviceGetAttributeQuery::MergeFrom(const cudaDeviceGetAttributeQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cudaDeviceGetAttributeQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.attr() != 0) {
    set_attr(from.attr());
  }
  if (from.device() != 0) {
    set_device(from.device());
  }
}

void cudaDeviceGetAttributeQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cudaDeviceGetAttributeQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cudaDeviceGetAttributeQuery::CopyFrom(const cudaDeviceGetAttributeQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cudaDeviceGetAttributeQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cudaDeviceGetAttributeQuery::IsInitialized() const {
  return true;
}

void cudaDeviceGetAttributeQuery::Swap(cudaDeviceGetAttributeQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cudaDeviceGetAttributeQuery::InternalSwap(cudaDeviceGetAttributeQuery* other) {
  using std::swap;
  swap(attr_, other->attr_);
  swap(device_, other->device_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cudaDeviceGetAttributeQuery::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cudaDeviceGetAttributeResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cudaDeviceGetAttributeResponse::kErrorFieldNumber;
const int cudaDeviceGetAttributeResponse::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cudaDeviceGetAttributeResponse::cudaDeviceGetAttributeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cudaDeviceGetAttributeResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cudaDeviceGetAttributeResponse)
}
cudaDeviceGetAttributeResponse::cudaDeviceGetAttributeResponse(const cudaDeviceGetAttributeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&error_, &from.error_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&error_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:cudarpc.cudaDeviceGetAttributeResponse)
}

void cudaDeviceGetAttributeResponse::SharedCtor() {
  ::memset(&error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&error_)) + sizeof(value_));
}

cudaDeviceGetAttributeResponse::~cudaDeviceGetAttributeResponse() {
  // @@protoc_insertion_point(destructor:cudarpc.cudaDeviceGetAttributeResponse)
  SharedDtor();
}

void cudaDeviceGetAttributeResponse::SharedDtor() {
}

void cudaDeviceGetAttributeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cudaDeviceGetAttributeResponse::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cudaDeviceGetAttributeResponse& cudaDeviceGetAttributeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cudaDeviceGetAttributeResponse.base);
  return *internal_default_instance();
}


void cudaDeviceGetAttributeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cudaDeviceGetAttributeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&error_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

bool cudaDeviceGetAttributeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cudaDeviceGetAttributeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cudaDeviceGetAttributeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cudaDeviceGetAttributeResponse)
  return false;
#undef DO_
}

void cudaDeviceGetAttributeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cudaDeviceGetAttributeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // int32 value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cudaDeviceGetAttributeResponse)
}

::google::protobuf::uint8* cudaDeviceGetAttributeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cudaDeviceGetAttributeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // int32 value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cudaDeviceGetAttributeResponse)
  return target;
}

size_t cudaDeviceGetAttributeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cudaDeviceGetAttributeResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  // int32 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cudaDeviceGetAttributeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cudaDeviceGetAttributeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const cudaDeviceGetAttributeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cudaDeviceGetAttributeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cudaDeviceGetAttributeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cudaDeviceGetAttributeResponse)
    MergeFrom(*source);
  }
}

void cudaDeviceGetAttributeResponse::MergeFrom(const cudaDeviceGetAttributeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cudaDeviceGetAttributeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error() != 0) {
    set_error(from.error());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void cudaDeviceGetAttributeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cudaDeviceGetAttributeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cudaDeviceGetAttributeResponse::CopyFrom(const cudaDeviceGetAttributeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cudaDeviceGetAttributeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cudaDeviceGetAttributeResponse::IsInitialized() const {
  return true;
}

void cudaDeviceGetAttributeResponse::Swap(cudaDeviceGetAttributeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cudaDeviceGetAttributeResponse::InternalSwap(cudaDeviceGetAttributeResponse* other) {
  using std::swap;
  swap(error_, other->error_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cudaDeviceGetAttributeResponse::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cudaMallocQuery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cudaMallocQuery::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cudaMallocQuery::cudaMallocQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cudaMallocQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cudaMallocQuery)
}
cudaMallocQuery::cudaMallocQuery(const cudaMallocQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:cudarpc.cudaMallocQuery)
}

void cudaMallocQuery::SharedCtor() {
  size_ = GOOGLE_ULONGLONG(0);
}

cudaMallocQuery::~cudaMallocQuery() {
  // @@protoc_insertion_point(destructor:cudarpc.cudaMallocQuery)
  SharedDtor();
}

void cudaMallocQuery::SharedDtor() {
}

void cudaMallocQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cudaMallocQuery::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cudaMallocQuery& cudaMallocQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cudaMallocQuery.base);
  return *internal_default_instance();
}


void cudaMallocQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cudaMallocQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  size_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool cudaMallocQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cudaMallocQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 size = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cudaMallocQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cudaMallocQuery)
  return false;
#undef DO_
}

void cudaMallocQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cudaMallocQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 size = 1;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cudaMallocQuery)
}

::google::protobuf::uint8* cudaMallocQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cudaMallocQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 size = 1;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cudaMallocQuery)
  return target;
}

size_t cudaMallocQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cudaMallocQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 size = 1;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cudaMallocQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cudaMallocQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const cudaMallocQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cudaMallocQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cudaMallocQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cudaMallocQuery)
    MergeFrom(*source);
  }
}

void cudaMallocQuery::MergeFrom(const cudaMallocQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cudaMallocQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.size() != 0) {
    set_size(from.size());
  }
}

void cudaMallocQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cudaMallocQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cudaMallocQuery::CopyFrom(const cudaMallocQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cudaMallocQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cudaMallocQuery::IsInitialized() const {
  return true;
}

void cudaMallocQuery::Swap(cudaMallocQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cudaMallocQuery::InternalSwap(cudaMallocQuery* other) {
  using std::swap;
  swap(size_, other->size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cudaMallocQuery::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cudaMallocResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cudaMallocResponse::kErrorFieldNumber;
const int cudaMallocResponse::kPtrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cudaMallocResponse::cudaMallocResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cudaMallocResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cudaMallocResponse)
}
cudaMallocResponse::cudaMallocResponse(const cudaMallocResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ptr_, &from.ptr_,
    static_cast<size_t>(reinterpret_cast<char*>(&error_) -
    reinterpret_cast<char*>(&ptr_)) + sizeof(error_));
  // @@protoc_insertion_point(copy_constructor:cudarpc.cudaMallocResponse)
}

void cudaMallocResponse::SharedCtor() {
  ::memset(&ptr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&ptr_)) + sizeof(error_));
}

cudaMallocResponse::~cudaMallocResponse() {
  // @@protoc_insertion_point(destructor:cudarpc.cudaMallocResponse)
  SharedDtor();
}

void cudaMallocResponse::SharedDtor() {
}

void cudaMallocResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cudaMallocResponse::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cudaMallocResponse& cudaMallocResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cudaMallocResponse.base);
  return *internal_default_instance();
}


void cudaMallocResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cudaMallocResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ptr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&ptr_)) + sizeof(error_));
  _internal_metadata_.Clear();
}

bool cudaMallocResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cudaMallocResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ptr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ptr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cudaMallocResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cudaMallocResponse)
  return false;
#undef DO_
}

void cudaMallocResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cudaMallocResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // uint64 ptr = 2;
  if (this->ptr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->ptr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cudaMallocResponse)
}

::google::protobuf::uint8* cudaMallocResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cudaMallocResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // uint64 ptr = 2;
  if (this->ptr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->ptr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cudaMallocResponse)
  return target;
}

size_t cudaMallocResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cudaMallocResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 ptr = 2;
  if (this->ptr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ptr());
  }

  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cudaMallocResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cudaMallocResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const cudaMallocResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cudaMallocResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cudaMallocResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cudaMallocResponse)
    MergeFrom(*source);
  }
}

void cudaMallocResponse::MergeFrom(const cudaMallocResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cudaMallocResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ptr() != 0) {
    set_ptr(from.ptr());
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void cudaMallocResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cudaMallocResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cudaMallocResponse::CopyFrom(const cudaMallocResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cudaMallocResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cudaMallocResponse::IsInitialized() const {
  return true;
}

void cudaMallocResponse::Swap(cudaMallocResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cudaMallocResponse::InternalSwap(cudaMallocResponse* other) {
  using std::swap;
  swap(ptr_, other->ptr_);
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cudaMallocResponse::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cudaFreeQuery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cudaFreeQuery::kPtrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cudaFreeQuery::cudaFreeQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cudaFreeQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cudaFreeQuery)
}
cudaFreeQuery::cudaFreeQuery(const cudaFreeQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ptr_ = from.ptr_;
  // @@protoc_insertion_point(copy_constructor:cudarpc.cudaFreeQuery)
}

void cudaFreeQuery::SharedCtor() {
  ptr_ = GOOGLE_ULONGLONG(0);
}

cudaFreeQuery::~cudaFreeQuery() {
  // @@protoc_insertion_point(destructor:cudarpc.cudaFreeQuery)
  SharedDtor();
}

void cudaFreeQuery::SharedDtor() {
}

void cudaFreeQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cudaFreeQuery::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cudaFreeQuery& cudaFreeQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cudaFreeQuery.base);
  return *internal_default_instance();
}


void cudaFreeQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cudaFreeQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ptr_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool cudaFreeQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cudaFreeQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 ptr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ptr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cudaFreeQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cudaFreeQuery)
  return false;
#undef DO_
}

void cudaFreeQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cudaFreeQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ptr = 1;
  if (this->ptr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->ptr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cudaFreeQuery)
}

::google::protobuf::uint8* cudaFreeQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cudaFreeQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ptr = 1;
  if (this->ptr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->ptr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cudaFreeQuery)
  return target;
}

size_t cudaFreeQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cudaFreeQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 ptr = 1;
  if (this->ptr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ptr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cudaFreeQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cudaFreeQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const cudaFreeQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cudaFreeQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cudaFreeQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cudaFreeQuery)
    MergeFrom(*source);
  }
}

void cudaFreeQuery::MergeFrom(const cudaFreeQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cudaFreeQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ptr() != 0) {
    set_ptr(from.ptr());
  }
}

void cudaFreeQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cudaFreeQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cudaFreeQuery::CopyFrom(const cudaFreeQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cudaFreeQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cudaFreeQuery::IsInitialized() const {
  return true;
}

void cudaFreeQuery::Swap(cudaFreeQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cudaFreeQuery::InternalSwap(cudaFreeQuery* other) {
  using std::swap;
  swap(ptr_, other->ptr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cudaFreeQuery::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cudaMemcpyQuery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cudaMemcpyQuery::kKindFieldNumber;
const int cudaMemcpyQuery::kSrcFieldNumber;
const int cudaMemcpyQuery::kDstFieldNumber;
const int cudaMemcpyQuery::kCountFieldNumber;
const int cudaMemcpyQuery::kPayloadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cudaMemcpyQuery::cudaMemcpyQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cudaMemcpyQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cudaMemcpyQuery)
}
cudaMemcpyQuery::cudaMemcpyQuery(const cudaMemcpyQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.payload().size() > 0) {
    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  ::memcpy(&src_, &from.src_,
    static_cast<size_t>(reinterpret_cast<char*>(&kind_) -
    reinterpret_cast<char*>(&src_)) + sizeof(kind_));
  // @@protoc_insertion_point(copy_constructor:cudarpc.cudaMemcpyQuery)
}

void cudaMemcpyQuery::SharedCtor() {
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&src_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kind_) -
      reinterpret_cast<char*>(&src_)) + sizeof(kind_));
}

cudaMemcpyQuery::~cudaMemcpyQuery() {
  // @@protoc_insertion_point(destructor:cudarpc.cudaMemcpyQuery)
  SharedDtor();
}

void cudaMemcpyQuery::SharedDtor() {
  payload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cudaMemcpyQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cudaMemcpyQuery::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cudaMemcpyQuery& cudaMemcpyQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cudaMemcpyQuery.base);
  return *internal_default_instance();
}


void cudaMemcpyQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cudaMemcpyQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&src_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kind_) -
      reinterpret_cast<char*>(&src_)) + sizeof(kind_));
  _internal_metadata_.Clear();
}

bool cudaMemcpyQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cudaMemcpyQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 kind = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kind_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 src = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &src_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 dst = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dst_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes payload = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_payload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cudaMemcpyQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cudaMemcpyQuery)
  return false;
#undef DO_
}

void cudaMemcpyQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cudaMemcpyQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 kind = 1;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->kind(), output);
  }

  // uint64 src = 2;
  if (this->src() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->src(), output);
  }

  // uint64 dst = 3;
  if (this->dst() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->dst(), output);
  }

  // uint64 count = 4;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->count(), output);
  }

  // bytes payload = 5;
  if (this->payload().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->payload(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cudaMemcpyQuery)
}

::google::protobuf::uint8* cudaMemcpyQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cudaMemcpyQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 kind = 1;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->kind(), target);
  }

  // uint64 src = 2;
  if (this->src() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->src(), target);
  }

  // uint64 dst = 3;
  if (this->dst() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->dst(), target);
  }

  // uint64 count = 4;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->count(), target);
  }

  // bytes payload = 5;
  if (this->payload().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->payload(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cudaMemcpyQuery)
  return target;
}

size_t cudaMemcpyQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cudaMemcpyQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes payload = 5;
  if (this->payload().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->payload());
  }

  // uint64 src = 2;
  if (this->src() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->src());
  }

  // uint64 dst = 3;
  if (this->dst() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dst());
  }

  // uint64 count = 4;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->count());
  }

  // int32 kind = 1;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->kind());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cudaMemcpyQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cudaMemcpyQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const cudaMemcpyQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cudaMemcpyQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cudaMemcpyQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cudaMemcpyQuery)
    MergeFrom(*source);
  }
}

void cudaMemcpyQuery::MergeFrom(const cudaMemcpyQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cudaMemcpyQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.payload().size() > 0) {

    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  if (from.src() != 0) {
    set_src(from.src());
  }
  if (from.dst() != 0) {
    set_dst(from.dst());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.kind() != 0) {
    set_kind(from.kind());
  }
}

void cudaMemcpyQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cudaMemcpyQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cudaMemcpyQuery::CopyFrom(const cudaMemcpyQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cudaMemcpyQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cudaMemcpyQuery::IsInitialized() const {
  return true;
}

void cudaMemcpyQuery::Swap(cudaMemcpyQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cudaMemcpyQuery::InternalSwap(cudaMemcpyQuery* other) {
  using std::swap;
  payload_.Swap(&other->payload_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(src_, other->src_);
  swap(dst_, other->dst_);
  swap(count_, other->count_);
  swap(kind_, other->kind_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cudaMemcpyQuery::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cudaMemcpyResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cudaMemcpyResponse::kErrorFieldNumber;
const int cudaMemcpyResponse::kPayloadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cudaMemcpyResponse::cudaMemcpyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cudaMemcpyResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cudaMemcpyResponse)
}
cudaMemcpyResponse::cudaMemcpyResponse(const cudaMemcpyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.payload().size() > 0) {
    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  error_ = from.error_;
  // @@protoc_insertion_point(copy_constructor:cudarpc.cudaMemcpyResponse)
}

void cudaMemcpyResponse::SharedCtor() {
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = 0;
}

cudaMemcpyResponse::~cudaMemcpyResponse() {
  // @@protoc_insertion_point(destructor:cudarpc.cudaMemcpyResponse)
  SharedDtor();
}

void cudaMemcpyResponse::SharedDtor() {
  payload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cudaMemcpyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cudaMemcpyResponse::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cudaMemcpyResponse& cudaMemcpyResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cudaMemcpyResponse.base);
  return *internal_default_instance();
}


void cudaMemcpyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cudaMemcpyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = 0;
  _internal_metadata_.Clear();
}

bool cudaMemcpyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cudaMemcpyResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes payload = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_payload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cudaMemcpyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cudaMemcpyResponse)
  return false;
#undef DO_
}

void cudaMemcpyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cudaMemcpyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // bytes payload = 2;
  if (this->payload().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->payload(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cudaMemcpyResponse)
}

::google::protobuf::uint8* cudaMemcpyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cudaMemcpyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // bytes payload = 2;
  if (this->payload().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->payload(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cudaMemcpyResponse)
  return target;
}

size_t cudaMemcpyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cudaMemcpyResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes payload = 2;
  if (this->payload().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->payload());
  }

  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cudaMemcpyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cudaMemcpyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const cudaMemcpyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cudaMemcpyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cudaMemcpyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cudaMemcpyResponse)
    MergeFrom(*source);
  }
}

void cudaMemcpyResponse::MergeFrom(const cudaMemcpyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cudaMemcpyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.payload().size() > 0) {

    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void cudaMemcpyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cudaMemcpyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cudaMemcpyResponse::CopyFrom(const cudaMemcpyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cudaMemcpyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cudaMemcpyResponse::IsInitialized() const {
  return true;
}

void cudaMemcpyResponse::Swap(cudaMemcpyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cudaMemcpyResponse::InternalSwap(cudaMemcpyResponse* other) {
  using std::swap;
  payload_.Swap(&other->payload_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cudaMemcpyResponse::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cudaMemcpyAsyncQuery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cudaMemcpyAsyncQuery::kKindFieldNumber;
const int cudaMemcpyAsyncQuery::kSrcFieldNumber;
const int cudaMemcpyAsyncQuery::kDstFieldNumber;
const int cudaMemcpyAsyncQuery::kCountFieldNumber;
const int cudaMemcpyAsyncQuery::kPayloadFieldNumber;
const int cudaMemcpyAsyncQuery::kStreamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cudaMemcpyAsyncQuery::cudaMemcpyAsyncQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cudaMemcpyAsyncQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cudaMemcpyAsyncQuery)
}
cudaMemcpyAsyncQuery::cudaMemcpyAsyncQuery(const cudaMemcpyAsyncQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.payload().size() > 0) {
    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  stream_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stream().size() > 0) {
    stream_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stream_);
  }
  ::memcpy(&src_, &from.src_,
    static_cast<size_t>(reinterpret_cast<char*>(&kind_) -
    reinterpret_cast<char*>(&src_)) + sizeof(kind_));
  // @@protoc_insertion_point(copy_constructor:cudarpc.cudaMemcpyAsyncQuery)
}

void cudaMemcpyAsyncQuery::SharedCtor() {
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stream_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&src_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kind_) -
      reinterpret_cast<char*>(&src_)) + sizeof(kind_));
}

cudaMemcpyAsyncQuery::~cudaMemcpyAsyncQuery() {
  // @@protoc_insertion_point(destructor:cudarpc.cudaMemcpyAsyncQuery)
  SharedDtor();
}

void cudaMemcpyAsyncQuery::SharedDtor() {
  payload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stream_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cudaMemcpyAsyncQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cudaMemcpyAsyncQuery::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cudaMemcpyAsyncQuery& cudaMemcpyAsyncQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cudaMemcpyAsyncQuery.base);
  return *internal_default_instance();
}


void cudaMemcpyAsyncQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cudaMemcpyAsyncQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stream_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&src_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kind_) -
      reinterpret_cast<char*>(&src_)) + sizeof(kind_));
  _internal_metadata_.Clear();
}

bool cudaMemcpyAsyncQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cudaMemcpyAsyncQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 kind = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kind_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 src = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &src_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 dst = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dst_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes payload = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_payload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes stream = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_stream()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cudaMemcpyAsyncQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cudaMemcpyAsyncQuery)
  return false;
#undef DO_
}

void cudaMemcpyAsyncQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cudaMemcpyAsyncQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 kind = 1;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->kind(), output);
  }

  // uint64 src = 2;
  if (this->src() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->src(), output);
  }

  // uint64 dst = 3;
  if (this->dst() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->dst(), output);
  }

  // uint64 count = 4;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->count(), output);
  }

  // bytes payload = 5;
  if (this->payload().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->payload(), output);
  }

  // bytes stream = 6;
  if (this->stream().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->stream(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cudaMemcpyAsyncQuery)
}

::google::protobuf::uint8* cudaMemcpyAsyncQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cudaMemcpyAsyncQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 kind = 1;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->kind(), target);
  }

  // uint64 src = 2;
  if (this->src() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->src(), target);
  }

  // uint64 dst = 3;
  if (this->dst() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->dst(), target);
  }

  // uint64 count = 4;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->count(), target);
  }

  // bytes payload = 5;
  if (this->payload().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->payload(), target);
  }

  // bytes stream = 6;
  if (this->stream().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->stream(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cudaMemcpyAsyncQuery)
  return target;
}

size_t cudaMemcpyAsyncQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cudaMemcpyAsyncQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes payload = 5;
  if (this->payload().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->payload());
  }

  // bytes stream = 6;
  if (this->stream().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->stream());
  }

  // uint64 src = 2;
  if (this->src() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->src());
  }

  // uint64 dst = 3;
  if (this->dst() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dst());
  }

  // uint64 count = 4;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->count());
  }

  // int32 kind = 1;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->kind());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cudaMemcpyAsyncQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cudaMemcpyAsyncQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const cudaMemcpyAsyncQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cudaMemcpyAsyncQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cudaMemcpyAsyncQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cudaMemcpyAsyncQuery)
    MergeFrom(*source);
  }
}

void cudaMemcpyAsyncQuery::MergeFrom(const cudaMemcpyAsyncQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cudaMemcpyAsyncQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.payload().size() > 0) {

    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  if (from.stream().size() > 0) {

    stream_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stream_);
  }
  if (from.src() != 0) {
    set_src(from.src());
  }
  if (from.dst() != 0) {
    set_dst(from.dst());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.kind() != 0) {
    set_kind(from.kind());
  }
}

void cudaMemcpyAsyncQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cudaMemcpyAsyncQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cudaMemcpyAsyncQuery::CopyFrom(const cudaMemcpyAsyncQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cudaMemcpyAsyncQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cudaMemcpyAsyncQuery::IsInitialized() const {
  return true;
}

void cudaMemcpyAsyncQuery::Swap(cudaMemcpyAsyncQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cudaMemcpyAsyncQuery::InternalSwap(cudaMemcpyAsyncQuery* other) {
  using std::swap;
  payload_.Swap(&other->payload_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stream_.Swap(&other->stream_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(src_, other->src_);
  swap(dst_, other->dst_);
  swap(count_, other->count_);
  swap(kind_, other->kind_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cudaMemcpyAsyncQuery::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cudaGetSymbolAddressQuery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cudaGetSymbolAddressQuery::kSymbolFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cudaGetSymbolAddressQuery::cudaGetSymbolAddressQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cudaGetSymbolAddressQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cudaGetSymbolAddressQuery)
}
cudaGetSymbolAddressQuery::cudaGetSymbolAddressQuery(const cudaGetSymbolAddressQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  symbol_ = from.symbol_;
  // @@protoc_insertion_point(copy_constructor:cudarpc.cudaGetSymbolAddressQuery)
}

void cudaGetSymbolAddressQuery::SharedCtor() {
  symbol_ = GOOGLE_ULONGLONG(0);
}

cudaGetSymbolAddressQuery::~cudaGetSymbolAddressQuery() {
  // @@protoc_insertion_point(destructor:cudarpc.cudaGetSymbolAddressQuery)
  SharedDtor();
}

void cudaGetSymbolAddressQuery::SharedDtor() {
}

void cudaGetSymbolAddressQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cudaGetSymbolAddressQuery::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cudaGetSymbolAddressQuery& cudaGetSymbolAddressQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cudaGetSymbolAddressQuery.base);
  return *internal_default_instance();
}


void cudaGetSymbolAddressQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cudaGetSymbolAddressQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  symbol_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool cudaGetSymbolAddressQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cudaGetSymbolAddressQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 symbol = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &symbol_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cudaGetSymbolAddressQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cudaGetSymbolAddressQuery)
  return false;
#undef DO_
}

void cudaGetSymbolAddressQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cudaGetSymbolAddressQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 symbol = 1;
  if (this->symbol() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->symbol(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cudaGetSymbolAddressQuery)
}

::google::protobuf::uint8* cudaGetSymbolAddressQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cudaGetSymbolAddressQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 symbol = 1;
  if (this->symbol() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->symbol(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cudaGetSymbolAddressQuery)
  return target;
}

size_t cudaGetSymbolAddressQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cudaGetSymbolAddressQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 symbol = 1;
  if (this->symbol() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->symbol());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cudaGetSymbolAddressQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cudaGetSymbolAddressQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const cudaGetSymbolAddressQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cudaGetSymbolAddressQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cudaGetSymbolAddressQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cudaGetSymbolAddressQuery)
    MergeFrom(*source);
  }
}

void cudaGetSymbolAddressQuery::MergeFrom(const cudaGetSymbolAddressQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cudaGetSymbolAddressQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.symbol() != 0) {
    set_symbol(from.symbol());
  }
}

void cudaGetSymbolAddressQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cudaGetSymbolAddressQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cudaGetSymbolAddressQuery::CopyFrom(const cudaGetSymbolAddressQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cudaGetSymbolAddressQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cudaGetSymbolAddressQuery::IsInitialized() const {
  return true;
}

void cudaGetSymbolAddressQuery::Swap(cudaGetSymbolAddressQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cudaGetSymbolAddressQuery::InternalSwap(cudaGetSymbolAddressQuery* other) {
  using std::swap;
  swap(symbol_, other->symbol_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cudaGetSymbolAddressQuery::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cudaGetSymbolAddressResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cudaGetSymbolAddressResponse::kErrorFieldNumber;
const int cudaGetSymbolAddressResponse::kPtrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cudaGetSymbolAddressResponse::cudaGetSymbolAddressResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cudaGetSymbolAddressResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cudaGetSymbolAddressResponse)
}
cudaGetSymbolAddressResponse::cudaGetSymbolAddressResponse(const cudaGetSymbolAddressResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ptr_, &from.ptr_,
    static_cast<size_t>(reinterpret_cast<char*>(&error_) -
    reinterpret_cast<char*>(&ptr_)) + sizeof(error_));
  // @@protoc_insertion_point(copy_constructor:cudarpc.cudaGetSymbolAddressResponse)
}

void cudaGetSymbolAddressResponse::SharedCtor() {
  ::memset(&ptr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&ptr_)) + sizeof(error_));
}

cudaGetSymbolAddressResponse::~cudaGetSymbolAddressResponse() {
  // @@protoc_insertion_point(destructor:cudarpc.cudaGetSymbolAddressResponse)
  SharedDtor();
}

void cudaGetSymbolAddressResponse::SharedDtor() {
}

void cudaGetSymbolAddressResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cudaGetSymbolAddressResponse::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cudaGetSymbolAddressResponse& cudaGetSymbolAddressResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cudaGetSymbolAddressResponse.base);
  return *internal_default_instance();
}


void cudaGetSymbolAddressResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cudaGetSymbolAddressResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ptr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&ptr_)) + sizeof(error_));
  _internal_metadata_.Clear();
}

bool cudaGetSymbolAddressResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cudaGetSymbolAddressResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ptr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ptr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cudaGetSymbolAddressResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cudaGetSymbolAddressResponse)
  return false;
#undef DO_
}

void cudaGetSymbolAddressResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cudaGetSymbolAddressResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // uint64 ptr = 2;
  if (this->ptr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->ptr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cudaGetSymbolAddressResponse)
}

::google::protobuf::uint8* cudaGetSymbolAddressResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cudaGetSymbolAddressResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // uint64 ptr = 2;
  if (this->ptr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->ptr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cudaGetSymbolAddressResponse)
  return target;
}

size_t cudaGetSymbolAddressResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cudaGetSymbolAddressResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 ptr = 2;
  if (this->ptr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ptr());
  }

  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cudaGetSymbolAddressResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cudaGetSymbolAddressResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const cudaGetSymbolAddressResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cudaGetSymbolAddressResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cudaGetSymbolAddressResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cudaGetSymbolAddressResponse)
    MergeFrom(*source);
  }
}

void cudaGetSymbolAddressResponse::MergeFrom(const cudaGetSymbolAddressResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cudaGetSymbolAddressResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ptr() != 0) {
    set_ptr(from.ptr());
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void cudaGetSymbolAddressResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cudaGetSymbolAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cudaGetSymbolAddressResponse::CopyFrom(const cudaGetSymbolAddressResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cudaGetSymbolAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cudaGetSymbolAddressResponse::IsInitialized() const {
  return true;
}

void cudaGetSymbolAddressResponse::Swap(cudaGetSymbolAddressResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cudaGetSymbolAddressResponse::InternalSwap(cudaGetSymbolAddressResponse* other) {
  using std::swap;
  swap(ptr_, other->ptr_);
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cudaGetSymbolAddressResponse::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cudaMemcpyAsyncResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cudaMemcpyAsyncResponse::kPtrFieldNumber;
const int cudaMemcpyAsyncResponse::kPayloadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cudaMemcpyAsyncResponse::cudaMemcpyAsyncResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cudaMemcpyAsyncResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cudaMemcpyAsyncResponse)
}
cudaMemcpyAsyncResponse::cudaMemcpyAsyncResponse(const cudaMemcpyAsyncResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.payload().size() > 0) {
    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  ptr_ = from.ptr_;
  // @@protoc_insertion_point(copy_constructor:cudarpc.cudaMemcpyAsyncResponse)
}

void cudaMemcpyAsyncResponse::SharedCtor() {
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ptr_ = GOOGLE_ULONGLONG(0);
}

cudaMemcpyAsyncResponse::~cudaMemcpyAsyncResponse() {
  // @@protoc_insertion_point(destructor:cudarpc.cudaMemcpyAsyncResponse)
  SharedDtor();
}

void cudaMemcpyAsyncResponse::SharedDtor() {
  payload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cudaMemcpyAsyncResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cudaMemcpyAsyncResponse::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cudaMemcpyAsyncResponse& cudaMemcpyAsyncResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cudaMemcpyAsyncResponse.base);
  return *internal_default_instance();
}


void cudaMemcpyAsyncResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cudaMemcpyAsyncResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ptr_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool cudaMemcpyAsyncResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cudaMemcpyAsyncResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 ptr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ptr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes payload = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_payload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cudaMemcpyAsyncResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cudaMemcpyAsyncResponse)
  return false;
#undef DO_
}

void cudaMemcpyAsyncResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cudaMemcpyAsyncResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ptr = 1;
  if (this->ptr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->ptr(), output);
  }

  // bytes payload = 2;
  if (this->payload().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->payload(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cudaMemcpyAsyncResponse)
}

::google::protobuf::uint8* cudaMemcpyAsyncResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cudaMemcpyAsyncResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ptr = 1;
  if (this->ptr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->ptr(), target);
  }

  // bytes payload = 2;
  if (this->payload().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->payload(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cudaMemcpyAsyncResponse)
  return target;
}

size_t cudaMemcpyAsyncResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cudaMemcpyAsyncResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes payload = 2;
  if (this->payload().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->payload());
  }

  // uint64 ptr = 1;
  if (this->ptr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ptr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cudaMemcpyAsyncResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cudaMemcpyAsyncResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const cudaMemcpyAsyncResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cudaMemcpyAsyncResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cudaMemcpyAsyncResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cudaMemcpyAsyncResponse)
    MergeFrom(*source);
  }
}

void cudaMemcpyAsyncResponse::MergeFrom(const cudaMemcpyAsyncResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cudaMemcpyAsyncResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.payload().size() > 0) {

    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  if (from.ptr() != 0) {
    set_ptr(from.ptr());
  }
}

void cudaMemcpyAsyncResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cudaMemcpyAsyncResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cudaMemcpyAsyncResponse::CopyFrom(const cudaMemcpyAsyncResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cudaMemcpyAsyncResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cudaMemcpyAsyncResponse::IsInitialized() const {
  return true;
}

void cudaMemcpyAsyncResponse::Swap(cudaMemcpyAsyncResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cudaMemcpyAsyncResponse::InternalSwap(cudaMemcpyAsyncResponse* other) {
  using std::swap;
  payload_.Swap(&other->payload_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ptr_, other->ptr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cudaMemcpyAsyncResponse::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cudaMemsetAsyncQuery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cudaMemsetAsyncQuery::kPtrFieldNumber;
const int cudaMemsetAsyncQuery::kValueFieldNumber;
const int cudaMemsetAsyncQuery::kCountFieldNumber;
const int cudaMemsetAsyncQuery::kStreamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cudaMemsetAsyncQuery::cudaMemsetAsyncQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cudaMemsetAsyncQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cudaMemsetAsyncQuery)
}
cudaMemsetAsyncQuery::cudaMemsetAsyncQuery(const cudaMemsetAsyncQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  stream_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stream().size() > 0) {
    stream_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stream_);
  }
  ::memcpy(&ptr_, &from.ptr_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&ptr_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:cudarpc.cudaMemsetAsyncQuery)
}

void cudaMemsetAsyncQuery::SharedCtor() {
  stream_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ptr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&ptr_)) + sizeof(value_));
}

cudaMemsetAsyncQuery::~cudaMemsetAsyncQuery() {
  // @@protoc_insertion_point(destructor:cudarpc.cudaMemsetAsyncQuery)
  SharedDtor();
}

void cudaMemsetAsyncQuery::SharedDtor() {
  stream_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cudaMemsetAsyncQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cudaMemsetAsyncQuery::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cudaMemsetAsyncQuery& cudaMemsetAsyncQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cudaMemsetAsyncQuery.base);
  return *internal_default_instance();
}


void cudaMemsetAsyncQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cudaMemsetAsyncQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stream_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ptr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&ptr_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

bool cudaMemsetAsyncQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cudaMemsetAsyncQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 ptr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ptr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes stream = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_stream()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cudaMemsetAsyncQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cudaMemsetAsyncQuery)
  return false;
#undef DO_
}

void cudaMemsetAsyncQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cudaMemsetAsyncQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ptr = 1;
  if (this->ptr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->ptr(), output);
  }

  // int32 value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->value(), output);
  }

  // uint64 count = 3;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->count(), output);
  }

  // bytes stream = 4;
  if (this->stream().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->stream(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cudaMemsetAsyncQuery)
}

::google::protobuf::uint8* cudaMemsetAsyncQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cudaMemsetAsyncQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ptr = 1;
  if (this->ptr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->ptr(), target);
  }

  // int32 value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->value(), target);
  }

  // uint64 count = 3;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->count(), target);
  }

  // bytes stream = 4;
  if (this->stream().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->stream(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cudaMemsetAsyncQuery)
  return target;
}

size_t cudaMemsetAsyncQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cudaMemsetAsyncQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes stream = 4;
  if (this->stream().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->stream());
  }

  // uint64 ptr = 1;
  if (this->ptr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ptr());
  }

  // uint64 count = 3;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->count());
  }

  // int32 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cudaMemsetAsyncQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cudaMemsetAsyncQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const cudaMemsetAsyncQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cudaMemsetAsyncQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cudaMemsetAsyncQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cudaMemsetAsyncQuery)
    MergeFrom(*source);
  }
}

void cudaMemsetAsyncQuery::MergeFrom(const cudaMemsetAsyncQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cudaMemsetAsyncQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.stream().size() > 0) {

    stream_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stream_);
  }
  if (from.ptr() != 0) {
    set_ptr(from.ptr());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void cudaMemsetAsyncQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cudaMemsetAsyncQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cudaMemsetAsyncQuery::CopyFrom(const cudaMemsetAsyncQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cudaMemsetAsyncQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cudaMemsetAsyncQuery::IsInitialized() const {
  return true;
}

void cudaMemsetAsyncQuery::Swap(cudaMemsetAsyncQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cudaMemsetAsyncQuery::InternalSwap(cudaMemsetAsyncQuery* other) {
  using std::swap;
  stream_.Swap(&other->stream_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ptr_, other->ptr_);
  swap(count_, other->count_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cudaMemsetAsyncQuery::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AsyncResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AsyncResponse::kErrorFieldNumber;
const int AsyncResponse::kResponsesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AsyncResponse::AsyncResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_AsyncResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.AsyncResponse)
}
AsyncResponse::AsyncResponse(const AsyncResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      responses_(from.responses_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_ = from.error_;
  // @@protoc_insertion_point(copy_constructor:cudarpc.AsyncResponse)
}

void AsyncResponse::SharedCtor() {
  error_ = 0;
}

AsyncResponse::~AsyncResponse() {
  // @@protoc_insertion_point(destructor:cudarpc.AsyncResponse)
  SharedDtor();
}

void AsyncResponse::SharedDtor() {
}

void AsyncResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AsyncResponse::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AsyncResponse& AsyncResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_AsyncResponse.base);
  return *internal_default_instance();
}


void AsyncResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.AsyncResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  responses_.Clear();
  error_ = 0;
  _internal_metadata_.Clear();
}

bool AsyncResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.AsyncResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .cudarpc.cudaMemcpyAsyncResponse responses = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_responses()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.AsyncResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.AsyncResponse)
  return false;
#undef DO_
}

void AsyncResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.AsyncResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // repeated .cudarpc.cudaMemcpyAsyncResponse responses = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->responses_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->responses(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.AsyncResponse)
}

::google::protobuf::uint8* AsyncResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.AsyncResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // repeated .cudarpc.cudaMemcpyAsyncResponse responses = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->responses_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->responses(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.AsyncResponse)
  return target;
}

size_t AsyncResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.AsyncResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .cudarpc.cudaMemcpyAsyncResponse responses = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->responses_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->responses(static_cast<int>(i)));
    }
  }

  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AsyncResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.AsyncResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AsyncResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AsyncResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.AsyncResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.AsyncResponse)
    MergeFrom(*source);
  }
}

void AsyncResponse::MergeFrom(const AsyncResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.AsyncResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  responses_.MergeFrom(from.responses_);
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void AsyncResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.AsyncResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AsyncResponse::CopyFrom(const AsyncResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.AsyncResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AsyncResponse::IsInitialized() const {
  return true;
}

void AsyncResponse::Swap(AsyncResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AsyncResponse::InternalSwap(AsyncResponse* other) {
  using std::swap;
  CastToBase(&responses_)->InternalSwap(CastToBase(&other->responses_));
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AsyncResponse::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cudaStreamCreateWithFlagsQuery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cudaStreamCreateWithFlagsQuery::kFlagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cudaStreamCreateWithFlagsQuery::cudaStreamCreateWithFlagsQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cudaStreamCreateWithFlagsQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cudaStreamCreateWithFlagsQuery)
}
cudaStreamCreateWithFlagsQuery::cudaStreamCreateWithFlagsQuery(const cudaStreamCreateWithFlagsQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  flags_ = from.flags_;
  // @@protoc_insertion_point(copy_constructor:cudarpc.cudaStreamCreateWithFlagsQuery)
}

void cudaStreamCreateWithFlagsQuery::SharedCtor() {
  flags_ = 0u;
}

cudaStreamCreateWithFlagsQuery::~cudaStreamCreateWithFlagsQuery() {
  // @@protoc_insertion_point(destructor:cudarpc.cudaStreamCreateWithFlagsQuery)
  SharedDtor();
}

void cudaStreamCreateWithFlagsQuery::SharedDtor() {
}

void cudaStreamCreateWithFlagsQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cudaStreamCreateWithFlagsQuery::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cudaStreamCreateWithFlagsQuery& cudaStreamCreateWithFlagsQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cudaStreamCreateWithFlagsQuery.base);
  return *internal_default_instance();
}


void cudaStreamCreateWithFlagsQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cudaStreamCreateWithFlagsQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  flags_ = 0u;
  _internal_metadata_.Clear();
}

bool cudaStreamCreateWithFlagsQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cudaStreamCreateWithFlagsQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 flags = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cudaStreamCreateWithFlagsQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cudaStreamCreateWithFlagsQuery)
  return false;
#undef DO_
}

void cudaStreamCreateWithFlagsQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cudaStreamCreateWithFlagsQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 flags = 1;
  if (this->flags() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->flags(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cudaStreamCreateWithFlagsQuery)
}

::google::protobuf::uint8* cudaStreamCreateWithFlagsQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cudaStreamCreateWithFlagsQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 flags = 1;
  if (this->flags() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->flags(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cudaStreamCreateWithFlagsQuery)
  return target;
}

size_t cudaStreamCreateWithFlagsQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cudaStreamCreateWithFlagsQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 flags = 1;
  if (this->flags() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flags());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cudaStreamCreateWithFlagsQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cudaStreamCreateWithFlagsQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const cudaStreamCreateWithFlagsQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cudaStreamCreateWithFlagsQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cudaStreamCreateWithFlagsQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cudaStreamCreateWithFlagsQuery)
    MergeFrom(*source);
  }
}

void cudaStreamCreateWithFlagsQuery::MergeFrom(const cudaStreamCreateWithFlagsQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cudaStreamCreateWithFlagsQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.flags() != 0) {
    set_flags(from.flags());
  }
}

void cudaStreamCreateWithFlagsQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cudaStreamCreateWithFlagsQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cudaStreamCreateWithFlagsQuery::CopyFrom(const cudaStreamCreateWithFlagsQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cudaStreamCreateWithFlagsQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cudaStreamCreateWithFlagsQuery::IsInitialized() const {
  return true;
}

void cudaStreamCreateWithFlagsQuery::Swap(cudaStreamCreateWithFlagsQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cudaStreamCreateWithFlagsQuery::InternalSwap(cudaStreamCreateWithFlagsQuery* other) {
  using std::swap;
  swap(flags_, other->flags_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cudaStreamCreateWithFlagsQuery::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cudaStreamCreateWithPriorityQuery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cudaStreamCreateWithPriorityQuery::kFlagsFieldNumber;
const int cudaStreamCreateWithPriorityQuery::kPriorityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cudaStreamCreateWithPriorityQuery::cudaStreamCreateWithPriorityQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cudaStreamCreateWithPriorityQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cudaStreamCreateWithPriorityQuery)
}
cudaStreamCreateWithPriorityQuery::cudaStreamCreateWithPriorityQuery(const cudaStreamCreateWithPriorityQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&flags_, &from.flags_,
    static_cast<size_t>(reinterpret_cast<char*>(&priority_) -
    reinterpret_cast<char*>(&flags_)) + sizeof(priority_));
  // @@protoc_insertion_point(copy_constructor:cudarpc.cudaStreamCreateWithPriorityQuery)
}

void cudaStreamCreateWithPriorityQuery::SharedCtor() {
  ::memset(&flags_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&priority_) -
      reinterpret_cast<char*>(&flags_)) + sizeof(priority_));
}

cudaStreamCreateWithPriorityQuery::~cudaStreamCreateWithPriorityQuery() {
  // @@protoc_insertion_point(destructor:cudarpc.cudaStreamCreateWithPriorityQuery)
  SharedDtor();
}

void cudaStreamCreateWithPriorityQuery::SharedDtor() {
}

void cudaStreamCreateWithPriorityQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cudaStreamCreateWithPriorityQuery::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cudaStreamCreateWithPriorityQuery& cudaStreamCreateWithPriorityQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cudaStreamCreateWithPriorityQuery.base);
  return *internal_default_instance();
}


void cudaStreamCreateWithPriorityQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cudaStreamCreateWithPriorityQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&flags_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&priority_) -
      reinterpret_cast<char*>(&flags_)) + sizeof(priority_));
  _internal_metadata_.Clear();
}

bool cudaStreamCreateWithPriorityQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cudaStreamCreateWithPriorityQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 flags = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 priority = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &priority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cudaStreamCreateWithPriorityQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cudaStreamCreateWithPriorityQuery)
  return false;
#undef DO_
}

void cudaStreamCreateWithPriorityQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cudaStreamCreateWithPriorityQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 flags = 1;
  if (this->flags() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->flags(), output);
  }

  // int32 priority = 2;
  if (this->priority() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->priority(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cudaStreamCreateWithPriorityQuery)
}

::google::protobuf::uint8* cudaStreamCreateWithPriorityQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cudaStreamCreateWithPriorityQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 flags = 1;
  if (this->flags() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->flags(), target);
  }

  // int32 priority = 2;
  if (this->priority() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->priority(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cudaStreamCreateWithPriorityQuery)
  return target;
}

size_t cudaStreamCreateWithPriorityQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cudaStreamCreateWithPriorityQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 flags = 1;
  if (this->flags() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flags());
  }

  // int32 priority = 2;
  if (this->priority() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->priority());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cudaStreamCreateWithPriorityQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cudaStreamCreateWithPriorityQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const cudaStreamCreateWithPriorityQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cudaStreamCreateWithPriorityQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cudaStreamCreateWithPriorityQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cudaStreamCreateWithPriorityQuery)
    MergeFrom(*source);
  }
}

void cudaStreamCreateWithPriorityQuery::MergeFrom(const cudaStreamCreateWithPriorityQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cudaStreamCreateWithPriorityQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.flags() != 0) {
    set_flags(from.flags());
  }
  if (from.priority() != 0) {
    set_priority(from.priority());
  }
}

void cudaStreamCreateWithPriorityQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cudaStreamCreateWithPriorityQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cudaStreamCreateWithPriorityQuery::CopyFrom(const cudaStreamCreateWithPriorityQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cudaStreamCreateWithPriorityQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cudaStreamCreateWithPriorityQuery::IsInitialized() const {
  return true;
}

void cudaStreamCreateWithPriorityQuery::Swap(cudaStreamCreateWithPriorityQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cudaStreamCreateWithPriorityQuery::InternalSwap(cudaStreamCreateWithPriorityQuery* other) {
  using std::swap;
  swap(flags_, other->flags_);
  swap(priority_, other->priority_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cudaStreamCreateWithPriorityQuery::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cudaStreamCreateResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cudaStreamCreateResponse::kErrorFieldNumber;
const int cudaStreamCreateResponse::kStreamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cudaStreamCreateResponse::cudaStreamCreateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cudaStreamCreateResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cudaStreamCreateResponse)
}
cudaStreamCreateResponse::cudaStreamCreateResponse(const cudaStreamCreateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  stream_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stream().size() > 0) {
    stream_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stream_);
  }
  error_ = from.error_;
  // @@protoc_insertion_point(copy_constructor:cudarpc.cudaStreamCreateResponse)
}

void cudaStreamCreateResponse::SharedCtor() {
  stream_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = 0;
}

cudaStreamCreateResponse::~cudaStreamCreateResponse() {
  // @@protoc_insertion_point(destructor:cudarpc.cudaStreamCreateResponse)
  SharedDtor();
}

void cudaStreamCreateResponse::SharedDtor() {
  stream_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cudaStreamCreateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cudaStreamCreateResponse::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cudaStreamCreateResponse& cudaStreamCreateResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cudaStreamCreateResponse.base);
  return *internal_default_instance();
}


void cudaStreamCreateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cudaStreamCreateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stream_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = 0;
  _internal_metadata_.Clear();
}

bool cudaStreamCreateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cudaStreamCreateResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes stream = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_stream()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cudaStreamCreateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cudaStreamCreateResponse)
  return false;
#undef DO_
}

void cudaStreamCreateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cudaStreamCreateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // bytes stream = 2;
  if (this->stream().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->stream(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cudaStreamCreateResponse)
}

::google::protobuf::uint8* cudaStreamCreateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cudaStreamCreateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // bytes stream = 2;
  if (this->stream().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->stream(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cudaStreamCreateResponse)
  return target;
}

size_t cudaStreamCreateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cudaStreamCreateResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes stream = 2;
  if (this->stream().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->stream());
  }

  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cudaStreamCreateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cudaStreamCreateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const cudaStreamCreateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cudaStreamCreateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cudaStreamCreateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cudaStreamCreateResponse)
    MergeFrom(*source);
  }
}

void cudaStreamCreateResponse::MergeFrom(const cudaStreamCreateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cudaStreamCreateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.stream().size() > 0) {

    stream_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stream_);
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void cudaStreamCreateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cudaStreamCreateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cudaStreamCreateResponse::CopyFrom(const cudaStreamCreateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cudaStreamCreateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cudaStreamCreateResponse::IsInitialized() const {
  return true;
}

void cudaStreamCreateResponse::Swap(cudaStreamCreateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cudaStreamCreateResponse::InternalSwap(cudaStreamCreateResponse* other) {
  using std::swap;
  stream_.Swap(&other->stream_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cudaStreamCreateResponse::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cudaStreamIsCapturingResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cudaStreamIsCapturingResponse::kErrorFieldNumber;
const int cudaStreamIsCapturingResponse::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cudaStreamIsCapturingResponse::cudaStreamIsCapturingResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cudaStreamIsCapturingResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cudaStreamIsCapturingResponse)
}
cudaStreamIsCapturingResponse::cudaStreamIsCapturingResponse(const cudaStreamIsCapturingResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&error_, &from.error_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&error_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:cudarpc.cudaStreamIsCapturingResponse)
}

void cudaStreamIsCapturingResponse::SharedCtor() {
  ::memset(&error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&error_)) + sizeof(status_));
}

cudaStreamIsCapturingResponse::~cudaStreamIsCapturingResponse() {
  // @@protoc_insertion_point(destructor:cudarpc.cudaStreamIsCapturingResponse)
  SharedDtor();
}

void cudaStreamIsCapturingResponse::SharedDtor() {
}

void cudaStreamIsCapturingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cudaStreamIsCapturingResponse::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cudaStreamIsCapturingResponse& cudaStreamIsCapturingResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cudaStreamIsCapturingResponse.base);
  return *internal_default_instance();
}


void cudaStreamIsCapturingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cudaStreamIsCapturingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&error_)) + sizeof(status_));
  _internal_metadata_.Clear();
}

bool cudaStreamIsCapturingResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cudaStreamIsCapturingResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cudaStreamIsCapturingResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cudaStreamIsCapturingResponse)
  return false;
#undef DO_
}

void cudaStreamIsCapturingResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cudaStreamIsCapturingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // int32 status = 2;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cudaStreamIsCapturingResponse)
}

::google::protobuf::uint8* cudaStreamIsCapturingResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cudaStreamIsCapturingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // int32 status = 2;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cudaStreamIsCapturingResponse)
  return target;
}

size_t cudaStreamIsCapturingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cudaStreamIsCapturingResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  // int32 status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cudaStreamIsCapturingResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cudaStreamIsCapturingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const cudaStreamIsCapturingResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cudaStreamIsCapturingResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cudaStreamIsCapturingResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cudaStreamIsCapturingResponse)
    MergeFrom(*source);
  }
}

void cudaStreamIsCapturingResponse::MergeFrom(const cudaStreamIsCapturingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cudaStreamIsCapturingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error() != 0) {
    set_error(from.error());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void cudaStreamIsCapturingResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cudaStreamIsCapturingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cudaStreamIsCapturingResponse::CopyFrom(const cudaStreamIsCapturingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cudaStreamIsCapturingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cudaStreamIsCapturingResponse::IsInitialized() const {
  return true;
}

void cudaStreamIsCapturingResponse::Swap(cudaStreamIsCapturingResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cudaStreamIsCapturingResponse::InternalSwap(cudaStreamIsCapturingResponse* other) {
  using std::swap;
  swap(error_, other->error_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cudaStreamIsCapturingResponse::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cudaStreamGetCaptureInfoResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cudaStreamGetCaptureInfoResponse::kErrorFieldNumber;
const int cudaStreamGetCaptureInfoResponse::kStatusFieldNumber;
const int cudaStreamGetCaptureInfoResponse::kPidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cudaStreamGetCaptureInfoResponse::cudaStreamGetCaptureInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cudaStreamGetCaptureInfoResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cudaStreamGetCaptureInfoResponse)
}
cudaStreamGetCaptureInfoResponse::cudaStreamGetCaptureInfoResponse(const cudaStreamGetCaptureInfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&error_, &from.error_,
    static_cast<size_t>(reinterpret_cast<char*>(&pid_) -
    reinterpret_cast<char*>(&error_)) + sizeof(pid_));
  // @@protoc_insertion_point(copy_constructor:cudarpc.cudaStreamGetCaptureInfoResponse)
}

void cudaStreamGetCaptureInfoResponse::SharedCtor() {
  ::memset(&error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pid_) -
      reinterpret_cast<char*>(&error_)) + sizeof(pid_));
}

cudaStreamGetCaptureInfoResponse::~cudaStreamGetCaptureInfoResponse() {
  // @@protoc_insertion_point(destructor:cudarpc.cudaStreamGetCaptureInfoResponse)
  SharedDtor();
}

void cudaStreamGetCaptureInfoResponse::SharedDtor() {
}

void cudaStreamGetCaptureInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cudaStreamGetCaptureInfoResponse::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cudaStreamGetCaptureInfoResponse& cudaStreamGetCaptureInfoResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cudaStreamGetCaptureInfoResponse.base);
  return *internal_default_instance();
}


void cudaStreamGetCaptureInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cudaStreamGetCaptureInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pid_) -
      reinterpret_cast<char*>(&error_)) + sizeof(pid_));
  _internal_metadata_.Clear();
}

bool cudaStreamGetCaptureInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cudaStreamGetCaptureInfoResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 pid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cudaStreamGetCaptureInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cudaStreamGetCaptureInfoResponse)
  return false;
#undef DO_
}

void cudaStreamGetCaptureInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cudaStreamGetCaptureInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // int32 status = 2;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->status(), output);
  }

  // uint64 pid = 3;
  if (this->pid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->pid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cudaStreamGetCaptureInfoResponse)
}

::google::protobuf::uint8* cudaStreamGetCaptureInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cudaStreamGetCaptureInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // int32 status = 2;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->status(), target);
  }

  // uint64 pid = 3;
  if (this->pid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->pid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cudaStreamGetCaptureInfoResponse)
  return target;
}

size_t cudaStreamGetCaptureInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cudaStreamGetCaptureInfoResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  // int32 status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  // uint64 pid = 3;
  if (this->pid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->pid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cudaStreamGetCaptureInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cudaStreamGetCaptureInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const cudaStreamGetCaptureInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cudaStreamGetCaptureInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cudaStreamGetCaptureInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cudaStreamGetCaptureInfoResponse)
    MergeFrom(*source);
  }
}

void cudaStreamGetCaptureInfoResponse::MergeFrom(const cudaStreamGetCaptureInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cudaStreamGetCaptureInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error() != 0) {
    set_error(from.error());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.pid() != 0) {
    set_pid(from.pid());
  }
}

void cudaStreamGetCaptureInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cudaStreamGetCaptureInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cudaStreamGetCaptureInfoResponse::CopyFrom(const cudaStreamGetCaptureInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cudaStreamGetCaptureInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cudaStreamGetCaptureInfoResponse::IsInitialized() const {
  return true;
}

void cudaStreamGetCaptureInfoResponse::Swap(cudaStreamGetCaptureInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cudaStreamGetCaptureInfoResponse::InternalSwap(cudaStreamGetCaptureInfoResponse* other) {
  using std::swap;
  swap(error_, other->error_);
  swap(status_, other->status_);
  swap(pid_, other->pid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cudaStreamGetCaptureInfoResponse::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cudaEventCreateWithFlagsQuery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cudaEventCreateWithFlagsQuery::kFlagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cudaEventCreateWithFlagsQuery::cudaEventCreateWithFlagsQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cudaEventCreateWithFlagsQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cudaEventCreateWithFlagsQuery)
}
cudaEventCreateWithFlagsQuery::cudaEventCreateWithFlagsQuery(const cudaEventCreateWithFlagsQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  flags_ = from.flags_;
  // @@protoc_insertion_point(copy_constructor:cudarpc.cudaEventCreateWithFlagsQuery)
}

void cudaEventCreateWithFlagsQuery::SharedCtor() {
  flags_ = 0u;
}

cudaEventCreateWithFlagsQuery::~cudaEventCreateWithFlagsQuery() {
  // @@protoc_insertion_point(destructor:cudarpc.cudaEventCreateWithFlagsQuery)
  SharedDtor();
}

void cudaEventCreateWithFlagsQuery::SharedDtor() {
}

void cudaEventCreateWithFlagsQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cudaEventCreateWithFlagsQuery::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cudaEventCreateWithFlagsQuery& cudaEventCreateWithFlagsQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cudaEventCreateWithFlagsQuery.base);
  return *internal_default_instance();
}


void cudaEventCreateWithFlagsQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cudaEventCreateWithFlagsQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  flags_ = 0u;
  _internal_metadata_.Clear();
}

bool cudaEventCreateWithFlagsQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cudaEventCreateWithFlagsQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 flags = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cudaEventCreateWithFlagsQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cudaEventCreateWithFlagsQuery)
  return false;
#undef DO_
}

void cudaEventCreateWithFlagsQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cudaEventCreateWithFlagsQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 flags = 1;
  if (this->flags() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->flags(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cudaEventCreateWithFlagsQuery)
}

::google::protobuf::uint8* cudaEventCreateWithFlagsQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cudaEventCreateWithFlagsQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 flags = 1;
  if (this->flags() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->flags(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cudaEventCreateWithFlagsQuery)
  return target;
}

size_t cudaEventCreateWithFlagsQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cudaEventCreateWithFlagsQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 flags = 1;
  if (this->flags() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flags());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cudaEventCreateWithFlagsQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cudaEventCreateWithFlagsQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const cudaEventCreateWithFlagsQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cudaEventCreateWithFlagsQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cudaEventCreateWithFlagsQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cudaEventCreateWithFlagsQuery)
    MergeFrom(*source);
  }
}

void cudaEventCreateWithFlagsQuery::MergeFrom(const cudaEventCreateWithFlagsQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cudaEventCreateWithFlagsQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.flags() != 0) {
    set_flags(from.flags());
  }
}

void cudaEventCreateWithFlagsQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cudaEventCreateWithFlagsQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cudaEventCreateWithFlagsQuery::CopyFrom(const cudaEventCreateWithFlagsQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cudaEventCreateWithFlagsQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cudaEventCreateWithFlagsQuery::IsInitialized() const {
  return true;
}

void cudaEventCreateWithFlagsQuery::Swap(cudaEventCreateWithFlagsQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cudaEventCreateWithFlagsQuery::InternalSwap(cudaEventCreateWithFlagsQuery* other) {
  using std::swap;
  swap(flags_, other->flags_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cudaEventCreateWithFlagsQuery::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cudaEventCreateWithFlagsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cudaEventCreateWithFlagsResponse::kErrorFieldNumber;
const int cudaEventCreateWithFlagsResponse::kEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cudaEventCreateWithFlagsResponse::cudaEventCreateWithFlagsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cudaEventCreateWithFlagsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cudaEventCreateWithFlagsResponse)
}
cudaEventCreateWithFlagsResponse::cudaEventCreateWithFlagsResponse(const cudaEventCreateWithFlagsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  event_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.event().size() > 0) {
    event_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_);
  }
  error_ = from.error_;
  // @@protoc_insertion_point(copy_constructor:cudarpc.cudaEventCreateWithFlagsResponse)
}

void cudaEventCreateWithFlagsResponse::SharedCtor() {
  event_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = 0;
}

cudaEventCreateWithFlagsResponse::~cudaEventCreateWithFlagsResponse() {
  // @@protoc_insertion_point(destructor:cudarpc.cudaEventCreateWithFlagsResponse)
  SharedDtor();
}

void cudaEventCreateWithFlagsResponse::SharedDtor() {
  event_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cudaEventCreateWithFlagsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cudaEventCreateWithFlagsResponse::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cudaEventCreateWithFlagsResponse& cudaEventCreateWithFlagsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cudaEventCreateWithFlagsResponse.base);
  return *internal_default_instance();
}


void cudaEventCreateWithFlagsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cudaEventCreateWithFlagsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  event_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = 0;
  _internal_metadata_.Clear();
}

bool cudaEventCreateWithFlagsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cudaEventCreateWithFlagsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes event = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cudaEventCreateWithFlagsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cudaEventCreateWithFlagsResponse)
  return false;
#undef DO_
}

void cudaEventCreateWithFlagsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cudaEventCreateWithFlagsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(), output);
  }

  // bytes event = 2;
  if (this->event().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->event(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cudaEventCreateWithFlagsResponse)
}

::google::protobuf::uint8* cudaEventCreateWithFlagsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cudaEventCreateWithFlagsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error(), target);
  }

  // bytes event = 2;
  if (this->event().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->event(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cudaEventCreateWithFlagsResponse)
  return target;
}

size_t cudaEventCreateWithFlagsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cudaEventCreateWithFlagsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes event = 2;
  if (this->event().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->event());
  }

  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cudaEventCreateWithFlagsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cudaEventCreateWithFlagsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const cudaEventCreateWithFlagsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cudaEventCreateWithFlagsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cudaEventCreateWithFlagsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cudaEventCreateWithFlagsResponse)
    MergeFrom(*source);
  }
}

void cudaEventCreateWithFlagsResponse::MergeFrom(const cudaEventCreateWithFlagsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cudaEventCreateWithFlagsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.event().size() > 0) {

    event_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_);
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void cudaEventCreateWithFlagsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cudaEventCreateWithFlagsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cudaEventCreateWithFlagsResponse::CopyFrom(const cudaEventCreateWithFlagsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cudaEventCreateWithFlagsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cudaEventCreateWithFlagsResponse::IsInitialized() const {
  return true;
}

void cudaEventCreateWithFlagsResponse::Swap(cudaEventCreateWithFlagsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cudaEventCreateWithFlagsResponse::InternalSwap(cudaEventCreateWithFlagsResponse* other) {
  using std::swap;
  event_.Swap(&other->event_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cudaEventCreateWithFlagsResponse::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cudaEventRecordQuery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cudaEventRecordQuery::kEventFieldNumber;
const int cudaEventRecordQuery::kStreamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cudaEventRecordQuery::cudaEventRecordQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cudaEventRecordQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cudaEventRecordQuery)
}
cudaEventRecordQuery::cudaEventRecordQuery(const cudaEventRecordQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  event_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.event().size() > 0) {
    event_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_);
  }
  stream_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stream().size() > 0) {
    stream_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stream_);
  }
  // @@protoc_insertion_point(copy_constructor:cudarpc.cudaEventRecordQuery)
}

void cudaEventRecordQuery::SharedCtor() {
  event_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stream_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

cudaEventRecordQuery::~cudaEventRecordQuery() {
  // @@protoc_insertion_point(destructor:cudarpc.cudaEventRecordQuery)
  SharedDtor();
}

void cudaEventRecordQuery::SharedDtor() {
  event_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stream_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cudaEventRecordQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cudaEventRecordQuery::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cudaEventRecordQuery& cudaEventRecordQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cudaEventRecordQuery.base);
  return *internal_default_instance();
}


void cudaEventRecordQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cudaEventRecordQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  event_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stream_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool cudaEventRecordQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cudaEventRecordQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes event = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes stream = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_stream()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cudaEventRecordQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cudaEventRecordQuery)
  return false;
#undef DO_
}

void cudaEventRecordQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cudaEventRecordQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes event = 1;
  if (this->event().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->event(), output);
  }

  // bytes stream = 2;
  if (this->stream().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->stream(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cudaEventRecordQuery)
}

::google::protobuf::uint8* cudaEventRecordQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cudaEventRecordQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes event = 1;
  if (this->event().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->event(), target);
  }

  // bytes stream = 2;
  if (this->stream().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->stream(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cudaEventRecordQuery)
  return target;
}

size_t cudaEventRecordQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cudaEventRecordQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes event = 1;
  if (this->event().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->event());
  }

  // bytes stream = 2;
  if (this->stream().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->stream());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cudaEventRecordQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cudaEventRecordQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const cudaEventRecordQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cudaEventRecordQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cudaEventRecordQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cudaEventRecordQuery)
    MergeFrom(*source);
  }
}

void cudaEventRecordQuery::MergeFrom(const cudaEventRecordQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cudaEventRecordQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.event().size() > 0) {

    event_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_);
  }
  if (from.stream().size() > 0) {

    stream_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stream_);
  }
}

void cudaEventRecordQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cudaEventRecordQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cudaEventRecordQuery::CopyFrom(const cudaEventRecordQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cudaEventRecordQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cudaEventRecordQuery::IsInitialized() const {
  return true;
}

void cudaEventRecordQuery::Swap(cudaEventRecordQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cudaEventRecordQuery::InternalSwap(cudaEventRecordQuery* other) {
  using std::swap;
  event_.Swap(&other->event_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stream_.Swap(&other->stream_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cudaEventRecordQuery::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void cudaLaunchKernelQuery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int cudaLaunchKernelQuery::kFunctionFieldNumber;
const int cudaLaunchKernelQuery::kGridDimXFieldNumber;
const int cudaLaunchKernelQuery::kGridDimYFieldNumber;
const int cudaLaunchKernelQuery::kGridDimZFieldNumber;
const int cudaLaunchKernelQuery::kBlockDimXFieldNumber;
const int cudaLaunchKernelQuery::kBlockDimYFieldNumber;
const int cudaLaunchKernelQuery::kBlockDimZFieldNumber;
const int cudaLaunchKernelQuery::kArgsFieldNumber;
const int cudaLaunchKernelQuery::kSharedMemFieldNumber;
const int cudaLaunchKernelQuery::kStreamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

cudaLaunchKernelQuery::cudaLaunchKernelQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_cudarpc_2eproto::scc_info_cudaLaunchKernelQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cudarpc.cudaLaunchKernelQuery)
}
cudaLaunchKernelQuery::cudaLaunchKernelQuery(const cudaLaunchKernelQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      args_(from.args_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  function_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.function().size() > 0) {
    function_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.function_);
  }
  stream_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stream().size() > 0) {
    stream_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stream_);
  }
  ::memcpy(&grid_dim_x_, &from.grid_dim_x_,
    static_cast<size_t>(reinterpret_cast<char*>(&shared_mem_) -
    reinterpret_cast<char*>(&grid_dim_x_)) + sizeof(shared_mem_));
  // @@protoc_insertion_point(copy_constructor:cudarpc.cudaLaunchKernelQuery)
}

void cudaLaunchKernelQuery::SharedCtor() {
  function_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stream_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&grid_dim_x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shared_mem_) -
      reinterpret_cast<char*>(&grid_dim_x_)) + sizeof(shared_mem_));
}

cudaLaunchKernelQuery::~cudaLaunchKernelQuery() {
  // @@protoc_insertion_point(destructor:cudarpc.cudaLaunchKernelQuery)
  SharedDtor();
}

void cudaLaunchKernelQuery::SharedDtor() {
  function_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stream_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void cudaLaunchKernelQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* cudaLaunchKernelQuery::descriptor() {
  ::protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const cudaLaunchKernelQuery& cudaLaunchKernelQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_cudarpc_2eproto::scc_info_cudaLaunchKernelQuery.base);
  return *internal_default_instance();
}


void cudaLaunchKernelQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:cudarpc.cudaLaunchKernelQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  args_.Clear();
  function_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stream_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&grid_dim_x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shared_mem_) -
      reinterpret_cast<char*>(&grid_dim_x_)) + sizeof(shared_mem_));
  _internal_metadata_.Clear();
}

bool cudaLaunchKernelQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cudarpc.cudaLaunchKernelQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string function = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_function()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->function().data(), static_cast<int>(this->function().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "cudarpc.cudaLaunchKernelQuery.function"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 grid_dim_x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &grid_dim_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 grid_dim_y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &grid_dim_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 grid_dim_z = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &grid_dim_z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 block_dim_x = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &block_dim_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 block_dim_y = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &block_dim_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 block_dim_z = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &block_dim_z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes args = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_args()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 shared_mem = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &shared_mem_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes stream = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_stream()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cudarpc.cudaLaunchKernelQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cudarpc.cudaLaunchKernelQuery)
  return false;
#undef DO_
}

void cudaLaunchKernelQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cudarpc.cudaLaunchKernelQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string function = 1;
  if (this->function().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->function().data(), static_cast<int>(this->function().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cudarpc.cudaLaunchKernelQuery.function");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->function(), output);
  }

  // uint32 grid_dim_x = 2;
  if (this->grid_dim_x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->grid_dim_x(), output);
  }

  // uint32 grid_dim_y = 3;
  if (this->grid_dim_y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->grid_dim_y(), output);
  }

  // uint32 grid_dim_z = 4;
  if (this->grid_dim_z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->grid_dim_z(), output);
  }

  // uint32 block_dim_x = 5;
  if (this->block_dim_x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->block_dim_x(), output);
  }

  // uint32 block_dim_y = 6;
  if (this->block_dim_y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->block_dim_y(), output);
  }

  // uint32 block_dim_z = 7;
  if (this->block_dim_z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->block_dim_z(), output);
  }

  // repeated bytes args = 8;
  for (int i = 0, n = this->args_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      8, this->args(i), output);
  }

  // uint64 shared_mem = 9;
  if (this->shared_mem() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->shared_mem(), output);
  }

  // bytes stream = 10;
  if (this->stream().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->stream(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cudarpc.cudaLaunchKernelQuery)
}

::google::protobuf::uint8* cudaLaunchKernelQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cudarpc.cudaLaunchKernelQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string function = 1;
  if (this->function().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->function().data(), static_cast<int>(this->function().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cudarpc.cudaLaunchKernelQuery.function");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->function(), target);
  }

  // uint32 grid_dim_x = 2;
  if (this->grid_dim_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->grid_dim_x(), target);
  }

  // uint32 grid_dim_y = 3;
  if (this->grid_dim_y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->grid_dim_y(), target);
  }

  // uint32 grid_dim_z = 4;
  if (this->grid_dim_z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->grid_dim_z(), target);
  }

  // uint32 block_dim_x = 5;
  if (this->block_dim_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->block_dim_x(), target);
  }

  // uint32 block_dim_y = 6;
  if (this->block_dim_y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->block_dim_y(), target);
  }

  // uint32 block_dim_z = 7;
  if (this->block_dim_z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->block_dim_z(), target);
  }

  // repeated bytes args = 8;
  for (int i = 0, n = this->args_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(8, this->args(i), target);
  }

  // uint64 shared_mem = 9;
  if (this->shared_mem() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->shared_mem(), target);
  }

  // bytes stream = 10;
  if (this->stream().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->stream(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cudarpc.cudaLaunchKernelQuery)
  return target;
}

size_t cudaLaunchKernelQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cudarpc.cudaLaunchKernelQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes args = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->args_size());
  for (int i = 0, n = this->args_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->args(i));
  }

  // string function = 1;
  if (this->function().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->function());
  }

  // bytes stream = 10;
  if (this->stream().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->stream());
  }

  // uint32 grid_dim_x = 2;
  if (this->grid_dim_x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->grid_dim_x());
  }

  // uint32 grid_dim_y = 3;
  if (this->grid_dim_y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->grid_dim_y());
  }

  // uint32 grid_dim_z = 4;
  if (this->grid_dim_z() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->grid_dim_z());
  }

  // uint32 block_dim_x = 5;
  if (this->block_dim_x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->block_dim_x());
  }

  // uint32 block_dim_y = 6;
  if (this->block_dim_y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->block_dim_y());
  }

  // uint32 block_dim_z = 7;
  if (this->block_dim_z() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->block_dim_z());
  }

  // uint64 shared_mem = 9;
  if (this->shared_mem() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->shared_mem());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void cudaLaunchKernelQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cudarpc.cudaLaunchKernelQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const cudaLaunchKernelQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const cudaLaunchKernelQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cudarpc.cudaLaunchKernelQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cudarpc.cudaLaunchKernelQuery)
    MergeFrom(*source);
  }
}

void cudaLaunchKernelQuery::MergeFrom(const cudaLaunchKernelQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cudarpc.cudaLaunchKernelQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  args_.MergeFrom(from.args_);
  if (from.function().size() > 0) {

    function_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.function_);
  }
  if (from.stream().size() > 0) {

    stream_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stream_);
  }
  if (from.grid_dim_x() != 0) {
    set_grid_dim_x(from.grid_dim_x());
  }
  if (from.grid_dim_y() != 0) {
    set_grid_dim_y(from.grid_dim_y());
  }
  if (from.grid_dim_z() != 0) {
    set_grid_dim_z(from.grid_dim_z());
  }
  if (from.block_dim_x() != 0) {
    set_block_dim_x(from.block_dim_x());
  }
  if (from.block_dim_y() != 0) {
    set_block_dim_y(from.block_dim_y());
  }
  if (from.block_dim_z() != 0) {
    set_block_dim_z(from.block_dim_z());
  }
  if (from.shared_mem() != 0) {
    set_shared_mem(from.shared_mem());
  }
}

void cudaLaunchKernelQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cudarpc.cudaLaunchKernelQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cudaLaunchKernelQuery::CopyFrom(const cudaLaunchKernelQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cudarpc.cudaLaunchKernelQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cudaLaunchKernelQuery::IsInitialized() const {
  return true;
}

void cudaLaunchKernelQuery::Swap(cudaLaunchKernelQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void cudaLaunchKernelQuery::InternalSwap(cudaLaunchKernelQuery* other) {
  using std::swap;
  args_.InternalSwap(CastToBase(&other->args_));
  function_.Swap(&other->function_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stream_.Swap(&other->stream_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(grid_dim_x_, other->grid_dim_x_);
  swap(grid_dim_y_, other->grid_dim_y_);
  swap(grid_dim_z_, other->grid_dim_z_);
  swap(block_dim_x_, other->block_dim_x_);
  swap(block_dim_y_, other->block_dim_y_);
  swap(block_dim_z_, other->block_dim_z_);
  swap(shared_mem_, other->shared_mem_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata cudaLaunchKernelQuery::GetMetadata() const {
  protobuf_cudarpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cudarpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace cudarpc
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::WapperQuery* Arena::CreateMaybeMessage< ::cudarpc::WapperQuery >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::WapperQuery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::QueryList* Arena::CreateMaybeMessage< ::cudarpc::QueryList >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::QueryList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::genericResponse* Arena::CreateMaybeMessage< ::cudarpc::genericResponse >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::genericResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::handleResponse* Arena::CreateMaybeMessage< ::cudarpc::handleResponse >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::handleResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::setStreamQuery* Arena::CreateMaybeMessage< ::cudarpc::setStreamQuery >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::setStreamQuery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cublasSetMathModeQuery* Arena::CreateMaybeMessage< ::cudarpc::cublasSetMathModeQuery >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cublasSetMathModeQuery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cublasGetMathModeResponse* Arena::CreateMaybeMessage< ::cudarpc::cublasGetMathModeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cublasGetMathModeResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cublasSgemmQuery* Arena::CreateMaybeMessage< ::cudarpc::cublasSgemmQuery >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cublasSgemmQuery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cublasSgemmStridedBatchedQuery* Arena::CreateMaybeMessage< ::cudarpc::cublasSgemmStridedBatchedQuery >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cublasSgemmStridedBatchedQuery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cudnnCreateDesciptorResponse* Arena::CreateMaybeMessage< ::cudarpc::cudnnCreateDesciptorResponse >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cudnnCreateDesciptorResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cudnnSetTensorNdDescriptorQuery* Arena::CreateMaybeMessage< ::cudarpc::cudnnSetTensorNdDescriptorQuery >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cudnnSetTensorNdDescriptorQuery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cudnnSetFilterNdDescriptorQuery* Arena::CreateMaybeMessage< ::cudarpc::cudnnSetFilterNdDescriptorQuery >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cudnnSetFilterNdDescriptorQuery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cudnnSetConvolutionNdDescriptorQuery* Arena::CreateMaybeMessage< ::cudarpc::cudnnSetConvolutionNdDescriptorQuery >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cudnnSetConvolutionNdDescriptorQuery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cudnnSetConvolutionGroupCountQuery* Arena::CreateMaybeMessage< ::cudarpc::cudnnSetConvolutionGroupCountQuery >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cudnnSetConvolutionGroupCountQuery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cudnnSetConvolutionMathTypeQuery* Arena::CreateMaybeMessage< ::cudarpc::cudnnSetConvolutionMathTypeQuery >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cudnnSetConvolutionMathTypeQuery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cudnnGetConvolutionForwardAlgorithm_v7Query* Arena::CreateMaybeMessage< ::cudarpc::cudnnGetConvolutionForwardAlgorithm_v7Query >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cudnnGetConvolutionForwardAlgorithm_v7Query >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cudnnGetConvolutionForwardAlgorithm_v7Response* Arena::CreateMaybeMessage< ::cudarpc::cudnnGetConvolutionForwardAlgorithm_v7Response >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cudnnGetConvolutionForwardAlgorithm_v7Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cudnnConvolutionForwardQuery* Arena::CreateMaybeMessage< ::cudarpc::cudnnConvolutionForwardQuery >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cudnnConvolutionForwardQuery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cudnnBatchNormalizationForwardInferenceQuery* Arena::CreateMaybeMessage< ::cudarpc::cudnnBatchNormalizationForwardInferenceQuery >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cudnnBatchNormalizationForwardInferenceQuery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cuInitQuery* Arena::CreateMaybeMessage< ::cudarpc::cuInitQuery >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cuInitQuery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cuDevicePrimaryCtxGetStateQuery* Arena::CreateMaybeMessage< ::cudarpc::cuDevicePrimaryCtxGetStateQuery >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cuDevicePrimaryCtxGetStateQuery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cuDevicePrimaryCtxGetStateResponse* Arena::CreateMaybeMessage< ::cudarpc::cuDevicePrimaryCtxGetStateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cuDevicePrimaryCtxGetStateResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cuGetProcAddressQuery* Arena::CreateMaybeMessage< ::cudarpc::cuGetProcAddressQuery >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cuGetProcAddressQuery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cuGetProcAddressResponse* Arena::CreateMaybeMessage< ::cudarpc::cuGetProcAddressResponse >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cuGetProcAddressResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::getVersionResponse* Arena::CreateMaybeMessage< ::cudarpc::getVersionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::getVersionResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cudaGetDeviceResponse* Arena::CreateMaybeMessage< ::cudarpc::cudaGetDeviceResponse >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cudaGetDeviceResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cudaGetDeviceCountResponse* Arena::CreateMaybeMessage< ::cudarpc::cudaGetDeviceCountResponse >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cudaGetDeviceCountResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cudaGetDevicePropertiesQuery* Arena::CreateMaybeMessage< ::cudarpc::cudaGetDevicePropertiesQuery >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cudaGetDevicePropertiesQuery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cudaGetDevicePropertiesResponse* Arena::CreateMaybeMessage< ::cudarpc::cudaGetDevicePropertiesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cudaGetDevicePropertiesResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cudaDeviceGetAttributeQuery* Arena::CreateMaybeMessage< ::cudarpc::cudaDeviceGetAttributeQuery >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cudaDeviceGetAttributeQuery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cudaDeviceGetAttributeResponse* Arena::CreateMaybeMessage< ::cudarpc::cudaDeviceGetAttributeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cudaDeviceGetAttributeResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cudaMallocQuery* Arena::CreateMaybeMessage< ::cudarpc::cudaMallocQuery >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cudaMallocQuery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cudaMallocResponse* Arena::CreateMaybeMessage< ::cudarpc::cudaMallocResponse >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cudaMallocResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cudaFreeQuery* Arena::CreateMaybeMessage< ::cudarpc::cudaFreeQuery >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cudaFreeQuery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cudaMemcpyQuery* Arena::CreateMaybeMessage< ::cudarpc::cudaMemcpyQuery >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cudaMemcpyQuery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cudaMemcpyResponse* Arena::CreateMaybeMessage< ::cudarpc::cudaMemcpyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cudaMemcpyResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cudaMemcpyAsyncQuery* Arena::CreateMaybeMessage< ::cudarpc::cudaMemcpyAsyncQuery >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cudaMemcpyAsyncQuery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cudaGetSymbolAddressQuery* Arena::CreateMaybeMessage< ::cudarpc::cudaGetSymbolAddressQuery >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cudaGetSymbolAddressQuery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cudaGetSymbolAddressResponse* Arena::CreateMaybeMessage< ::cudarpc::cudaGetSymbolAddressResponse >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cudaGetSymbolAddressResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cudaMemcpyAsyncResponse* Arena::CreateMaybeMessage< ::cudarpc::cudaMemcpyAsyncResponse >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cudaMemcpyAsyncResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cudaMemsetAsyncQuery* Arena::CreateMaybeMessage< ::cudarpc::cudaMemsetAsyncQuery >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cudaMemsetAsyncQuery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::AsyncResponse* Arena::CreateMaybeMessage< ::cudarpc::AsyncResponse >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::AsyncResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cudaStreamCreateWithFlagsQuery* Arena::CreateMaybeMessage< ::cudarpc::cudaStreamCreateWithFlagsQuery >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cudaStreamCreateWithFlagsQuery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cudaStreamCreateWithPriorityQuery* Arena::CreateMaybeMessage< ::cudarpc::cudaStreamCreateWithPriorityQuery >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cudaStreamCreateWithPriorityQuery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cudaStreamCreateResponse* Arena::CreateMaybeMessage< ::cudarpc::cudaStreamCreateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cudaStreamCreateResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cudaStreamIsCapturingResponse* Arena::CreateMaybeMessage< ::cudarpc::cudaStreamIsCapturingResponse >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cudaStreamIsCapturingResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cudaStreamGetCaptureInfoResponse* Arena::CreateMaybeMessage< ::cudarpc::cudaStreamGetCaptureInfoResponse >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cudaStreamGetCaptureInfoResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cudaEventCreateWithFlagsQuery* Arena::CreateMaybeMessage< ::cudarpc::cudaEventCreateWithFlagsQuery >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cudaEventCreateWithFlagsQuery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cudaEventCreateWithFlagsResponse* Arena::CreateMaybeMessage< ::cudarpc::cudaEventCreateWithFlagsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cudaEventCreateWithFlagsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cudaEventRecordQuery* Arena::CreateMaybeMessage< ::cudarpc::cudaEventRecordQuery >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cudaEventRecordQuery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cudarpc::cudaLaunchKernelQuery* Arena::CreateMaybeMessage< ::cudarpc::cudaLaunchKernelQuery >(Arena* arena) {
  return Arena::CreateInternal< ::cudarpc::cudaLaunchKernelQuery >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
